// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mail.proto

#ifndef PROTOBUF_Mail_2eproto__INCLUDED
#define PROTOBUF_Mail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EnumDef.pb.h"
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Mail_2eproto();
void protobuf_AssignDesc_Mail_2eproto();
void protobuf_ShutdownFile_Mail_2eproto();

class mail_title;
class mail_full;
class S2S_Add_New_Mail;
class S2C_Mail_Have_New;
class C2S_Mail_Title;
class S2C_Mail_Title;
class C2S_Mail_Full;
class S2C_Mail_Full;
class C2S_Mail_Read;
class S2C_Mail_Read;

// ===================================================================

class mail_title : public ::google::protobuf::Message {
 public:
  mail_title();
  virtual ~mail_title();

  mail_title(const mail_title& from);

  inline mail_title& operator=(const mail_title& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_title& default_instance();

  void Swap(mail_title* other);

  // implements Message ----------------------------------------------

  mail_title* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_title& from);
  void MergeFrom(const mail_title& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int64 index() const;
  inline void set_index(::google::protobuf::int64 value);

  // required bytes title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required sint64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mail_title)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 index_;
  ::std::string* title_;
  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static mail_title* default_instance_;
};
// -------------------------------------------------------------------

class mail_full : public ::google::protobuf::Message {
 public:
  mail_full();
  virtual ~mail_full();

  mail_full(const mail_full& from);

  inline mail_full& operator=(const mail_full& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_full& default_instance();

  void Swap(mail_full* other);

  // implements Message ----------------------------------------------

  mail_full* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_full& from);
  void MergeFrom(const mail_full& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required sint64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required .mail_title title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::mail_title& title() const;
  inline ::mail_title* mutable_title();
  inline ::mail_title* release_title();
  inline void set_allocated_title(::mail_title* title);

  // required bytes mail_text = 4;
  inline bool has_mail_text() const;
  inline void clear_mail_text();
  static const int kMailTextFieldNumber = 4;
  inline const ::std::string& mail_text() const;
  inline void set_mail_text(const ::std::string& value);
  inline void set_mail_text(const char* value);
  inline void set_mail_text(const void* value, size_t size);
  inline ::std::string* mutable_mail_text();
  inline ::std::string* release_mail_text();
  inline void set_allocated_mail_text(::std::string* mail_text);

  // repeated .item_config list_mail_items = 5;
  inline int list_mail_items_size() const;
  inline void clear_list_mail_items();
  static const int kListMailItemsFieldNumber = 5;
  inline const ::item_config& list_mail_items(int index) const;
  inline ::item_config* mutable_list_mail_items(int index);
  inline ::item_config* add_list_mail_items();
  inline const ::google::protobuf::RepeatedPtrField< ::item_config >&
      list_mail_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::item_config >*
      mutable_list_mail_items();

  // @@protoc_insertion_point(class_scope:mail_full)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_mail_text();
  inline void clear_has_mail_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int64 tar_role_index_;
  ::mail_title* title_;
  ::std::string* mail_text_;
  ::google::protobuf::RepeatedPtrField< ::item_config > list_mail_items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static mail_full* default_instance_;
};
// -------------------------------------------------------------------

class S2S_Add_New_Mail : public ::google::protobuf::Message {
 public:
  S2S_Add_New_Mail();
  virtual ~S2S_Add_New_Mail();

  S2S_Add_New_Mail(const S2S_Add_New_Mail& from);

  inline S2S_Add_New_Mail& operator=(const S2S_Add_New_Mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2S_Add_New_Mail& default_instance();

  void Swap(S2S_Add_New_Mail* other);

  // implements Message ----------------------------------------------

  S2S_Add_New_Mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2S_Add_New_Mail& from);
  void MergeFrom(const S2S_Add_New_Mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required sint64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required .mail_full mail = 3;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 3;
  inline const ::mail_full& mail() const;
  inline ::mail_full* mutable_mail();
  inline ::mail_full* release_mail();
  inline void set_allocated_mail(::mail_full* mail);

  // @@protoc_insertion_point(class_scope:S2S_Add_New_Mail)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int64 tar_role_index_;
  ::mail_full* mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static S2S_Add_New_Mail* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Mail_Have_New : public ::google::protobuf::Message {
 public:
  S2C_Mail_Have_New();
  virtual ~S2C_Mail_Have_New();

  S2C_Mail_Have_New(const S2C_Mail_Have_New& from);

  inline S2C_Mail_Have_New& operator=(const S2C_Mail_Have_New& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Mail_Have_New& default_instance();

  void Swap(S2C_Mail_Have_New* other);

  // implements Message ----------------------------------------------

  S2C_Mail_Have_New* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Mail_Have_New& from);
  void MergeFrom(const S2C_Mail_Have_New& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Mail_Have_New)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static S2C_Mail_Have_New* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Mail_Title : public ::google::protobuf::Message {
 public:
  C2S_Mail_Title();
  virtual ~C2S_Mail_Title();

  C2S_Mail_Title(const C2S_Mail_Title& from);

  inline C2S_Mail_Title& operator=(const C2S_Mail_Title& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Mail_Title& default_instance();

  void Swap(C2S_Mail_Title* other);

  // implements Message ----------------------------------------------

  C2S_Mail_Title* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Mail_Title& from);
  void MergeFrom(const C2S_Mail_Title& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // optional sint64 int_addr = 2;
  inline bool has_int_addr() const;
  inline void clear_int_addr();
  static const int kIntAddrFieldNumber = 2;
  inline ::google::protobuf::int64 int_addr() const;
  inline void set_int_addr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Mail_Title)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_int_addr();
  inline void clear_has_int_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 int_addr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static C2S_Mail_Title* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Mail_Title : public ::google::protobuf::Message {
 public:
  S2C_Mail_Title();
  virtual ~S2C_Mail_Title();

  S2C_Mail_Title(const S2C_Mail_Title& from);

  inline S2C_Mail_Title& operator=(const S2C_Mail_Title& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Mail_Title& default_instance();

  void Swap(S2C_Mail_Title* other);

  // implements Message ----------------------------------------------

  S2C_Mail_Title* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Mail_Title& from);
  void MergeFrom(const S2C_Mail_Title& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // repeated .mail_title list_titles = 2;
  inline int list_titles_size() const;
  inline void clear_list_titles();
  static const int kListTitlesFieldNumber = 2;
  inline const ::mail_title& list_titles(int index) const;
  inline ::mail_title* mutable_list_titles(int index);
  inline ::mail_title* add_list_titles();
  inline const ::google::protobuf::RepeatedPtrField< ::mail_title >&
      list_titles() const;
  inline ::google::protobuf::RepeatedPtrField< ::mail_title >*
      mutable_list_titles();

  // @@protoc_insertion_point(class_scope:S2C_Mail_Title)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::RepeatedPtrField< ::mail_title > list_titles_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static S2C_Mail_Title* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Mail_Full : public ::google::protobuf::Message {
 public:
  C2S_Mail_Full();
  virtual ~C2S_Mail_Full();

  C2S_Mail_Full(const C2S_Mail_Full& from);

  inline C2S_Mail_Full& operator=(const C2S_Mail_Full& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Mail_Full& default_instance();

  void Swap(C2S_Mail_Full* other);

  // implements Message ----------------------------------------------

  C2S_Mail_Full* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Mail_Full& from);
  void MergeFrom(const C2S_Mail_Full& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint64 mail_index = 2;
  inline bool has_mail_index() const;
  inline void clear_mail_index();
  static const int kMailIndexFieldNumber = 2;
  inline ::google::protobuf::int64 mail_index() const;
  inline void set_mail_index(::google::protobuf::int64 value);

  // optional sint64 int_addr = 3;
  inline bool has_int_addr() const;
  inline void clear_int_addr();
  static const int kIntAddrFieldNumber = 3;
  inline ::google::protobuf::int64 int_addr() const;
  inline void set_int_addr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Mail_Full)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_mail_index();
  inline void clear_has_mail_index();
  inline void set_has_int_addr();
  inline void clear_has_int_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 mail_index_;
  ::google::protobuf::int64 int_addr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static C2S_Mail_Full* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Mail_Full : public ::google::protobuf::Message {
 public:
  S2C_Mail_Full();
  virtual ~S2C_Mail_Full();

  S2C_Mail_Full(const S2C_Mail_Full& from);

  inline S2C_Mail_Full& operator=(const S2C_Mail_Full& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Mail_Full& default_instance();

  void Swap(S2C_Mail_Full* other);

  // implements Message ----------------------------------------------

  S2C_Mail_Full* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Mail_Full& from);
  void MergeFrom(const S2C_Mail_Full& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // optional .mail_full mail = 3;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 3;
  inline const ::mail_full& mail() const;
  inline ::mail_full* mutable_mail();
  inline ::mail_full* release_mail();
  inline void set_allocated_mail(::mail_full* mail);

  // @@protoc_insertion_point(class_scope:S2C_Mail_Full)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::mail_full* mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static S2C_Mail_Full* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Mail_Read : public ::google::protobuf::Message {
 public:
  C2S_Mail_Read();
  virtual ~C2S_Mail_Read();

  C2S_Mail_Read(const C2S_Mail_Read& from);

  inline C2S_Mail_Read& operator=(const C2S_Mail_Read& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Mail_Read& default_instance();

  void Swap(C2S_Mail_Read* other);

  // implements Message ----------------------------------------------

  C2S_Mail_Read* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Mail_Read& from);
  void MergeFrom(const C2S_Mail_Read& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint64 mail_index = 2;
  inline bool has_mail_index() const;
  inline void clear_mail_index();
  static const int kMailIndexFieldNumber = 2;
  inline ::google::protobuf::int64 mail_index() const;
  inline void set_mail_index(::google::protobuf::int64 value);

  // optional sint64 int_addr = 3;
  inline bool has_int_addr() const;
  inline void clear_int_addr();
  static const int kIntAddrFieldNumber = 3;
  inline ::google::protobuf::int64 int_addr() const;
  inline void set_int_addr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Mail_Read)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_mail_index();
  inline void clear_has_mail_index();
  inline void set_has_int_addr();
  inline void clear_has_int_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 mail_index_;
  ::google::protobuf::int64 int_addr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static C2S_Mail_Read* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Mail_Read : public ::google::protobuf::Message {
 public:
  S2C_Mail_Read();
  virtual ~S2C_Mail_Read();

  S2C_Mail_Read(const S2C_Mail_Read& from);

  inline S2C_Mail_Read& operator=(const S2C_Mail_Read& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Mail_Read& default_instance();

  void Swap(S2C_Mail_Read* other);

  // implements Message ----------------------------------------------

  S2C_Mail_Read* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Mail_Read& from);
  void MergeFrom(const S2C_Mail_Read& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Mail_Read)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Mail_2eproto();
  friend void protobuf_AssignDesc_Mail_2eproto();
  friend void protobuf_ShutdownFile_Mail_2eproto();

  void InitAsDefaultInstance();
  static S2C_Mail_Read* default_instance_;
};
// ===================================================================


// ===================================================================

// mail_title

// required sint64 index = 1;
inline bool mail_title::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_title::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_title::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_title::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::int64 mail_title::index() const {
  return index_;
}
inline void mail_title::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
}

// required bytes title = 2;
inline bool mail_title::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_title::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_title::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_title::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& mail_title::title() const {
  return *title_;
}
inline void mail_title::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void mail_title::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void mail_title::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* mail_title::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* mail_title::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void mail_title::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint64 time = 3;
inline bool mail_title::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_title::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_title::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_title::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 mail_title::time() const {
  return time_;
}
inline void mail_title::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// mail_full

// required sint64 src_role_index = 1;
inline bool mail_full::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_full::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_full::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_full::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 mail_full::src_role_index() const {
  return src_role_index_;
}
inline void mail_full::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required sint64 tar_role_index = 2;
inline bool mail_full::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_full::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_full::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_full::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 mail_full::tar_role_index() const {
  return tar_role_index_;
}
inline void mail_full::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required .mail_title title = 3;
inline bool mail_full::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_full::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_full::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_full::clear_title() {
  if (title_ != nullptr) title_->::mail_title::Clear();
  clear_has_title();
}
inline const ::mail_title& mail_full::title() const {
  return title_ != nullptr ? *title_ : *default_instance_->title_;
}
inline ::mail_title* mail_full::mutable_title() {
  set_has_title();
  if (title_ == nullptr) title_ = new ::mail_title;
  return title_;
}
inline ::mail_title* mail_full::release_title() {
  clear_has_title();
  ::mail_title* temp = title_;
  title_ = nullptr;
  return temp;
}
inline void mail_full::set_allocated_title(::mail_title* title) {
  delete title_;
  title_ = title;
  if (title) {
    set_has_title();
  } else {
    clear_has_title();
  }
}

// required bytes mail_text = 4;
inline bool mail_full::has_mail_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mail_full::set_has_mail_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mail_full::clear_has_mail_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mail_full::clear_mail_text() {
  if (mail_text_ != &::google::protobuf::internal::kEmptyString) {
    mail_text_->clear();
  }
  clear_has_mail_text();
}
inline const ::std::string& mail_full::mail_text() const {
  return *mail_text_;
}
inline void mail_full::set_mail_text(const ::std::string& value) {
  set_has_mail_text();
  if (mail_text_ == &::google::protobuf::internal::kEmptyString) {
    mail_text_ = new ::std::string;
  }
  mail_text_->assign(value);
}
inline void mail_full::set_mail_text(const char* value) {
  set_has_mail_text();
  if (mail_text_ == &::google::protobuf::internal::kEmptyString) {
    mail_text_ = new ::std::string;
  }
  mail_text_->assign(value);
}
inline void mail_full::set_mail_text(const void* value, size_t size) {
  set_has_mail_text();
  if (mail_text_ == &::google::protobuf::internal::kEmptyString) {
    mail_text_ = new ::std::string;
  }
  mail_text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* mail_full::mutable_mail_text() {
  set_has_mail_text();
  if (mail_text_ == &::google::protobuf::internal::kEmptyString) {
    mail_text_ = new ::std::string;
  }
  return mail_text_;
}
inline ::std::string* mail_full::release_mail_text() {
  clear_has_mail_text();
  if (mail_text_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = mail_text_;
    mail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void mail_full::set_allocated_mail_text(::std::string* mail_text) {
  if (mail_text_ != &::google::protobuf::internal::kEmptyString) {
    delete mail_text_;
  }
  if (mail_text) {
    set_has_mail_text();
    mail_text_ = mail_text;
  } else {
    clear_has_mail_text();
    mail_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .item_config list_mail_items = 5;
inline int mail_full::list_mail_items_size() const {
  return list_mail_items_.size();
}
inline void mail_full::clear_list_mail_items() {
  list_mail_items_.Clear();
}
inline const ::item_config& mail_full::list_mail_items(int index) const {
  return list_mail_items_.Get(index);
}
inline ::item_config* mail_full::mutable_list_mail_items(int index) {
  return list_mail_items_.Mutable(index);
}
inline ::item_config* mail_full::add_list_mail_items() {
  return list_mail_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::item_config >&
mail_full::list_mail_items() const {
  return list_mail_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::item_config >*
mail_full::mutable_list_mail_items() {
  return &list_mail_items_;
}

// -------------------------------------------------------------------

// S2S_Add_New_Mail

// required sint64 src_role_index = 1;
inline bool S2S_Add_New_Mail::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2S_Add_New_Mail::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2S_Add_New_Mail::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2S_Add_New_Mail::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2S_Add_New_Mail::src_role_index() const {
  return src_role_index_;
}
inline void S2S_Add_New_Mail::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required sint64 tar_role_index = 2;
inline bool S2S_Add_New_Mail::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2S_Add_New_Mail::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2S_Add_New_Mail::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2S_Add_New_Mail::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2S_Add_New_Mail::tar_role_index() const {
  return tar_role_index_;
}
inline void S2S_Add_New_Mail::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required .mail_full mail = 3;
inline bool S2S_Add_New_Mail::has_mail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2S_Add_New_Mail::set_has_mail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2S_Add_New_Mail::clear_has_mail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2S_Add_New_Mail::clear_mail() {
  if (mail_ != nullptr) mail_->::mail_full::Clear();
  clear_has_mail();
}
inline const ::mail_full& S2S_Add_New_Mail::mail() const {
  return mail_ != nullptr ? *mail_ : *default_instance_->mail_;
}
inline ::mail_full* S2S_Add_New_Mail::mutable_mail() {
  set_has_mail();
  if (mail_ == nullptr) mail_ = new ::mail_full;
  return mail_;
}
inline ::mail_full* S2S_Add_New_Mail::release_mail() {
  clear_has_mail();
  ::mail_full* temp = mail_;
  mail_ = nullptr;
  return temp;
}
inline void S2S_Add_New_Mail::set_allocated_mail(::mail_full* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// S2C_Mail_Have_New

// required sint64 role_index = 1;
inline bool S2C_Mail_Have_New::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Mail_Have_New::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Mail_Have_New::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Mail_Have_New::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Mail_Have_New::role_index() const {
  return role_index_;
}
inline void S2C_Mail_Have_New::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// C2S_Mail_Title

// required sint64 role_index = 1;
inline bool C2S_Mail_Title::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Mail_Title::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Mail_Title::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Mail_Title::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Mail_Title::role_index() const {
  return role_index_;
}
inline void C2S_Mail_Title::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// optional sint64 int_addr = 2;
inline bool C2S_Mail_Title::has_int_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Mail_Title::set_has_int_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Mail_Title::clear_has_int_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Mail_Title::clear_int_addr() {
  int_addr_ = GOOGLE_LONGLONG(0);
  clear_has_int_addr();
}
inline ::google::protobuf::int64 C2S_Mail_Title::int_addr() const {
  return int_addr_;
}
inline void C2S_Mail_Title::set_int_addr(::google::protobuf::int64 value) {
  set_has_int_addr();
  int_addr_ = value;
}

// -------------------------------------------------------------------

// S2C_Mail_Title

// required sint64 role_index = 1;
inline bool S2C_Mail_Title::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Mail_Title::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Mail_Title::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Mail_Title::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Mail_Title::role_index() const {
  return role_index_;
}
inline void S2C_Mail_Title::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// repeated .mail_title list_titles = 2;
inline int S2C_Mail_Title::list_titles_size() const {
  return list_titles_.size();
}
inline void S2C_Mail_Title::clear_list_titles() {
  list_titles_.Clear();
}
inline const ::mail_title& S2C_Mail_Title::list_titles(int index) const {
  return list_titles_.Get(index);
}
inline ::mail_title* S2C_Mail_Title::mutable_list_titles(int index) {
  return list_titles_.Mutable(index);
}
inline ::mail_title* S2C_Mail_Title::add_list_titles() {
  return list_titles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mail_title >&
S2C_Mail_Title::list_titles() const {
  return list_titles_;
}
inline ::google::protobuf::RepeatedPtrField< ::mail_title >*
S2C_Mail_Title::mutable_list_titles() {
  return &list_titles_;
}

// -------------------------------------------------------------------

// C2S_Mail_Full

// required sint64 role_index = 1;
inline bool C2S_Mail_Full::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Mail_Full::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Mail_Full::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Mail_Full::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Mail_Full::role_index() const {
  return role_index_;
}
inline void C2S_Mail_Full::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint64 mail_index = 2;
inline bool C2S_Mail_Full::has_mail_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Mail_Full::set_has_mail_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Mail_Full::clear_has_mail_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Mail_Full::clear_mail_index() {
  mail_index_ = GOOGLE_LONGLONG(0);
  clear_has_mail_index();
}
inline ::google::protobuf::int64 C2S_Mail_Full::mail_index() const {
  return mail_index_;
}
inline void C2S_Mail_Full::set_mail_index(::google::protobuf::int64 value) {
  set_has_mail_index();
  mail_index_ = value;
}

// optional sint64 int_addr = 3;
inline bool C2S_Mail_Full::has_int_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Mail_Full::set_has_int_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Mail_Full::clear_has_int_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Mail_Full::clear_int_addr() {
  int_addr_ = GOOGLE_LONGLONG(0);
  clear_has_int_addr();
}
inline ::google::protobuf::int64 C2S_Mail_Full::int_addr() const {
  return int_addr_;
}
inline void C2S_Mail_Full::set_int_addr(::google::protobuf::int64 value) {
  set_has_int_addr();
  int_addr_ = value;
}

// -------------------------------------------------------------------

// S2C_Mail_Full

// required sint64 role_index = 1;
inline bool S2C_Mail_Full::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Mail_Full::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Mail_Full::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Mail_Full::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Mail_Full::role_index() const {
  return role_index_;
}
inline void S2C_Mail_Full::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Mail_Full::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Mail_Full::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Mail_Full::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Mail_Full::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Mail_Full::ret_code() const {
  return *ret_code_;
}
inline void S2C_Mail_Full::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Mail_Full::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Mail_Full::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Mail_Full::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Mail_Full::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Mail_Full::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .mail_full mail = 3;
inline bool S2C_Mail_Full::has_mail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Mail_Full::set_has_mail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Mail_Full::clear_has_mail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Mail_Full::clear_mail() {
  if (mail_ != nullptr) mail_->::mail_full::Clear();
  clear_has_mail();
}
inline const ::mail_full& S2C_Mail_Full::mail() const {
  return mail_ != nullptr ? *mail_ : *default_instance_->mail_;
}
inline ::mail_full* S2C_Mail_Full::mutable_mail() {
  set_has_mail();
  if (mail_ == nullptr) mail_ = new ::mail_full;
  return mail_;
}
inline ::mail_full* S2C_Mail_Full::release_mail() {
  clear_has_mail();
  ::mail_full* temp = mail_;
  mail_ = nullptr;
  return temp;
}
inline void S2C_Mail_Full::set_allocated_mail(::mail_full* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// C2S_Mail_Read

// required sint64 role_index = 1;
inline bool C2S_Mail_Read::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Mail_Read::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Mail_Read::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Mail_Read::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Mail_Read::role_index() const {
  return role_index_;
}
inline void C2S_Mail_Read::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint64 mail_index = 2;
inline bool C2S_Mail_Read::has_mail_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Mail_Read::set_has_mail_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Mail_Read::clear_has_mail_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Mail_Read::clear_mail_index() {
  mail_index_ = GOOGLE_LONGLONG(0);
  clear_has_mail_index();
}
inline ::google::protobuf::int64 C2S_Mail_Read::mail_index() const {
  return mail_index_;
}
inline void C2S_Mail_Read::set_mail_index(::google::protobuf::int64 value) {
  set_has_mail_index();
  mail_index_ = value;
}

// optional sint64 int_addr = 3;
inline bool C2S_Mail_Read::has_int_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Mail_Read::set_has_int_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Mail_Read::clear_has_int_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Mail_Read::clear_int_addr() {
  int_addr_ = GOOGLE_LONGLONG(0);
  clear_has_int_addr();
}
inline ::google::protobuf::int64 C2S_Mail_Read::int_addr() const {
  return int_addr_;
}
inline void C2S_Mail_Read::set_int_addr(::google::protobuf::int64 value) {
  set_has_int_addr();
  int_addr_ = value;
}

// -------------------------------------------------------------------

// S2C_Mail_Read

// required sint64 role_index = 1;
inline bool S2C_Mail_Read::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Mail_Read::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Mail_Read::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Mail_Read::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Mail_Read::role_index() const {
  return role_index_;
}
inline void S2C_Mail_Read::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Mail_Read::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Mail_Read::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Mail_Read::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Mail_Read::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Mail_Read::ret_code() const {
  return *ret_code_;
}
inline void S2C_Mail_Read::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Mail_Read::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Mail_Read::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Mail_Read::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Mail_Read::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Mail_Read::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Mail_2eproto__INCLUDED
