// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetPacket.proto

#ifndef PROTOBUF_NetPacket_2eproto__INCLUDED
#define PROTOBUF_NetPacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EnumDef.pb.h"
#include "Common.pb.h"
#include "Database.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_NetPacket_2eproto();
void protobuf_AssignDesc_NetPacket_2eproto();
void protobuf_ShutdownFile_NetPacket_2eproto();

class C2S_Ask_Login;
class S2C_Ret_Login;
class C2S_Ask_Register;
class S2C_Ret_Register;
class C2S_Ask_RoleSum;
class S2C_Ret_RoleSum;
class C2S_ClearRole;
class S2C_Response_ClearRole;
class C2S_RandNickName;
class S2C_RandNickName;
class C2S_Ask_RoleCreate;
class S2C_Ret_RoleCreate;
class C2S_Ask_RoleInfo;
class S2C_Ret_RoleInfo;
class C2S_Sync_RoleConfig;
class S2C_Sync_RoleConfig;
class C2S_Ask_Ready_EnterScene;
class S2C_Ret_Ready_EnterScene;
class C2S_Ask_EnterScene;
class C2S_RefreshScene;
class S2C_Notice_OffLine;
class C2S_Ask_Charset;
class C2S_Heartbeat;
class S2C_Heartbeat;
class C2S_GameCoin;
class S2C_Sync_Role_GameCoin;
class C2S_DiamondCoin;
class S2C_DiamondCoin;
class C2S_Stamina;
class S2C_Stamina;
class C2S_Exp;
class S2C_Sync_Role_Exp;
class S2C_Notice_Role_EnterScene;
class S2C_Notice_Role_LeaveScene;
class S2C_Sync_Role_PublicInfo;
class S2C_Sync_Role_PrivateInfo;
class S2C_Sync_RoleInfo;
class S2C_Sync_RoleAttr;
class C2S_Sync_Dir;
class S2C_Sync_Dir;
class C2S_Sync_RoleMove;
class S2C_Sync_RoleMove;
class S2C_Sync_RoleStopMove;
class S2C_Notice_Role_LevelUp;
class C2S_Ask_Comrade;
class S2C_Ret_Comrade;
class C2S_Ask_Chat;
class S2C_Ret_Chat;
class C2S_Change_Scene;
class C2S_TransPortChangeScene;
class S2C_TransPortChangeScene;
class C2S_NPC_ChangeScene;
class S2C_NPC_ChangeScene;
class C2S_Qiecuo_Battle;
class S2C_Qiecuo_Battle_Refuse;
class S2C_Qiecuo_Battle;
class S2C_Qiecuo_Confirm_Battle;
class C2S_Qiecuo_Confirm_Battle;
class C2S_Battle_Info;
class Battle_Role_Info;
class S2C_Battle_Info;
class C2S_Battle_Frame_Info;
class Battle_Frame_Info;
class S2C_Battle_Frame_Info;
class S2C_Avatar_Goods_List;
class C2S_Buy_Avatar_Goods;
class S2C_Buy_Avatar_Goods;
class C2S_Bag_Item;
class S2C_Sync_Role_Bag_Item;
class C2S_Bag_MoveItem;
class C2S_Use_Item;
class S2C_Use_Item;
class C2S_Role_Equip;
class S2C_Role_Equip;
class C2S_TakeOff_Equip;
class S2C_TakeOff_Equip;
class S2C_Bag_Item_Insert;
class S2C_Bag_Item_Remove;
class C2S_SuitShopInfo;
class S2C_SuitShopInfo;
class C2S_BuySuitInShop;
class S2C_BuySuitInShop;
class C2S_RoleSuitInfo;
class S2C_RoleSuitInfo;
class C2S_DressSuit;
class S2C_DressSuit;
class C2S_TakeOffSuit;
class S2C_TakeOffSuit;
class C2S_AskRewardList;
class S2C_Sync_Role_RewardList;
class C2S_FaceShopInfo;
class S2C_FaceShopInfo;
class C2S_BuyFaceInShop;
class S2C_BuyFaceInShop;
class C2S_RoleFaceInfo;
class S2C_RoleFaceInfo;
class C2S_DressFace;
class S2C_DressFace;
class C2S_TakeOffFace;
class S2C_TakeOffFace;
class C2S_ManualUpdateFaceShop;
class S2C_ManualUpdateFaceShop;
class C2S_PassRisk;
class S2C_PassRisk;
class C2S_ReadyEnterRisk;
class S2C_ReadyEnterRisk;
class S2C_NPC_Add_RecordQueue;
class S2C_NPC_Go_RecordQueue;
class C2S_Select_Recommend_Friends;
class S2C_Select_Recommend_Friends;
class C2S_FindFriend;
class S2C_FindFriend;
class C2S_Add_Friend;
class S2C_Add_Friend;
class C2S_Remove_Friend;
class S2C_Remove_Friend;
class S2C_Request_Add_Friend;
class C2S_Request_Add_Friend;
class S2C_Friend_Online;
class S2C_Friend_Offline;
class C2S_Skill_Study;
class S2C_Skill_Study;
class C2S_Skill_LevelUp;
class S2C_Skill_LevelUp;
class C2S_Skill_DressTalent;
class S2C_Skill_DressTalent;
class C2S_Skill_TakeOffTalent;
class S2C_Skill_TakeOffTalent;
class C2S_Skill_DressBook;
class S2C_Skill_DressBook;
class C2S_Skill_TakeOffBook;
class S2C_Skill_TakeOffBook;
class C2S_Ask_ChangeAttrPoint;
class C2S_Ask_SummonpetChangeAttrPoint;
class C2S_Ask_CreateTeam;
class S2C_Ret_CreateTeam;
class C2S_Ask_DestroyTeam;
class S2C_Ret_DestroyTeam;
class C2S_Ask_InviteEnterTeam;
class S2C_Ret_InviteEnterTeam;
class C2S_Ask_ApplyEnterTeam;
class S2C_Ret_ApplyEnterTeam;
class C2S_Ask_ApplyLeaveTeam;
class S2C_Ret_ApplyLeaveTeam;
class C2S_Ask_AgreeEnterTeam;
class S2C_Ret_AgreeEnterTeam;
class C2S_Ask_RefuseEnterTeam;
class S2C_Ret_RefuseEnterTeam;
class C2S_Ask_KickLeaveTeam;
class S2C_Ret_KickLeaveTeam;
class C2S_Ask_TeamInfo;
class S2C_Ret_TeamInfo;

// ===================================================================

class C2S_Ask_Login : public ::google::protobuf::Message {
 public:
  C2S_Ask_Login();
  virtual ~C2S_Ask_Login();

  C2S_Ask_Login(const C2S_Ask_Login& from);

  inline C2S_Ask_Login& operator=(const C2S_Ask_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_Login& default_instance();

  void Swap(C2S_Ask_Login* other);

  // implements Message ----------------------------------------------

  C2S_Ask_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_Login& from);
  void MergeFrom(const C2S_Ask_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required bytes password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const void* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // required bytes sid = 3;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 3;
  inline const ::std::string& sid() const;
  inline void set_sid(const ::std::string& value);
  inline void set_sid(const char* value);
  inline void set_sid(const void* value, size_t size);
  inline ::std::string* mutable_sid();
  inline ::std::string* release_sid();
  inline void set_allocated_sid(::std::string* sid);

  // @@protoc_insertion_point(class_scope:C2S_Ask_Login)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_sid();
  inline void clear_has_sid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* password_;
  ::std::string* sid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_Login* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_Login : public ::google::protobuf::Message {
 public:
  S2C_Ret_Login();
  virtual ~S2C_Ret_Login();

  S2C_Ret_Login(const S2C_Ret_Login& from);

  inline S2C_Ret_Login& operator=(const S2C_Ret_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_Login& default_instance();

  void Swap(S2C_Ret_Login* other);

  // implements Message ----------------------------------------------

  S2C_Ret_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_Login& from);
  void MergeFrom(const S2C_Ret_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required bool re_login = 2;
  inline bool has_re_login() const;
  inline void clear_re_login();
  static const int kReLoginFieldNumber = 2;
  inline bool re_login() const;
  inline void set_re_login(bool value);

  // required bytes account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // @@protoc_insertion_point(class_scope:S2C_Ret_Login)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_re_login();
  inline void clear_has_re_login();
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::std::string* account_;
  bool re_login_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_Login* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_Register : public ::google::protobuf::Message {
 public:
  C2S_Ask_Register();
  virtual ~C2S_Ask_Register();

  C2S_Ask_Register(const C2S_Ask_Register& from);

  inline C2S_Ask_Register& operator=(const C2S_Ask_Register& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_Register& default_instance();

  void Swap(C2S_Ask_Register* other);

  // implements Message ----------------------------------------------

  C2S_Ask_Register* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_Register& from);
  void MergeFrom(const C2S_Ask_Register& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required bytes password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const void* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // required int64 new_unit_index = 3;
  inline bool has_new_unit_index() const;
  inline void clear_new_unit_index();
  static const int kNewUnitIndexFieldNumber = 3;
  inline ::google::protobuf::int64 new_unit_index() const;
  inline void set_new_unit_index(::google::protobuf::int64 value);

  // optional int64 ret_unitindex = 4;
  inline bool has_ret_unitindex() const;
  inline void clear_ret_unitindex();
  static const int kRetUnitindexFieldNumber = 4;
  inline ::google::protobuf::int64 ret_unitindex() const;
  inline void set_ret_unitindex(::google::protobuf::int64 value);

  // optional int64 ret_intaddr = 5;
  inline bool has_ret_intaddr() const;
  inline void clear_ret_intaddr();
  static const int kRetIntaddrFieldNumber = 5;
  inline ::google::protobuf::int64 ret_intaddr() const;
  inline void set_ret_intaddr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_Register)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_new_unit_index();
  inline void clear_has_new_unit_index();
  inline void set_has_ret_unitindex();
  inline void clear_has_ret_unitindex();
  inline void set_has_ret_intaddr();
  inline void clear_has_ret_intaddr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* password_;
  ::google::protobuf::int64 new_unit_index_;
  ::google::protobuf::int64 ret_unitindex_;
  ::google::protobuf::int64 ret_intaddr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_Register* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_Register : public ::google::protobuf::Message {
 public:
  S2C_Ret_Register();
  virtual ~S2C_Ret_Register();

  S2C_Ret_Register(const S2C_Ret_Register& from);

  inline S2C_Ret_Register& operator=(const S2C_Ret_Register& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_Register& default_instance();

  void Swap(S2C_Ret_Register* other);

  // implements Message ----------------------------------------------

  S2C_Ret_Register* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_Register& from);
  void MergeFrom(const S2C_Ret_Register& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required bytes account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int64 account_key = 3;
  inline bool has_account_key() const;
  inline void clear_account_key();
  static const int kAccountKeyFieldNumber = 3;
  inline ::google::protobuf::int64 account_key() const;
  inline void set_account_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Ret_Register)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_account_key();
  inline void clear_has_account_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::std::string* account_;
  ::google::protobuf::int64 account_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_Register* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_RoleSum : public ::google::protobuf::Message {
 public:
  C2S_Ask_RoleSum();
  virtual ~C2S_Ask_RoleSum();

  C2S_Ask_RoleSum(const C2S_Ask_RoleSum& from);

  inline C2S_Ask_RoleSum& operator=(const C2S_Ask_RoleSum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_RoleSum& default_instance();

  void Swap(C2S_Ask_RoleSum* other);

  // implements Message ----------------------------------------------

  C2S_Ask_RoleSum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_RoleSum& from);
  void MergeFrom(const C2S_Ask_RoleSum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int64 ret_unitindex = 2;
  inline bool has_ret_unitindex() const;
  inline void clear_ret_unitindex();
  static const int kRetUnitindexFieldNumber = 2;
  inline ::google::protobuf::int64 ret_unitindex() const;
  inline void set_ret_unitindex(::google::protobuf::int64 value);

  // optional int64 ret_intaddr = 3;
  inline bool has_ret_intaddr() const;
  inline void clear_ret_intaddr();
  static const int kRetIntaddrFieldNumber = 3;
  inline ::google::protobuf::int64 ret_intaddr() const;
  inline void set_ret_intaddr(::google::protobuf::int64 value);

  // optional int64 account_key = 4;
  inline bool has_account_key() const;
  inline void clear_account_key();
  static const int kAccountKeyFieldNumber = 4;
  inline ::google::protobuf::int64 account_key() const;
  inline void set_account_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_RoleSum)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_ret_unitindex();
  inline void clear_has_ret_unitindex();
  inline void set_has_ret_intaddr();
  inline void clear_has_ret_intaddr();
  inline void set_has_account_key();
  inline void clear_has_account_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::int64 ret_unitindex_;
  ::google::protobuf::int64 ret_intaddr_;
  ::google::protobuf::int64 account_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_RoleSum* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_RoleSum : public ::google::protobuf::Message {
 public:
  S2C_Ret_RoleSum();
  virtual ~S2C_Ret_RoleSum();

  S2C_Ret_RoleSum(const S2C_Ret_RoleSum& from);

  inline S2C_Ret_RoleSum& operator=(const S2C_Ret_RoleSum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_RoleSum& default_instance();

  void Swap(S2C_Ret_RoleSum* other);

  // implements Message ----------------------------------------------

  S2C_Ret_RoleSum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_RoleSum& from);
  void MergeFrom(const S2C_Ret_RoleSum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // repeated int64 list_role_index = 2;
  inline int list_role_index_size() const;
  inline void clear_list_role_index();
  static const int kListRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 list_role_index(int index) const;
  inline void set_list_role_index(int index, ::google::protobuf::int64 value);
  inline void add_list_role_index(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      list_role_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_list_role_index();

  // @@protoc_insertion_point(class_scope:S2C_Ret_RoleSum)
 private:
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > list_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_RoleSum* default_instance_;
};
// -------------------------------------------------------------------

class C2S_ClearRole : public ::google::protobuf::Message {
 public:
  C2S_ClearRole();
  virtual ~C2S_ClearRole();

  C2S_ClearRole(const C2S_ClearRole& from);

  inline C2S_ClearRole& operator=(const C2S_ClearRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_ClearRole& default_instance();

  void Swap(C2S_ClearRole* other);

  // implements Message ----------------------------------------------

  C2S_ClearRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_ClearRole& from);
  void MergeFrom(const C2S_ClearRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int64 ret_unitindex = 2;
  inline bool has_ret_unitindex() const;
  inline void clear_ret_unitindex();
  static const int kRetUnitindexFieldNumber = 2;
  inline ::google::protobuf::int64 ret_unitindex() const;
  inline void set_ret_unitindex(::google::protobuf::int64 value);

  // optional int64 ret_intaddr = 3;
  inline bool has_ret_intaddr() const;
  inline void clear_ret_intaddr();
  static const int kRetIntaddrFieldNumber = 3;
  inline ::google::protobuf::int64 ret_intaddr() const;
  inline void set_ret_intaddr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_ClearRole)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_ret_unitindex();
  inline void clear_has_ret_unitindex();
  inline void set_has_ret_intaddr();
  inline void clear_has_ret_intaddr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::int64 ret_unitindex_;
  ::google::protobuf::int64 ret_intaddr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_ClearRole* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Response_ClearRole : public ::google::protobuf::Message {
 public:
  S2C_Response_ClearRole();
  virtual ~S2C_Response_ClearRole();

  S2C_Response_ClearRole(const S2C_Response_ClearRole& from);

  inline S2C_Response_ClearRole& operator=(const S2C_Response_ClearRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Response_ClearRole& default_instance();

  void Swap(S2C_Response_ClearRole* other);

  // implements Message ----------------------------------------------

  S2C_Response_ClearRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Response_ClearRole& from);
  void MergeFrom(const S2C_Response_ClearRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required bool is_ok = 2;
  inline bool has_is_ok() const;
  inline void clear_is_ok();
  static const int kIsOkFieldNumber = 2;
  inline bool is_ok() const;
  inline void set_is_ok(bool value);

  // @@protoc_insertion_point(class_scope:S2C_Response_ClearRole)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_is_ok();
  inline void clear_has_is_ok();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  bool is_ok_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Response_ClearRole* default_instance_;
};
// -------------------------------------------------------------------

class C2S_RandNickName : public ::google::protobuf::Message {
 public:
  C2S_RandNickName();
  virtual ~C2S_RandNickName();

  C2S_RandNickName(const C2S_RandNickName& from);

  inline C2S_RandNickName& operator=(const C2S_RandNickName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_RandNickName& default_instance();

  void Swap(C2S_RandNickName* other);

  // implements Message ----------------------------------------------

  C2S_RandNickName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_RandNickName& from);
  void MergeFrom(const C2S_RandNickName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional int64 ret_unitindex = 2;
  inline bool has_ret_unitindex() const;
  inline void clear_ret_unitindex();
  static const int kRetUnitindexFieldNumber = 2;
  inline ::google::protobuf::int64 ret_unitindex() const;
  inline void set_ret_unitindex(::google::protobuf::int64 value);

  // optional int64 ret_intaddr = 3;
  inline bool has_ret_intaddr() const;
  inline void clear_ret_intaddr();
  static const int kRetIntaddrFieldNumber = 3;
  inline ::google::protobuf::int64 ret_intaddr() const;
  inline void set_ret_intaddr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_RandNickName)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_ret_unitindex();
  inline void clear_has_ret_unitindex();
  inline void set_has_ret_intaddr();
  inline void clear_has_ret_intaddr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::int64 ret_unitindex_;
  ::google::protobuf::int64 ret_intaddr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_RandNickName* default_instance_;
};
// -------------------------------------------------------------------

class S2C_RandNickName : public ::google::protobuf::Message {
 public:
  S2C_RandNickName();
  virtual ~S2C_RandNickName();

  S2C_RandNickName(const S2C_RandNickName& from);

  inline S2C_RandNickName& operator=(const S2C_RandNickName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_RandNickName& default_instance();

  void Swap(S2C_RandNickName* other);

  // implements Message ----------------------------------------------

  S2C_RandNickName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_RandNickName& from);
  void MergeFrom(const S2C_RandNickName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // repeated bytes list_nick_name = 2;
  inline int list_nick_name_size() const;
  inline void clear_list_nick_name();
  static const int kListNickNameFieldNumber = 2;
  inline const ::std::string& list_nick_name(int index) const;
  inline ::std::string* mutable_list_nick_name(int index);
  inline void set_list_nick_name(int index, const ::std::string& value);
  inline void set_list_nick_name(int index, const char* value);
  inline void set_list_nick_name(int index, const void* value, size_t size);
  inline ::std::string* add_list_nick_name();
  inline void add_list_nick_name(const ::std::string& value);
  inline void add_list_nick_name(const char* value);
  inline void add_list_nick_name(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& list_nick_name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_list_nick_name();

  // @@protoc_insertion_point(class_scope:S2C_RandNickName)
 private:
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::RepeatedPtrField< ::std::string> list_nick_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_RandNickName* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_RoleCreate : public ::google::protobuf::Message {
 public:
  C2S_Ask_RoleCreate();
  virtual ~C2S_Ask_RoleCreate();

  C2S_Ask_RoleCreate(const C2S_Ask_RoleCreate& from);

  inline C2S_Ask_RoleCreate& operator=(const C2S_Ask_RoleCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_RoleCreate& default_instance();

  void Swap(C2S_Ask_RoleCreate* other);

  // implements Message ----------------------------------------------

  C2S_Ask_RoleCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_RoleCreate& from);
  void MergeFrom(const C2S_Ask_RoleCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes nick_name = 1;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // required bytes account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required bytes device_key = 3;
  inline bool has_device_key() const;
  inline void clear_device_key();
  static const int kDeviceKeyFieldNumber = 3;
  inline const ::std::string& device_key() const;
  inline void set_device_key(const ::std::string& value);
  inline void set_device_key(const char* value);
  inline void set_device_key(const void* value, size_t size);
  inline ::std::string* mutable_device_key();
  inline ::std::string* release_device_key();
  inline void set_allocated_device_key(::std::string* device_key);

  // required bytes device_token = 4;
  inline bool has_device_token() const;
  inline void clear_device_token();
  static const int kDeviceTokenFieldNumber = 4;
  inline const ::std::string& device_token() const;
  inline void set_device_token(const ::std::string& value);
  inline void set_device_token(const char* value);
  inline void set_device_token(const void* value, size_t size);
  inline ::std::string* mutable_device_token();
  inline ::std::string* release_device_token();
  inline void set_allocated_device_token(::std::string* device_token);

  // required bytes device_type = 5;
  inline bool has_device_type() const;
  inline void clear_device_type();
  static const int kDeviceTypeFieldNumber = 5;
  inline const ::std::string& device_type() const;
  inline void set_device_type(const ::std::string& value);
  inline void set_device_type(const char* value);
  inline void set_device_type(const void* value, size_t size);
  inline ::std::string* mutable_device_type();
  inline ::std::string* release_device_type();
  inline void set_allocated_device_type(::std::string* device_type);

  // required bytes platform_type = 6;
  inline bool has_platform_type() const;
  inline void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 6;
  inline const ::std::string& platform_type() const;
  inline void set_platform_type(const ::std::string& value);
  inline void set_platform_type(const char* value);
  inline void set_platform_type(const void* value, size_t size);
  inline ::std::string* mutable_platform_type();
  inline ::std::string* release_platform_type();
  inline void set_allocated_platform_type(::std::string* platform_type);

  // required bytes role_type = 7;
  inline bool has_role_type() const;
  inline void clear_role_type();
  static const int kRoleTypeFieldNumber = 7;
  inline const ::std::string& role_type() const;
  inline void set_role_type(const ::std::string& value);
  inline void set_role_type(const char* value);
  inline void set_role_type(const void* value, size_t size);
  inline ::std::string* mutable_role_type();
  inline ::std::string* release_role_type();
  inline void set_allocated_role_type(::std::string* role_type);

  // optional bytes password = 8;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 8;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const void* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional .universal_data role_info = 9;
  inline bool has_role_info() const;
  inline void clear_role_info();
  static const int kRoleInfoFieldNumber = 9;
  inline const ::universal_data& role_info() const;
  inline ::universal_data* mutable_role_info();
  inline ::universal_data* release_role_info();
  inline void set_allocated_role_info(::universal_data* role_info);

  // optional int64 ret_unitindex = 10;
  inline bool has_ret_unitindex() const;
  inline void clear_ret_unitindex();
  static const int kRetUnitindexFieldNumber = 10;
  inline ::google::protobuf::int64 ret_unitindex() const;
  inline void set_ret_unitindex(::google::protobuf::int64 value);

  // optional int64 ret_intaddr = 11;
  inline bool has_ret_intaddr() const;
  inline void clear_ret_intaddr();
  static const int kRetIntaddrFieldNumber = 11;
  inline ::google::protobuf::int64 ret_intaddr() const;
  inline void set_ret_intaddr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_RoleCreate)
 private:
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_device_key();
  inline void clear_has_device_key();
  inline void set_has_device_token();
  inline void clear_has_device_token();
  inline void set_has_device_type();
  inline void clear_has_device_type();
  inline void set_has_platform_type();
  inline void clear_has_platform_type();
  inline void set_has_role_type();
  inline void clear_has_role_type();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_role_info();
  inline void clear_has_role_info();
  inline void set_has_ret_unitindex();
  inline void clear_has_ret_unitindex();
  inline void set_has_ret_intaddr();
  inline void clear_has_ret_intaddr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_name_;
  ::std::string* account_;
  ::std::string* device_key_;
  ::std::string* device_token_;
  ::std::string* device_type_;
  ::std::string* platform_type_;
  ::std::string* role_type_;
  ::std::string* password_;
  ::universal_data* role_info_;
  ::google::protobuf::int64 ret_unitindex_;
  ::google::protobuf::int64 ret_intaddr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_RoleCreate* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_RoleCreate : public ::google::protobuf::Message {
 public:
  S2C_Ret_RoleCreate();
  virtual ~S2C_Ret_RoleCreate();

  S2C_Ret_RoleCreate(const S2C_Ret_RoleCreate& from);

  inline S2C_Ret_RoleCreate& operator=(const S2C_Ret_RoleCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_RoleCreate& default_instance();

  void Swap(S2C_Ret_RoleCreate* other);

  // implements Message ----------------------------------------------

  S2C_Ret_RoleCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_RoleCreate& from);
  void MergeFrom(const S2C_Ret_RoleCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required bytes nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // required bytes account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // @@protoc_insertion_point(class_scope:S2C_Ret_RoleCreate)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::std::string* nick_name_;
  ::std::string* account_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_RoleCreate* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_RoleInfo : public ::google::protobuf::Message {
 public:
  C2S_Ask_RoleInfo();
  virtual ~C2S_Ask_RoleInfo();

  C2S_Ask_RoleInfo(const C2S_Ask_RoleInfo& from);

  inline C2S_Ask_RoleInfo& operator=(const C2S_Ask_RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_RoleInfo& default_instance();

  void Swap(C2S_Ask_RoleInfo* other);

  // implements Message ----------------------------------------------

  C2S_Ask_RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_RoleInfo& from);
  void MergeFrom(const C2S_Ask_RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // optional int64 ret_unitindex = 3;
  inline bool has_ret_unitindex() const;
  inline void clear_ret_unitindex();
  static const int kRetUnitindexFieldNumber = 3;
  inline ::google::protobuf::int64 ret_unitindex() const;
  inline void set_ret_unitindex(::google::protobuf::int64 value);

  // optional int64 ret_intaddr = 4;
  inline bool has_ret_intaddr() const;
  inline void clear_ret_intaddr();
  static const int kRetIntaddrFieldNumber = 4;
  inline ::google::protobuf::int64 ret_intaddr() const;
  inline void set_ret_intaddr(::google::protobuf::int64 value);

  // optional bool force_apply_role_info = 5;
  inline bool has_force_apply_role_info() const;
  inline void clear_force_apply_role_info();
  static const int kForceApplyRoleInfoFieldNumber = 5;
  inline bool force_apply_role_info() const;
  inline void set_force_apply_role_info(bool value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_RoleInfo)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_unitindex();
  inline void clear_has_ret_unitindex();
  inline void set_has_ret_intaddr();
  inline void clear_has_ret_intaddr();
  inline void set_has_force_apply_role_info();
  inline void clear_has_force_apply_role_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 ret_unitindex_;
  ::google::protobuf::int64 ret_intaddr_;
  bool force_apply_role_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_RoleInfo : public ::google::protobuf::Message {
 public:
  S2C_Ret_RoleInfo();
  virtual ~S2C_Ret_RoleInfo();

  S2C_Ret_RoleInfo(const S2C_Ret_RoleInfo& from);

  inline S2C_Ret_RoleInfo& operator=(const S2C_Ret_RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_RoleInfo& default_instance();

  void Swap(S2C_Ret_RoleInfo* other);

  // implements Message ----------------------------------------------

  S2C_Ret_RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_RoleInfo& from);
  void MergeFrom(const S2C_Ret_RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // optional .universal_data role_info = 3;
  inline bool has_role_info() const;
  inline void clear_role_info();
  static const int kRoleInfoFieldNumber = 3;
  inline const ::universal_data& role_info() const;
  inline ::universal_data* mutable_role_info();
  inline ::universal_data* release_role_info();
  inline void set_allocated_role_info(::universal_data* role_info);

  // optional int64 login_intaddr = 4;
  inline bool has_login_intaddr() const;
  inline void clear_login_intaddr();
  static const int kLoginIntaddrFieldNumber = 4;
  inline ::google::protobuf::int64 login_intaddr() const;
  inline void set_login_intaddr(::google::protobuf::int64 value);

  // optional int64 scene_intaddr = 5;
  inline bool has_scene_intaddr() const;
  inline void clear_scene_intaddr();
  static const int kSceneIntaddrFieldNumber = 5;
  inline ::google::protobuf::int64 scene_intaddr() const;
  inline void set_scene_intaddr(::google::protobuf::int64 value);

  // optional int64 scene_instance_id = 6;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 6;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Ret_RoleInfo)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_role_info();
  inline void clear_has_role_info();
  inline void set_has_login_intaddr();
  inline void clear_has_login_intaddr();
  inline void set_has_scene_intaddr();
  inline void clear_has_scene_intaddr();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::google::protobuf::int64 role_index_;
  ::universal_data* role_info_;
  ::google::protobuf::int64 login_intaddr_;
  ::google::protobuf::int64 scene_intaddr_;
  ::google::protobuf::int64 scene_instance_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Sync_RoleConfig : public ::google::protobuf::Message {
 public:
  C2S_Sync_RoleConfig();
  virtual ~C2S_Sync_RoleConfig();

  C2S_Sync_RoleConfig(const C2S_Sync_RoleConfig& from);

  inline C2S_Sync_RoleConfig& operator=(const C2S_Sync_RoleConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Sync_RoleConfig& default_instance();

  void Swap(C2S_Sync_RoleConfig* other);

  // implements Message ----------------------------------------------

  C2S_Sync_RoleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Sync_RoleConfig& from);
  void MergeFrom(const C2S_Sync_RoleConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .universal_data role_config = 2;
  inline bool has_role_config() const;
  inline void clear_role_config();
  static const int kRoleConfigFieldNumber = 2;
  inline const ::universal_data& role_config() const;
  inline ::universal_data* mutable_role_config();
  inline ::universal_data* release_role_config();
  inline void set_allocated_role_config(::universal_data* role_config);

  // @@protoc_insertion_point(class_scope:C2S_Sync_RoleConfig)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_role_config();
  inline void clear_has_role_config();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::universal_data* role_config_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Sync_RoleConfig* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_RoleConfig : public ::google::protobuf::Message {
 public:
  S2C_Sync_RoleConfig();
  virtual ~S2C_Sync_RoleConfig();

  S2C_Sync_RoleConfig(const S2C_Sync_RoleConfig& from);

  inline S2C_Sync_RoleConfig& operator=(const S2C_Sync_RoleConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_RoleConfig& default_instance();

  void Swap(S2C_Sync_RoleConfig* other);

  // implements Message ----------------------------------------------

  S2C_Sync_RoleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_RoleConfig& from);
  void MergeFrom(const S2C_Sync_RoleConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .universal_data role_config = 2;
  inline bool has_role_config() const;
  inline void clear_role_config();
  static const int kRoleConfigFieldNumber = 2;
  inline const ::universal_data& role_config() const;
  inline ::universal_data* mutable_role_config();
  inline ::universal_data* release_role_config();
  inline void set_allocated_role_config(::universal_data* role_config);

  // @@protoc_insertion_point(class_scope:S2C_Sync_RoleConfig)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_role_config();
  inline void clear_has_role_config();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::universal_data* role_config_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_RoleConfig* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_Ready_EnterScene : public ::google::protobuf::Message {
 public:
  C2S_Ask_Ready_EnterScene();
  virtual ~C2S_Ask_Ready_EnterScene();

  C2S_Ask_Ready_EnterScene(const C2S_Ask_Ready_EnterScene& from);

  inline C2S_Ask_Ready_EnterScene& operator=(const C2S_Ask_Ready_EnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_Ready_EnterScene& default_instance();

  void Swap(C2S_Ask_Ready_EnterScene* other);

  // implements Message ----------------------------------------------

  C2S_Ask_Ready_EnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_Ready_EnterScene& from);
  void MergeFrom(const C2S_Ask_Ready_EnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // optional int64 login_intaddr = 2;
  inline bool has_login_intaddr() const;
  inline void clear_login_intaddr();
  static const int kLoginIntaddrFieldNumber = 2;
  inline ::google::protobuf::int64 login_intaddr() const;
  inline void set_login_intaddr(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_Ready_EnterScene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_login_intaddr();
  inline void clear_has_login_intaddr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 login_intaddr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_Ready_EnterScene* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_Ready_EnterScene : public ::google::protobuf::Message {
 public:
  S2C_Ret_Ready_EnterScene();
  virtual ~S2C_Ret_Ready_EnterScene();

  S2C_Ret_Ready_EnterScene(const S2C_Ret_Ready_EnterScene& from);

  inline S2C_Ret_Ready_EnterScene& operator=(const S2C_Ret_Ready_EnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_Ready_EnterScene& default_instance();

  void Swap(S2C_Ret_Ready_EnterScene* other);

  // implements Message ----------------------------------------------

  S2C_Ret_Ready_EnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_Ready_EnterScene& from);
  void MergeFrom(const S2C_Ret_Ready_EnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 scene_id = 5;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // required int64 scene_intaddr = 6;
  inline bool has_scene_intaddr() const;
  inline void clear_scene_intaddr();
  static const int kSceneIntaddrFieldNumber = 6;
  inline ::google::protobuf::int64 scene_intaddr() const;
  inline void set_scene_intaddr(::google::protobuf::int64 value);

  // required int64 scene_instance_id = 7;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 7;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // required .E_SCENE_TYPE scene_type = 8 [default = EST_INVALID];
  inline bool has_scene_type() const;
  inline void clear_scene_type();
  static const int kSceneTypeFieldNumber = 8;
  inline ::E_SCENE_TYPE scene_type() const;
  inline void set_scene_type(::E_SCENE_TYPE value);

  // required bool is_refresh = 9;
  inline bool has_is_refresh() const;
  inline void clear_is_refresh();
  static const int kIsRefreshFieldNumber = 9;
  inline bool is_refresh() const;
  inline void set_is_refresh(bool value);

  // @@protoc_insertion_point(class_scope:S2C_Ret_Ready_EnterScene)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_scene_intaddr();
  inline void clear_has_scene_intaddr();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();
  inline void set_has_scene_type();
  inline void clear_has_scene_type();
  inline void set_has_is_refresh();
  inline void clear_has_is_refresh();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 scene_intaddr_;
  ::google::protobuf::int32 scene_id_;
  int scene_type_;
  ::google::protobuf::int64 scene_instance_id_;
  bool is_refresh_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_Ready_EnterScene* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_EnterScene : public ::google::protobuf::Message {
 public:
  C2S_Ask_EnterScene();
  virtual ~C2S_Ask_EnterScene();

  C2S_Ask_EnterScene(const C2S_Ask_EnterScene& from);

  inline C2S_Ask_EnterScene& operator=(const C2S_Ask_EnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_EnterScene& default_instance();

  void Swap(C2S_Ask_EnterScene* other);

  // implements Message ----------------------------------------------

  C2S_Ask_EnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_EnterScene& from);
  void MergeFrom(const C2S_Ask_EnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 scene_instance_id = 2;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 2;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_EnterScene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 scene_instance_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_EnterScene* default_instance_;
};
// -------------------------------------------------------------------

class C2S_RefreshScene : public ::google::protobuf::Message {
 public:
  C2S_RefreshScene();
  virtual ~C2S_RefreshScene();

  C2S_RefreshScene(const C2S_RefreshScene& from);

  inline C2S_RefreshScene& operator=(const C2S_RefreshScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_RefreshScene& default_instance();

  void Swap(C2S_RefreshScene* other);

  // implements Message ----------------------------------------------

  C2S_RefreshScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_RefreshScene& from);
  void MergeFrom(const C2S_RefreshScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_RefreshScene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_RefreshScene* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Notice_OffLine : public ::google::protobuf::Message {
 public:
  S2C_Notice_OffLine();
  virtual ~S2C_Notice_OffLine();

  S2C_Notice_OffLine(const S2C_Notice_OffLine& from);

  inline S2C_Notice_OffLine& operator=(const S2C_Notice_OffLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Notice_OffLine& default_instance();

  void Swap(S2C_Notice_OffLine* other);

  // implements Message ----------------------------------------------

  S2C_Notice_OffLine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Notice_OffLine& from);
  void MergeFrom(const S2C_Notice_OffLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required bytes reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const void* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:S2C_Notice_OffLine)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Notice_OffLine* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_Charset : public ::google::protobuf::Message {
 public:
  C2S_Ask_Charset();
  virtual ~C2S_Ask_Charset();

  C2S_Ask_Charset(const C2S_Ask_Charset& from);

  inline C2S_Ask_Charset& operator=(const C2S_Ask_Charset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_Charset& default_instance();

  void Swap(C2S_Ask_Charset* other);

  // implements Message ----------------------------------------------

  C2S_Ask_Charset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_Charset& from);
  void MergeFrom(const C2S_Ask_Charset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool utf_8 = 1;
  inline bool has_utf_8() const;
  inline void clear_utf_8();
  static const int kUtf8FieldNumber = 1;
  inline bool utf_8() const;
  inline void set_utf_8(bool value);

  // required sint32 msg_version = 2;
  inline bool has_msg_version() const;
  inline void clear_msg_version();
  static const int kMsgVersionFieldNumber = 2;
  inline ::google::protobuf::int32 msg_version() const;
  inline void set_msg_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_Charset)
 private:
  inline void set_has_utf_8();
  inline void clear_has_utf_8();
  inline void set_has_msg_version();
  inline void clear_has_msg_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool utf_8_;
  ::google::protobuf::int32 msg_version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_Charset* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Heartbeat : public ::google::protobuf::Message {
 public:
  C2S_Heartbeat();
  virtual ~C2S_Heartbeat();

  C2S_Heartbeat(const C2S_Heartbeat& from);

  inline C2S_Heartbeat& operator=(const C2S_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Heartbeat& default_instance();

  void Swap(C2S_Heartbeat* other);

  // implements Message ----------------------------------------------

  C2S_Heartbeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Heartbeat& from);
  void MergeFrom(const C2S_Heartbeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Heartbeat)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Heartbeat* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Heartbeat : public ::google::protobuf::Message {
 public:
  S2C_Heartbeat();
  virtual ~S2C_Heartbeat();

  S2C_Heartbeat(const S2C_Heartbeat& from);

  inline S2C_Heartbeat& operator=(const S2C_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Heartbeat& default_instance();

  void Swap(S2C_Heartbeat* other);

  // implements Message ----------------------------------------------

  S2C_Heartbeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Heartbeat& from);
  void MergeFrom(const S2C_Heartbeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Heartbeat)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Heartbeat* default_instance_;
};
// -------------------------------------------------------------------

class C2S_GameCoin : public ::google::protobuf::Message {
 public:
  C2S_GameCoin();
  virtual ~C2S_GameCoin();

  C2S_GameCoin(const C2S_GameCoin& from);

  inline C2S_GameCoin& operator=(const C2S_GameCoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_GameCoin& default_instance();

  void Swap(C2S_GameCoin* other);

  // implements Message ----------------------------------------------

  C2S_GameCoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_GameCoin& from);
  void MergeFrom(const C2S_GameCoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_GameCoin)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_GameCoin* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_Role_GameCoin : public ::google::protobuf::Message {
 public:
  S2C_Sync_Role_GameCoin();
  virtual ~S2C_Sync_Role_GameCoin();

  S2C_Sync_Role_GameCoin(const S2C_Sync_Role_GameCoin& from);

  inline S2C_Sync_Role_GameCoin& operator=(const S2C_Sync_Role_GameCoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_Role_GameCoin& default_instance();

  void Swap(S2C_Sync_Role_GameCoin* other);

  // implements Message ----------------------------------------------

  S2C_Sync_Role_GameCoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_Role_GameCoin& from);
  void MergeFrom(const S2C_Sync_Role_GameCoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 add_game_coin = 2;
  inline bool has_add_game_coin() const;
  inline void clear_add_game_coin();
  static const int kAddGameCoinFieldNumber = 2;
  inline ::google::protobuf::int64 add_game_coin() const;
  inline void set_add_game_coin(::google::protobuf::int64 value);

  // required int64 cur_game_coin = 3;
  inline bool has_cur_game_coin() const;
  inline void clear_cur_game_coin();
  static const int kCurGameCoinFieldNumber = 3;
  inline ::google::protobuf::int64 cur_game_coin() const;
  inline void set_cur_game_coin(::google::protobuf::int64 value);

  // required bool is_show = 4;
  inline bool has_is_show() const;
  inline void clear_is_show();
  static const int kIsShowFieldNumber = 4;
  inline bool is_show() const;
  inline void set_is_show(bool value);

  // @@protoc_insertion_point(class_scope:S2C_Sync_Role_GameCoin)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_add_game_coin();
  inline void clear_has_add_game_coin();
  inline void set_has_cur_game_coin();
  inline void clear_has_cur_game_coin();
  inline void set_has_is_show();
  inline void clear_has_is_show();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 add_game_coin_;
  ::google::protobuf::int64 cur_game_coin_;
  bool is_show_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_Role_GameCoin* default_instance_;
};
// -------------------------------------------------------------------

class C2S_DiamondCoin : public ::google::protobuf::Message {
 public:
  C2S_DiamondCoin();
  virtual ~C2S_DiamondCoin();

  C2S_DiamondCoin(const C2S_DiamondCoin& from);

  inline C2S_DiamondCoin& operator=(const C2S_DiamondCoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_DiamondCoin& default_instance();

  void Swap(C2S_DiamondCoin* other);

  // implements Message ----------------------------------------------

  C2S_DiamondCoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_DiamondCoin& from);
  void MergeFrom(const C2S_DiamondCoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_DiamondCoin)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_DiamondCoin* default_instance_;
};
// -------------------------------------------------------------------

class S2C_DiamondCoin : public ::google::protobuf::Message {
 public:
  S2C_DiamondCoin();
  virtual ~S2C_DiamondCoin();

  S2C_DiamondCoin(const S2C_DiamondCoin& from);

  inline S2C_DiamondCoin& operator=(const S2C_DiamondCoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_DiamondCoin& default_instance();

  void Swap(S2C_DiamondCoin* other);

  // implements Message ----------------------------------------------

  S2C_DiamondCoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_DiamondCoin& from);
  void MergeFrom(const S2C_DiamondCoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 diamond_coin = 2;
  inline bool has_diamond_coin() const;
  inline void clear_diamond_coin();
  static const int kDiamondCoinFieldNumber = 2;
  inline ::google::protobuf::int64 diamond_coin() const;
  inline void set_diamond_coin(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_DiamondCoin)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_diamond_coin();
  inline void clear_has_diamond_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 diamond_coin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_DiamondCoin* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Stamina : public ::google::protobuf::Message {
 public:
  C2S_Stamina();
  virtual ~C2S_Stamina();

  C2S_Stamina(const C2S_Stamina& from);

  inline C2S_Stamina& operator=(const C2S_Stamina& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Stamina& default_instance();

  void Swap(C2S_Stamina* other);

  // implements Message ----------------------------------------------

  C2S_Stamina* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Stamina& from);
  void MergeFrom(const C2S_Stamina& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Stamina)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Stamina* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Stamina : public ::google::protobuf::Message {
 public:
  S2C_Stamina();
  virtual ~S2C_Stamina();

  S2C_Stamina(const S2C_Stamina& from);

  inline S2C_Stamina& operator=(const S2C_Stamina& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Stamina& default_instance();

  void Swap(S2C_Stamina* other);

  // implements Message ----------------------------------------------

  S2C_Stamina* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Stamina& from);
  void MergeFrom(const S2C_Stamina& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 stamina = 2;
  inline bool has_stamina() const;
  inline void clear_stamina();
  static const int kStaminaFieldNumber = 2;
  inline ::google::protobuf::int32 stamina() const;
  inline void set_stamina(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_Stamina)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_stamina();
  inline void clear_has_stamina();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 stamina_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Stamina* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Exp : public ::google::protobuf::Message {
 public:
  C2S_Exp();
  virtual ~C2S_Exp();

  C2S_Exp(const C2S_Exp& from);

  inline C2S_Exp& operator=(const C2S_Exp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Exp& default_instance();

  void Swap(C2S_Exp* other);

  // implements Message ----------------------------------------------

  C2S_Exp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Exp& from);
  void MergeFrom(const C2S_Exp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Exp)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Exp* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_Role_Exp : public ::google::protobuf::Message {
 public:
  S2C_Sync_Role_Exp();
  virtual ~S2C_Sync_Role_Exp();

  S2C_Sync_Role_Exp(const S2C_Sync_Role_Exp& from);

  inline S2C_Sync_Role_Exp& operator=(const S2C_Sync_Role_Exp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_Role_Exp& default_instance();

  void Swap(S2C_Sync_Role_Exp* other);

  // implements Message ----------------------------------------------

  S2C_Sync_Role_Exp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_Role_Exp& from);
  void MergeFrom(const S2C_Sync_Role_Exp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bool is_show = 2;
  inline bool has_is_show() const;
  inline void clear_is_show();
  static const int kIsShowFieldNumber = 2;
  inline bool is_show() const;
  inline void set_is_show(bool value);

  // required int64 add_exp = 3;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::int64 add_exp() const;
  inline void set_add_exp(::google::protobuf::int64 value);

  // required int64 cur_exp = 4;
  inline bool has_cur_exp() const;
  inline void clear_cur_exp();
  static const int kCurExpFieldNumber = 4;
  inline ::google::protobuf::int64 cur_exp() const;
  inline void set_cur_exp(::google::protobuf::int64 value);

  // required int64 max_exp = 5;
  inline bool has_max_exp() const;
  inline void clear_max_exp();
  static const int kMaxExpFieldNumber = 5;
  inline ::google::protobuf::int64 max_exp() const;
  inline void set_max_exp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Sync_Role_Exp)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_is_show();
  inline void clear_has_is_show();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();
  inline void set_has_cur_exp();
  inline void clear_has_cur_exp();
  inline void set_has_max_exp();
  inline void clear_has_max_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 add_exp_;
  ::google::protobuf::int64 cur_exp_;
  ::google::protobuf::int64 max_exp_;
  bool is_show_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_Role_Exp* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Notice_Role_EnterScene : public ::google::protobuf::Message {
 public:
  S2C_Notice_Role_EnterScene();
  virtual ~S2C_Notice_Role_EnterScene();

  S2C_Notice_Role_EnterScene(const S2C_Notice_Role_EnterScene& from);

  inline S2C_Notice_Role_EnterScene& operator=(const S2C_Notice_Role_EnterScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Notice_Role_EnterScene& default_instance();

  void Swap(S2C_Notice_Role_EnterScene* other);

  // implements Message ----------------------------------------------

  S2C_Notice_Role_EnterScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Notice_Role_EnterScene& from);
  void MergeFrom(const S2C_Notice_Role_EnterScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .universal_data public_info = 2;
  inline bool has_public_info() const;
  inline void clear_public_info();
  static const int kPublicInfoFieldNumber = 2;
  inline const ::universal_data& public_info() const;
  inline ::universal_data* mutable_public_info();
  inline ::universal_data* release_public_info();
  inline void set_allocated_public_info(::universal_data* public_info);

  // required .universal_data public_memory_info = 3;
  inline bool has_public_memory_info() const;
  inline void clear_public_memory_info();
  static const int kPublicMemoryInfoFieldNumber = 3;
  inline const ::universal_data& public_memory_info() const;
  inline ::universal_data* mutable_public_memory_info();
  inline ::universal_data* release_public_memory_info();
  inline void set_allocated_public_memory_info(::universal_data* public_memory_info);

  // optional .universal_data additional_info = 4;
  inline bool has_additional_info() const;
  inline void clear_additional_info();
  static const int kAdditionalInfoFieldNumber = 4;
  inline const ::universal_data& additional_info() const;
  inline ::universal_data* mutable_additional_info();
  inline ::universal_data* release_additional_info();
  inline void set_allocated_additional_info(::universal_data* additional_info);

  // required int64 scene_instance_id = 5;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 5;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Notice_Role_EnterScene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_public_info();
  inline void clear_has_public_info();
  inline void set_has_public_memory_info();
  inline void clear_has_public_memory_info();
  inline void set_has_additional_info();
  inline void clear_has_additional_info();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::universal_data* public_info_;
  ::universal_data* public_memory_info_;
  ::universal_data* additional_info_;
  ::google::protobuf::int64 scene_instance_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Notice_Role_EnterScene* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Notice_Role_LeaveScene : public ::google::protobuf::Message {
 public:
  S2C_Notice_Role_LeaveScene();
  virtual ~S2C_Notice_Role_LeaveScene();

  S2C_Notice_Role_LeaveScene(const S2C_Notice_Role_LeaveScene& from);

  inline S2C_Notice_Role_LeaveScene& operator=(const S2C_Notice_Role_LeaveScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Notice_Role_LeaveScene& default_instance();

  void Swap(S2C_Notice_Role_LeaveScene* other);

  // implements Message ----------------------------------------------

  S2C_Notice_Role_LeaveScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Notice_Role_LeaveScene& from);
  void MergeFrom(const S2C_Notice_Role_LeaveScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 scene_instance_id = 2;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 2;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Notice_Role_LeaveScene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 scene_instance_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Notice_Role_LeaveScene* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_Role_PublicInfo : public ::google::protobuf::Message {
 public:
  S2C_Sync_Role_PublicInfo();
  virtual ~S2C_Sync_Role_PublicInfo();

  S2C_Sync_Role_PublicInfo(const S2C_Sync_Role_PublicInfo& from);

  inline S2C_Sync_Role_PublicInfo& operator=(const S2C_Sync_Role_PublicInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_Role_PublicInfo& default_instance();

  void Swap(S2C_Sync_Role_PublicInfo* other);

  // implements Message ----------------------------------------------

  S2C_Sync_Role_PublicInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_Role_PublicInfo& from);
  void MergeFrom(const S2C_Sync_Role_PublicInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .universal_data public_info = 2;
  inline bool has_public_info() const;
  inline void clear_public_info();
  static const int kPublicInfoFieldNumber = 2;
  inline const ::universal_data& public_info() const;
  inline ::universal_data* mutable_public_info();
  inline ::universal_data* release_public_info();
  inline void set_allocated_public_info(::universal_data* public_info);

  // required .universal_data public_memory_info = 3;
  inline bool has_public_memory_info() const;
  inline void clear_public_memory_info();
  static const int kPublicMemoryInfoFieldNumber = 3;
  inline const ::universal_data& public_memory_info() const;
  inline ::universal_data* mutable_public_memory_info();
  inline ::universal_data* release_public_memory_info();
  inline void set_allocated_public_memory_info(::universal_data* public_memory_info);

  // @@protoc_insertion_point(class_scope:S2C_Sync_Role_PublicInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_public_info();
  inline void clear_has_public_info();
  inline void set_has_public_memory_info();
  inline void clear_has_public_memory_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::universal_data* public_info_;
  ::universal_data* public_memory_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_Role_PublicInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_Role_PrivateInfo : public ::google::protobuf::Message {
 public:
  S2C_Sync_Role_PrivateInfo();
  virtual ~S2C_Sync_Role_PrivateInfo();

  S2C_Sync_Role_PrivateInfo(const S2C_Sync_Role_PrivateInfo& from);

  inline S2C_Sync_Role_PrivateInfo& operator=(const S2C_Sync_Role_PrivateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_Role_PrivateInfo& default_instance();

  void Swap(S2C_Sync_Role_PrivateInfo* other);

  // implements Message ----------------------------------------------

  S2C_Sync_Role_PrivateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_Role_PrivateInfo& from);
  void MergeFrom(const S2C_Sync_Role_PrivateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .universal_data private_info = 2;
  inline bool has_private_info() const;
  inline void clear_private_info();
  static const int kPrivateInfoFieldNumber = 2;
  inline const ::universal_data& private_info() const;
  inline ::universal_data* mutable_private_info();
  inline ::universal_data* release_private_info();
  inline void set_allocated_private_info(::universal_data* private_info);

  // required .universal_data private_memory_info = 3;
  inline bool has_private_memory_info() const;
  inline void clear_private_memory_info();
  static const int kPrivateMemoryInfoFieldNumber = 3;
  inline const ::universal_data& private_memory_info() const;
  inline ::universal_data* mutable_private_memory_info();
  inline ::universal_data* release_private_memory_info();
  inline void set_allocated_private_memory_info(::universal_data* private_memory_info);

  // @@protoc_insertion_point(class_scope:S2C_Sync_Role_PrivateInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_private_info();
  inline void clear_has_private_info();
  inline void set_has_private_memory_info();
  inline void clear_has_private_memory_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::universal_data* private_info_;
  ::universal_data* private_memory_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_Role_PrivateInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_RoleInfo : public ::google::protobuf::Message {
 public:
  S2C_Sync_RoleInfo();
  virtual ~S2C_Sync_RoleInfo();

  S2C_Sync_RoleInfo(const S2C_Sync_RoleInfo& from);

  inline S2C_Sync_RoleInfo& operator=(const S2C_Sync_RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_RoleInfo& default_instance();

  void Swap(S2C_Sync_RoleInfo* other);

  // implements Message ----------------------------------------------

  S2C_Sync_RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_RoleInfo& from);
  void MergeFrom(const S2C_Sync_RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // repeated .universal_data universal_role_info = 2;
  inline int universal_role_info_size() const;
  inline void clear_universal_role_info();
  static const int kUniversalRoleInfoFieldNumber = 2;
  inline const ::universal_data& universal_role_info(int index) const;
  inline ::universal_data* mutable_universal_role_info(int index);
  inline ::universal_data* add_universal_role_info();
  inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
      universal_role_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
      mutable_universal_role_info();

  // @@protoc_insertion_point(class_scope:S2C_Sync_RoleInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::RepeatedPtrField< ::universal_data > universal_role_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_RoleAttr : public ::google::protobuf::Message {
 public:
  S2C_Sync_RoleAttr();
  virtual ~S2C_Sync_RoleAttr();

  S2C_Sync_RoleAttr(const S2C_Sync_RoleAttr& from);

  inline S2C_Sync_RoleAttr& operator=(const S2C_Sync_RoleAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_RoleAttr& default_instance();

  void Swap(S2C_Sync_RoleAttr* other);

  // implements Message ----------------------------------------------

  S2C_Sync_RoleAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_RoleAttr& from);
  void MergeFrom(const S2C_Sync_RoleAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .universal_data new_role_attr = 2;
  inline bool has_new_role_attr() const;
  inline void clear_new_role_attr();
  static const int kNewRoleAttrFieldNumber = 2;
  inline const ::universal_data& new_role_attr() const;
  inline ::universal_data* mutable_new_role_attr();
  inline ::universal_data* release_new_role_attr();
  inline void set_allocated_new_role_attr(::universal_data* new_role_attr);

  // @@protoc_insertion_point(class_scope:S2C_Sync_RoleAttr)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_new_role_attr();
  inline void clear_has_new_role_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::universal_data* new_role_attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_RoleAttr* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Sync_Dir : public ::google::protobuf::Message {
 public:
  C2S_Sync_Dir();
  virtual ~C2S_Sync_Dir();

  C2S_Sync_Dir(const C2S_Sync_Dir& from);

  inline C2S_Sync_Dir& operator=(const C2S_Sync_Dir& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Sync_Dir& default_instance();

  void Swap(C2S_Sync_Dir* other);

  // implements Message ----------------------------------------------

  C2S_Sync_Dir* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Sync_Dir& from);
  void MergeFrom(const C2S_Sync_Dir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 dir = 2;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline ::google::protobuf::int32 dir() const;
  inline void set_dir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Sync_Dir)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Sync_Dir* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_Dir : public ::google::protobuf::Message {
 public:
  S2C_Sync_Dir();
  virtual ~S2C_Sync_Dir();

  S2C_Sync_Dir(const S2C_Sync_Dir& from);

  inline S2C_Sync_Dir& operator=(const S2C_Sync_Dir& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_Dir& default_instance();

  void Swap(S2C_Sync_Dir* other);

  // implements Message ----------------------------------------------

  S2C_Sync_Dir* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_Dir& from);
  void MergeFrom(const S2C_Sync_Dir& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 dir = 2;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline ::google::protobuf::int32 dir() const;
  inline void set_dir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_Sync_Dir)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_dir();
  inline void clear_has_dir();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 dir_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_Dir* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Sync_RoleMove : public ::google::protobuf::Message {
 public:
  C2S_Sync_RoleMove();
  virtual ~C2S_Sync_RoleMove();

  C2S_Sync_RoleMove(const C2S_Sync_RoleMove& from);

  inline C2S_Sync_RoleMove& operator=(const C2S_Sync_RoleMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Sync_RoleMove& default_instance();

  void Swap(C2S_Sync_RoleMove* other);

  // implements Message ----------------------------------------------

  C2S_Sync_RoleMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Sync_RoleMove& from);
  void MergeFrom(const C2S_Sync_RoleMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required float begin_x = 3;
  inline bool has_begin_x() const;
  inline void clear_begin_x();
  static const int kBeginXFieldNumber = 3;
  inline float begin_x() const;
  inline void set_begin_x(float value);

  // required float begin_y = 4;
  inline bool has_begin_y() const;
  inline void clear_begin_y();
  static const int kBeginYFieldNumber = 4;
  inline float begin_y() const;
  inline void set_begin_y(float value);

  // required float end_x = 5;
  inline bool has_end_x() const;
  inline void clear_end_x();
  static const int kEndXFieldNumber = 5;
  inline float end_x() const;
  inline void set_end_x(float value);

  // required float end_y = 6;
  inline bool has_end_y() const;
  inline void clear_end_y();
  static const int kEndYFieldNumber = 6;
  inline float end_y() const;
  inline void set_end_y(float value);

  // required bool is_run = 7;
  inline bool has_is_run() const;
  inline void clear_is_run();
  static const int kIsRunFieldNumber = 7;
  inline bool is_run() const;
  inline void set_is_run(bool value);

  // @@protoc_insertion_point(class_scope:C2S_Sync_RoleMove)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_begin_x();
  inline void clear_has_begin_x();
  inline void set_has_begin_y();
  inline void clear_has_begin_y();
  inline void set_has_end_x();
  inline void clear_has_end_x();
  inline void set_has_end_y();
  inline void clear_has_end_y();
  inline void set_has_is_run();
  inline void clear_has_is_run();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  float begin_x_;
  float begin_y_;
  float end_x_;
  float end_y_;
  bool is_run_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Sync_RoleMove* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_RoleMove : public ::google::protobuf::Message {
 public:
  S2C_Sync_RoleMove();
  virtual ~S2C_Sync_RoleMove();

  S2C_Sync_RoleMove(const S2C_Sync_RoleMove& from);

  inline S2C_Sync_RoleMove& operator=(const S2C_Sync_RoleMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_RoleMove& default_instance();

  void Swap(S2C_Sync_RoleMove* other);

  // implements Message ----------------------------------------------

  S2C_Sync_RoleMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_RoleMove& from);
  void MergeFrom(const S2C_Sync_RoleMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required float begin_x = 3;
  inline bool has_begin_x() const;
  inline void clear_begin_x();
  static const int kBeginXFieldNumber = 3;
  inline float begin_x() const;
  inline void set_begin_x(float value);

  // required float begin_y = 4;
  inline bool has_begin_y() const;
  inline void clear_begin_y();
  static const int kBeginYFieldNumber = 4;
  inline float begin_y() const;
  inline void set_begin_y(float value);

  // required float end_x = 5;
  inline bool has_end_x() const;
  inline void clear_end_x();
  static const int kEndXFieldNumber = 5;
  inline float end_x() const;
  inline void set_end_x(float value);

  // required float end_y = 6;
  inline bool has_end_y() const;
  inline void clear_end_y();
  static const int kEndYFieldNumber = 6;
  inline float end_y() const;
  inline void set_end_y(float value);

  // required bool is_run = 7;
  inline bool has_is_run() const;
  inline void clear_is_run();
  static const int kIsRunFieldNumber = 7;
  inline bool is_run() const;
  inline void set_is_run(bool value);

  // @@protoc_insertion_point(class_scope:S2C_Sync_RoleMove)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_begin_x();
  inline void clear_has_begin_x();
  inline void set_has_begin_y();
  inline void clear_has_begin_y();
  inline void set_has_end_x();
  inline void clear_has_end_x();
  inline void set_has_end_y();
  inline void clear_has_end_y();
  inline void set_has_is_run();
  inline void clear_has_is_run();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  float begin_x_;
  float begin_y_;
  float end_x_;
  float end_y_;
  bool is_run_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_RoleMove* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_RoleStopMove : public ::google::protobuf::Message {
 public:
  S2C_Sync_RoleStopMove();
  virtual ~S2C_Sync_RoleStopMove();

  S2C_Sync_RoleStopMove(const S2C_Sync_RoleStopMove& from);

  inline S2C_Sync_RoleStopMove& operator=(const S2C_Sync_RoleStopMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_RoleStopMove& default_instance();

  void Swap(S2C_Sync_RoleStopMove* other);

  // implements Message ----------------------------------------------

  S2C_Sync_RoleStopMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_RoleStopMove& from);
  void MergeFrom(const S2C_Sync_RoleStopMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required float end_x = 3;
  inline bool has_end_x() const;
  inline void clear_end_x();
  static const int kEndXFieldNumber = 3;
  inline float end_x() const;
  inline void set_end_x(float value);

  // required float end_y = 4;
  inline bool has_end_y() const;
  inline void clear_end_y();
  static const int kEndYFieldNumber = 4;
  inline float end_y() const;
  inline void set_end_y(float value);

  // @@protoc_insertion_point(class_scope:S2C_Sync_RoleStopMove)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_end_x();
  inline void clear_has_end_x();
  inline void set_has_end_y();
  inline void clear_has_end_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  float end_x_;
  float end_y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_RoleStopMove* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Notice_Role_LevelUp : public ::google::protobuf::Message {
 public:
  S2C_Notice_Role_LevelUp();
  virtual ~S2C_Notice_Role_LevelUp();

  S2C_Notice_Role_LevelUp(const S2C_Notice_Role_LevelUp& from);

  inline S2C_Notice_Role_LevelUp& operator=(const S2C_Notice_Role_LevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Notice_Role_LevelUp& default_instance();

  void Swap(S2C_Notice_Role_LevelUp* other);

  // implements Message ----------------------------------------------

  S2C_Notice_Role_LevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Notice_Role_LevelUp& from);
  void MergeFrom(const S2C_Notice_Role_LevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .universal_data new_role_attr = 2;
  inline bool has_new_role_attr() const;
  inline void clear_new_role_attr();
  static const int kNewRoleAttrFieldNumber = 2;
  inline const ::universal_data& new_role_attr() const;
  inline ::universal_data* mutable_new_role_attr();
  inline ::universal_data* release_new_role_attr();
  inline void set_allocated_new_role_attr(::universal_data* new_role_attr);

  // required int64 new_level = 3;
  inline bool has_new_level() const;
  inline void clear_new_level();
  static const int kNewLevelFieldNumber = 3;
  inline ::google::protobuf::int64 new_level() const;
  inline void set_new_level(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Notice_Role_LevelUp)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_new_role_attr();
  inline void clear_has_new_role_attr();
  inline void set_has_new_level();
  inline void clear_has_new_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::universal_data* new_role_attr_;
  ::google::protobuf::int64 new_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Notice_Role_LevelUp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_Comrade : public ::google::protobuf::Message {
 public:
  C2S_Ask_Comrade();
  virtual ~C2S_Ask_Comrade();

  C2S_Ask_Comrade(const C2S_Ask_Comrade& from);

  inline C2S_Ask_Comrade& operator=(const C2S_Ask_Comrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_Comrade& default_instance();

  void Swap(C2S_Ask_Comrade* other);

  // implements Message ----------------------------------------------

  C2S_Ask_Comrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_Comrade& from);
  void MergeFrom(const C2S_Ask_Comrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 comrade_role_index = 2;
  inline bool has_comrade_role_index() const;
  inline void clear_comrade_role_index();
  static const int kComradeRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 comrade_role_index() const;
  inline void set_comrade_role_index(::google::protobuf::int64 value);

  // required sint32 team_pos_index = 3;
  inline bool has_team_pos_index() const;
  inline void clear_team_pos_index();
  static const int kTeamPosIndexFieldNumber = 3;
  inline ::google::protobuf::int32 team_pos_index() const;
  inline void set_team_pos_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_Comrade)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_comrade_role_index();
  inline void clear_has_comrade_role_index();
  inline void set_has_team_pos_index();
  inline void clear_has_team_pos_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 comrade_role_index_;
  ::google::protobuf::int32 team_pos_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_Comrade* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_Comrade : public ::google::protobuf::Message {
 public:
  S2C_Ret_Comrade();
  virtual ~S2C_Ret_Comrade();

  S2C_Ret_Comrade(const S2C_Ret_Comrade& from);

  inline S2C_Ret_Comrade& operator=(const S2C_Ret_Comrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_Comrade& default_instance();

  void Swap(S2C_Ret_Comrade* other);

  // implements Message ----------------------------------------------

  S2C_Ret_Comrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_Comrade& from);
  void MergeFrom(const S2C_Ret_Comrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 team_index = 2;
  inline bool has_team_index() const;
  inline void clear_team_index();
  static const int kTeamIndexFieldNumber = 2;
  inline ::google::protobuf::int64 team_index() const;
  inline void set_team_index(::google::protobuf::int64 value);

  // required int64 comrade_role_index = 3;
  inline bool has_comrade_role_index() const;
  inline void clear_comrade_role_index();
  static const int kComradeRoleIndexFieldNumber = 3;
  inline ::google::protobuf::int64 comrade_role_index() const;
  inline void set_comrade_role_index(::google::protobuf::int64 value);

  // required sint32 team_pos_index = 4;
  inline bool has_team_pos_index() const;
  inline void clear_team_pos_index();
  static const int kTeamPosIndexFieldNumber = 4;
  inline ::google::protobuf::int32 team_pos_index() const;
  inline void set_team_pos_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_Ret_Comrade)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_team_index();
  inline void clear_has_team_index();
  inline void set_has_comrade_role_index();
  inline void clear_has_comrade_role_index();
  inline void set_has_team_pos_index();
  inline void clear_has_team_pos_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 team_index_;
  ::google::protobuf::int64 comrade_role_index_;
  ::google::protobuf::int32 team_pos_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_Comrade* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_Chat : public ::google::protobuf::Message {
 public:
  C2S_Ask_Chat();
  virtual ~C2S_Ask_Chat();

  C2S_Ask_Chat(const C2S_Ask_Chat& from);

  inline C2S_Ask_Chat& operator=(const C2S_Ask_Chat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_Chat& default_instance();

  void Swap(C2S_Ask_Chat* other);

  // implements Message ----------------------------------------------

  C2S_Ask_Chat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_Chat& from);
  void MergeFrom(const C2S_Ask_Chat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .E_CHAT_TYPE chat_type = 2 [default = ECT_CURRENT];
  inline bool has_chat_type() const;
  inline void clear_chat_type();
  static const int kChatTypeFieldNumber = 2;
  inline ::E_CHAT_TYPE chat_type() const;
  inline void set_chat_type(::E_CHAT_TYPE value);

  // required bytes msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const void* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // required uint32 backcolor = 4;
  inline bool has_backcolor() const;
  inline void clear_backcolor();
  static const int kBackcolorFieldNumber = 4;
  inline ::google::protobuf::uint32 backcolor() const;
  inline void set_backcolor(::google::protobuf::uint32 value);

  // required uint32 boxcolor = 5;
  inline bool has_boxcolor() const;
  inline void clear_boxcolor();
  static const int kBoxcolorFieldNumber = 5;
  inline ::google::protobuf::uint32 boxcolor() const;
  inline void set_boxcolor(::google::protobuf::uint32 value);

  // required uint32 shadowcolor = 6;
  inline bool has_shadowcolor() const;
  inline void clear_shadowcolor();
  static const int kShadowcolorFieldNumber = 6;
  inline ::google::protobuf::uint32 shadowcolor() const;
  inline void set_shadowcolor(::google::protobuf::uint32 value);

  // required uint32 msgcolor = 7;
  inline bool has_msgcolor() const;
  inline void clear_msgcolor();
  static const int kMsgcolorFieldNumber = 7;
  inline ::google::protobuf::uint32 msgcolor() const;
  inline void set_msgcolor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_Chat)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_chat_type();
  inline void clear_has_chat_type();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_backcolor();
  inline void clear_has_backcolor();
  inline void set_has_boxcolor();
  inline void clear_has_boxcolor();
  inline void set_has_shadowcolor();
  inline void clear_has_shadowcolor();
  inline void set_has_msgcolor();
  inline void clear_has_msgcolor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* msg_;
  int chat_type_;
  ::google::protobuf::uint32 backcolor_;
  ::google::protobuf::uint32 boxcolor_;
  ::google::protobuf::uint32 shadowcolor_;
  ::google::protobuf::uint32 msgcolor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_Chat* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_Chat : public ::google::protobuf::Message {
 public:
  S2C_Ret_Chat();
  virtual ~S2C_Ret_Chat();

  S2C_Ret_Chat(const S2C_Ret_Chat& from);

  inline S2C_Ret_Chat& operator=(const S2C_Ret_Chat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_Chat& default_instance();

  void Swap(S2C_Ret_Chat* other);

  // implements Message ----------------------------------------------

  S2C_Ret_Chat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_Chat& from);
  void MergeFrom(const S2C_Ret_Chat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 scene_instance_id = 2;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 2;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // required .E_CHAT_TYPE chat_type = 5 [default = ECT_CURRENT];
  inline bool has_chat_type() const;
  inline void clear_chat_type();
  static const int kChatTypeFieldNumber = 5;
  inline ::E_CHAT_TYPE chat_type() const;
  inline void set_chat_type(::E_CHAT_TYPE value);

  // required bytes msg = 6;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 6;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const void* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // required uint32 backcolor = 7;
  inline bool has_backcolor() const;
  inline void clear_backcolor();
  static const int kBackcolorFieldNumber = 7;
  inline ::google::protobuf::uint32 backcolor() const;
  inline void set_backcolor(::google::protobuf::uint32 value);

  // required uint32 boxcolor = 8;
  inline bool has_boxcolor() const;
  inline void clear_boxcolor();
  static const int kBoxcolorFieldNumber = 8;
  inline ::google::protobuf::uint32 boxcolor() const;
  inline void set_boxcolor(::google::protobuf::uint32 value);

  // required uint32 shadowcolor = 10;
  inline bool has_shadowcolor() const;
  inline void clear_shadowcolor();
  static const int kShadowcolorFieldNumber = 10;
  inline ::google::protobuf::uint32 shadowcolor() const;
  inline void set_shadowcolor(::google::protobuf::uint32 value);

  // required uint32 msgcolor = 11;
  inline bool has_msgcolor() const;
  inline void clear_msgcolor();
  static const int kMsgcolorFieldNumber = 11;
  inline ::google::protobuf::uint32 msgcolor() const;
  inline void set_msgcolor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:S2C_Ret_Chat)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();
  inline void set_has_chat_type();
  inline void clear_has_chat_type();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_backcolor();
  inline void clear_has_backcolor();
  inline void set_has_boxcolor();
  inline void clear_has_boxcolor();
  inline void set_has_shadowcolor();
  inline void clear_has_shadowcolor();
  inline void set_has_msgcolor();
  inline void clear_has_msgcolor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 scene_instance_id_;
  ::std::string* msg_;
  int chat_type_;
  ::google::protobuf::uint32 backcolor_;
  ::google::protobuf::uint32 boxcolor_;
  ::google::protobuf::uint32 shadowcolor_;
  ::google::protobuf::uint32 msgcolor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_Chat* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Change_Scene : public ::google::protobuf::Message {
 public:
  C2S_Change_Scene();
  virtual ~C2S_Change_Scene();

  C2S_Change_Scene(const C2S_Change_Scene& from);

  inline C2S_Change_Scene& operator=(const C2S_Change_Scene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Change_Scene& default_instance();

  void Swap(C2S_Change_Scene* other);

  // implements Message ----------------------------------------------

  C2S_Change_Scene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Change_Scene& from);
  void MergeFrom(const C2S_Change_Scene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required uint32 tar_scene_id = 2;
  inline bool has_tar_scene_id() const;
  inline void clear_tar_scene_id();
  static const int kTarSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 tar_scene_id() const;
  inline void set_tar_scene_id(::google::protobuf::uint32 value);

  // required float pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline float pos_x() const;
  inline void set_pos_x(float value);

  // required float pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline float pos_y() const;
  inline void set_pos_y(float value);

  // @@protoc_insertion_point(class_scope:C2S_Change_Scene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_scene_id();
  inline void clear_has_tar_scene_id();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::uint32 tar_scene_id_;
  float pos_x_;
  float pos_y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Change_Scene* default_instance_;
};
// -------------------------------------------------------------------

class C2S_TransPortChangeScene : public ::google::protobuf::Message {
 public:
  C2S_TransPortChangeScene();
  virtual ~C2S_TransPortChangeScene();

  C2S_TransPortChangeScene(const C2S_TransPortChangeScene& from);

  inline C2S_TransPortChangeScene& operator=(const C2S_TransPortChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_TransPortChangeScene& default_instance();

  void Swap(C2S_TransPortChangeScene* other);

  // implements Message ----------------------------------------------

  C2S_TransPortChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_TransPortChangeScene& from);
  void MergeFrom(const C2S_TransPortChangeScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 transport_id = 2;
  inline bool has_transport_id() const;
  inline void clear_transport_id();
  static const int kTransportIdFieldNumber = 2;
  inline ::google::protobuf::int32 transport_id() const;
  inline void set_transport_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_TransPortChangeScene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_transport_id();
  inline void clear_has_transport_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 transport_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_TransPortChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class S2C_TransPortChangeScene : public ::google::protobuf::Message {
 public:
  S2C_TransPortChangeScene();
  virtual ~S2C_TransPortChangeScene();

  S2C_TransPortChangeScene(const S2C_TransPortChangeScene& from);

  inline S2C_TransPortChangeScene& operator=(const S2C_TransPortChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_TransPortChangeScene& default_instance();

  void Swap(S2C_TransPortChangeScene* other);

  // implements Message ----------------------------------------------

  S2C_TransPortChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_TransPortChangeScene& from);
  void MergeFrom(const S2C_TransPortChangeScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::std::string& ret() const;
  inline void set_ret(const ::std::string& value);
  inline void set_ret(const char* value);
  inline void set_ret(const void* value, size_t size);
  inline ::std::string* mutable_ret();
  inline ::std::string* release_ret();
  inline void set_allocated_ret(::std::string* ret);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 transport_id = 3;
  inline bool has_transport_id() const;
  inline void clear_transport_id();
  static const int kTransportIdFieldNumber = 3;
  inline ::google::protobuf::int32 transport_id() const;
  inline void set_transport_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_TransPortChangeScene)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_transport_id();
  inline void clear_has_transport_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 transport_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_TransPortChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class C2S_NPC_ChangeScene : public ::google::protobuf::Message {
 public:
  C2S_NPC_ChangeScene();
  virtual ~C2S_NPC_ChangeScene();

  C2S_NPC_ChangeScene(const C2S_NPC_ChangeScene& from);

  inline C2S_NPC_ChangeScene& operator=(const C2S_NPC_ChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_NPC_ChangeScene& default_instance();

  void Swap(C2S_NPC_ChangeScene* other);

  // implements Message ----------------------------------------------

  C2S_NPC_ChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_NPC_ChangeScene& from);
  void MergeFrom(const C2S_NPC_ChangeScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 npc_id = 2;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 2;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required sint32 scene_type = 3;
  inline bool has_scene_type() const;
  inline void clear_scene_type();
  static const int kSceneTypeFieldNumber = 3;
  inline ::google::protobuf::int32 scene_type() const;
  inline void set_scene_type(::google::protobuf::int32 value);

  // required sint32 trans_info_id = 4;
  inline bool has_trans_info_id() const;
  inline void clear_trans_info_id();
  static const int kTransInfoIdFieldNumber = 4;
  inline ::google::protobuf::int32 trans_info_id() const;
  inline void set_trans_info_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_NPC_ChangeScene)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_scene_type();
  inline void clear_has_scene_type();
  inline void set_has_trans_info_id();
  inline void clear_has_trans_info_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::int32 scene_type_;
  ::google::protobuf::int32 trans_info_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_NPC_ChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NPC_ChangeScene : public ::google::protobuf::Message {
 public:
  S2C_NPC_ChangeScene();
  virtual ~S2C_NPC_ChangeScene();

  S2C_NPC_ChangeScene(const S2C_NPC_ChangeScene& from);

  inline S2C_NPC_ChangeScene& operator=(const S2C_NPC_ChangeScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NPC_ChangeScene& default_instance();

  void Swap(S2C_NPC_ChangeScene* other);

  // implements Message ----------------------------------------------

  S2C_NPC_ChangeScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NPC_ChangeScene& from);
  void MergeFrom(const S2C_NPC_ChangeScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::std::string& ret() const;
  inline void set_ret(const ::std::string& value);
  inline void set_ret(const char* value);
  inline void set_ret(const void* value, size_t size);
  inline ::std::string* mutable_ret();
  inline ::std::string* release_ret();
  inline void set_allocated_ret(::std::string* ret);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 npc_id = 3;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 3;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required sint32 scene_type = 4;
  inline bool has_scene_type() const;
  inline void clear_scene_type();
  static const int kSceneTypeFieldNumber = 4;
  inline ::google::protobuf::int32 scene_type() const;
  inline void set_scene_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_NPC_ChangeScene)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_scene_type();
  inline void clear_has_scene_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::int32 scene_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_NPC_ChangeScene* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Qiecuo_Battle : public ::google::protobuf::Message {
 public:
  C2S_Qiecuo_Battle();
  virtual ~C2S_Qiecuo_Battle();

  C2S_Qiecuo_Battle(const C2S_Qiecuo_Battle& from);

  inline C2S_Qiecuo_Battle& operator=(const C2S_Qiecuo_Battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Qiecuo_Battle& default_instance();

  void Swap(C2S_Qiecuo_Battle* other);

  // implements Message ----------------------------------------------

  C2S_Qiecuo_Battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Qiecuo_Battle& from);
  void MergeFrom(const C2S_Qiecuo_Battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required int64 scene_instance_id = 3;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 3;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Qiecuo_Battle)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_role_index_;
  ::google::protobuf::int64 scene_instance_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Qiecuo_Battle* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Qiecuo_Battle_Refuse : public ::google::protobuf::Message {
 public:
  S2C_Qiecuo_Battle_Refuse();
  virtual ~S2C_Qiecuo_Battle_Refuse();

  S2C_Qiecuo_Battle_Refuse(const S2C_Qiecuo_Battle_Refuse& from);

  inline S2C_Qiecuo_Battle_Refuse& operator=(const S2C_Qiecuo_Battle_Refuse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Qiecuo_Battle_Refuse& default_instance();

  void Swap(S2C_Qiecuo_Battle_Refuse* other);

  // implements Message ----------------------------------------------

  S2C_Qiecuo_Battle_Refuse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Qiecuo_Battle_Refuse& from);
  void MergeFrom(const S2C_Qiecuo_Battle_Refuse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required int64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Qiecuo_Battle_Refuse)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int64 tar_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Qiecuo_Battle_Refuse* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Qiecuo_Battle : public ::google::protobuf::Message {
 public:
  S2C_Qiecuo_Battle();
  virtual ~S2C_Qiecuo_Battle();

  S2C_Qiecuo_Battle(const S2C_Qiecuo_Battle& from);

  inline S2C_Qiecuo_Battle& operator=(const S2C_Qiecuo_Battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Qiecuo_Battle& default_instance();

  void Swap(S2C_Qiecuo_Battle* other);

  // implements Message ----------------------------------------------

  S2C_Qiecuo_Battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Qiecuo_Battle& from);
  void MergeFrom(const S2C_Qiecuo_Battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required int64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required int64 scene_instance_id = 3;
  inline bool has_scene_instance_id() const;
  inline void clear_scene_instance_id();
  static const int kSceneInstanceIdFieldNumber = 3;
  inline ::google::protobuf::int64 scene_instance_id() const;
  inline void set_scene_instance_id(::google::protobuf::int64 value);

  // required float new_battle_scene_id = 6;
  inline bool has_new_battle_scene_id() const;
  inline void clear_new_battle_scene_id();
  static const int kNewBattleSceneIdFieldNumber = 6;
  inline float new_battle_scene_id() const;
  inline void set_new_battle_scene_id(float value);

  // required sint32 battle_team_id = 7;
  inline bool has_battle_team_id() const;
  inline void clear_battle_team_id();
  static const int kBattleTeamIdFieldNumber = 7;
  inline ::google::protobuf::int32 battle_team_id() const;
  inline void set_battle_team_id(::google::protobuf::int32 value);

  // required sint32 battle_pos_id = 8;
  inline bool has_battle_pos_id() const;
  inline void clear_battle_pos_id();
  static const int kBattlePosIdFieldNumber = 8;
  inline ::google::protobuf::int32 battle_pos_id() const;
  inline void set_battle_pos_id(::google::protobuf::int32 value);

  // required int64 battle_index = 9;
  inline bool has_battle_index() const;
  inline void clear_battle_index();
  static const int kBattleIndexFieldNumber = 9;
  inline ::google::protobuf::int64 battle_index() const;
  inline void set_battle_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Qiecuo_Battle)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_scene_instance_id();
  inline void clear_has_scene_instance_id();
  inline void set_has_new_battle_scene_id();
  inline void clear_has_new_battle_scene_id();
  inline void set_has_battle_team_id();
  inline void clear_has_battle_team_id();
  inline void set_has_battle_pos_id();
  inline void clear_has_battle_pos_id();
  inline void set_has_battle_index();
  inline void clear_has_battle_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int64 tar_role_index_;
  ::google::protobuf::int64 scene_instance_id_;
  float new_battle_scene_id_;
  ::google::protobuf::int32 battle_team_id_;
  ::google::protobuf::int64 battle_index_;
  ::google::protobuf::int32 battle_pos_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Qiecuo_Battle* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Qiecuo_Confirm_Battle : public ::google::protobuf::Message {
 public:
  S2C_Qiecuo_Confirm_Battle();
  virtual ~S2C_Qiecuo_Confirm_Battle();

  S2C_Qiecuo_Confirm_Battle(const S2C_Qiecuo_Confirm_Battle& from);

  inline S2C_Qiecuo_Confirm_Battle& operator=(const S2C_Qiecuo_Confirm_Battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Qiecuo_Confirm_Battle& default_instance();

  void Swap(S2C_Qiecuo_Confirm_Battle* other);

  // implements Message ----------------------------------------------

  S2C_Qiecuo_Confirm_Battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Qiecuo_Confirm_Battle& from);
  void MergeFrom(const S2C_Qiecuo_Confirm_Battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required int64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Qiecuo_Confirm_Battle)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int64 tar_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Qiecuo_Confirm_Battle* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Qiecuo_Confirm_Battle : public ::google::protobuf::Message {
 public:
  C2S_Qiecuo_Confirm_Battle();
  virtual ~C2S_Qiecuo_Confirm_Battle();

  C2S_Qiecuo_Confirm_Battle(const C2S_Qiecuo_Confirm_Battle& from);

  inline C2S_Qiecuo_Confirm_Battle& operator=(const C2S_Qiecuo_Confirm_Battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Qiecuo_Confirm_Battle& default_instance();

  void Swap(C2S_Qiecuo_Confirm_Battle* other);

  // implements Message ----------------------------------------------

  C2S_Qiecuo_Confirm_Battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Qiecuo_Confirm_Battle& from);
  void MergeFrom(const C2S_Qiecuo_Confirm_Battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 src_role_index = 2;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required bool agree = 3;
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 3;
  inline bool agree() const;
  inline void set_agree(bool value);

  // @@protoc_insertion_point(class_scope:C2S_Qiecuo_Confirm_Battle)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_agree();
  inline void clear_has_agree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 src_role_index_;
  bool agree_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Qiecuo_Confirm_Battle* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Battle_Info : public ::google::protobuf::Message {
 public:
  C2S_Battle_Info();
  virtual ~C2S_Battle_Info();

  C2S_Battle_Info(const C2S_Battle_Info& from);

  inline C2S_Battle_Info& operator=(const C2S_Battle_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Battle_Info& default_instance();

  void Swap(C2S_Battle_Info* other);

  // implements Message ----------------------------------------------

  C2S_Battle_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Battle_Info& from);
  void MergeFrom(const C2S_Battle_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 battle_index = 2;
  inline bool has_battle_index() const;
  inline void clear_battle_index();
  static const int kBattleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 battle_index() const;
  inline void set_battle_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Battle_Info)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_battle_index();
  inline void clear_has_battle_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 battle_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Battle_Info* default_instance_;
};
// -------------------------------------------------------------------

class Battle_Role_Info : public ::google::protobuf::Message {
 public:
  Battle_Role_Info();
  virtual ~Battle_Role_Info();

  Battle_Role_Info(const Battle_Role_Info& from);

  inline Battle_Role_Info& operator=(const Battle_Role_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle_Role_Info& default_instance();

  void Swap(Battle_Role_Info* other);

  // implements Message ----------------------------------------------

  Battle_Role_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle_Role_Info& from);
  void MergeFrom(const Battle_Role_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 battle_pos_id = 2;
  inline bool has_battle_pos_id() const;
  inline void clear_battle_pos_id();
  static const int kBattlePosIdFieldNumber = 2;
  inline ::google::protobuf::int64 battle_pos_id() const;
  inline void set_battle_pos_id(::google::protobuf::int64 value);

  // required bytes role_type = 3;
  inline bool has_role_type() const;
  inline void clear_role_type();
  static const int kRoleTypeFieldNumber = 3;
  inline const ::std::string& role_type() const;
  inline void set_role_type(const ::std::string& value);
  inline void set_role_type(const char* value);
  inline void set_role_type(const void* value, size_t size);
  inline ::std::string* mutable_role_type();
  inline ::std::string* release_role_type();
  inline void set_allocated_role_type(::std::string* role_type);

  // required bytes racial = 4;
  inline bool has_racial() const;
  inline void clear_racial();
  static const int kRacialFieldNumber = 4;
  inline const ::std::string& racial() const;
  inline void set_racial(const ::std::string& value);
  inline void set_racial(const char* value);
  inline void set_racial(const void* value, size_t size);
  inline ::std::string* mutable_racial();
  inline ::std::string* release_racial();
  inline void set_allocated_racial(::std::string* racial);

  // required bytes nick_name = 5;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 5;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // required bytes level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline const ::std::string& level() const;
  inline void set_level(const ::std::string& value);
  inline void set_level(const char* value);
  inline void set_level(const void* value, size_t size);
  inline ::std::string* mutable_level();
  inline ::std::string* release_level();
  inline void set_allocated_level(::std::string* level);

  // @@protoc_insertion_point(class_scope:Battle_Role_Info)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_battle_pos_id();
  inline void clear_has_battle_pos_id();
  inline void set_has_role_type();
  inline void clear_has_role_type();
  inline void set_has_racial();
  inline void clear_has_racial();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 battle_pos_id_;
  ::std::string* role_type_;
  ::std::string* racial_;
  ::std::string* nick_name_;
  ::std::string* level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static Battle_Role_Info* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Battle_Info : public ::google::protobuf::Message {
 public:
  S2C_Battle_Info();
  virtual ~S2C_Battle_Info();

  S2C_Battle_Info(const S2C_Battle_Info& from);

  inline S2C_Battle_Info& operator=(const S2C_Battle_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Battle_Info& default_instance();

  void Swap(S2C_Battle_Info* other);

  // implements Message ----------------------------------------------

  S2C_Battle_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Battle_Info& from);
  void MergeFrom(const S2C_Battle_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 battle_index = 1;
  inline bool has_battle_index() const;
  inline void clear_battle_index();
  static const int kBattleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 battle_index() const;
  inline void set_battle_index(::google::protobuf::int64 value);

  // repeated .Battle_Role_Info list_battle_role_infos = 2;
  inline int list_battle_role_infos_size() const;
  inline void clear_list_battle_role_infos();
  static const int kListBattleRoleInfosFieldNumber = 2;
  inline const ::Battle_Role_Info& list_battle_role_infos(int index) const;
  inline ::Battle_Role_Info* mutable_list_battle_role_infos(int index);
  inline ::Battle_Role_Info* add_list_battle_role_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Battle_Role_Info >&
      list_battle_role_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Battle_Role_Info >*
      mutable_list_battle_role_infos();

  // @@protoc_insertion_point(class_scope:S2C_Battle_Info)
 private:
  inline void set_has_battle_index();
  inline void clear_has_battle_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 battle_index_;
  ::google::protobuf::RepeatedPtrField< ::Battle_Role_Info > list_battle_role_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Battle_Info* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Battle_Frame_Info : public ::google::protobuf::Message {
 public:
  C2S_Battle_Frame_Info();
  virtual ~C2S_Battle_Frame_Info();

  C2S_Battle_Frame_Info(const C2S_Battle_Frame_Info& from);

  inline C2S_Battle_Frame_Info& operator=(const C2S_Battle_Frame_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Battle_Frame_Info& default_instance();

  void Swap(C2S_Battle_Frame_Info* other);

  // implements Message ----------------------------------------------

  C2S_Battle_Frame_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Battle_Frame_Info& from);
  void MergeFrom(const C2S_Battle_Frame_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 battle_index = 1;
  inline bool has_battle_index() const;
  inline void clear_battle_index();
  static const int kBattleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 battle_index() const;
  inline void set_battle_index(::google::protobuf::int64 value);

  // required sint32 battle_frame_index = 2;
  inline bool has_battle_frame_index() const;
  inline void clear_battle_frame_index();
  static const int kBattleFrameIndexFieldNumber = 2;
  inline ::google::protobuf::int32 battle_frame_index() const;
  inline void set_battle_frame_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Battle_Frame_Info)
 private:
  inline void set_has_battle_index();
  inline void clear_has_battle_index();
  inline void set_has_battle_frame_index();
  inline void clear_has_battle_frame_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 battle_index_;
  ::google::protobuf::int32 battle_frame_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Battle_Frame_Info* default_instance_;
};
// -------------------------------------------------------------------

class Battle_Frame_Info : public ::google::protobuf::Message {
 public:
  Battle_Frame_Info();
  virtual ~Battle_Frame_Info();

  Battle_Frame_Info(const Battle_Frame_Info& from);

  inline Battle_Frame_Info& operator=(const Battle_Frame_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Battle_Frame_Info& default_instance();

  void Swap(Battle_Frame_Info* other);

  // implements Message ----------------------------------------------

  Battle_Frame_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Battle_Frame_Info& from);
  void MergeFrom(const Battle_Frame_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 battle_pos_id = 2;
  inline bool has_battle_pos_id() const;
  inline void clear_battle_pos_id();
  static const int kBattlePosIdFieldNumber = 2;
  inline ::google::protobuf::int64 battle_pos_id() const;
  inline void set_battle_pos_id(::google::protobuf::int64 value);

  // required bytes role_type = 3;
  inline bool has_role_type() const;
  inline void clear_role_type();
  static const int kRoleTypeFieldNumber = 3;
  inline const ::std::string& role_type() const;
  inline void set_role_type(const ::std::string& value);
  inline void set_role_type(const char* value);
  inline void set_role_type(const void* value, size_t size);
  inline ::std::string* mutable_role_type();
  inline ::std::string* release_role_type();
  inline void set_allocated_role_type(::std::string* role_type);

  // required bytes racial = 4;
  inline bool has_racial() const;
  inline void clear_racial();
  static const int kRacialFieldNumber = 4;
  inline const ::std::string& racial() const;
  inline void set_racial(const ::std::string& value);
  inline void set_racial(const char* value);
  inline void set_racial(const void* value, size_t size);
  inline ::std::string* mutable_racial();
  inline ::std::string* release_racial();
  inline void set_allocated_racial(::std::string* racial);

  // required bytes nick_name = 5;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 5;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // required bytes level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline const ::std::string& level() const;
  inline void set_level(const ::std::string& value);
  inline void set_level(const char* value);
  inline void set_level(const void* value, size_t size);
  inline ::std::string* mutable_level();
  inline ::std::string* release_level();
  inline void set_allocated_level(::std::string* level);

  // @@protoc_insertion_point(class_scope:Battle_Frame_Info)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_battle_pos_id();
  inline void clear_has_battle_pos_id();
  inline void set_has_role_type();
  inline void clear_has_role_type();
  inline void set_has_racial();
  inline void clear_has_racial();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 battle_pos_id_;
  ::std::string* role_type_;
  ::std::string* racial_;
  ::std::string* nick_name_;
  ::std::string* level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static Battle_Frame_Info* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Battle_Frame_Info : public ::google::protobuf::Message {
 public:
  S2C_Battle_Frame_Info();
  virtual ~S2C_Battle_Frame_Info();

  S2C_Battle_Frame_Info(const S2C_Battle_Frame_Info& from);

  inline S2C_Battle_Frame_Info& operator=(const S2C_Battle_Frame_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Battle_Frame_Info& default_instance();

  void Swap(S2C_Battle_Frame_Info* other);

  // implements Message ----------------------------------------------

  S2C_Battle_Frame_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Battle_Frame_Info& from);
  void MergeFrom(const S2C_Battle_Frame_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 battle_index = 1;
  inline bool has_battle_index() const;
  inline void clear_battle_index();
  static const int kBattleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 battle_index() const;
  inline void set_battle_index(::google::protobuf::int64 value);

  // required sint32 battle_frame_index = 2;
  inline bool has_battle_frame_index() const;
  inline void clear_battle_frame_index();
  static const int kBattleFrameIndexFieldNumber = 2;
  inline ::google::protobuf::int32 battle_frame_index() const;
  inline void set_battle_frame_index(::google::protobuf::int32 value);

  // required .Battle_Frame_Info battle_frame_info = 3;
  inline bool has_battle_frame_info() const;
  inline void clear_battle_frame_info();
  static const int kBattleFrameInfoFieldNumber = 3;
  inline const ::Battle_Frame_Info& battle_frame_info() const;
  inline ::Battle_Frame_Info* mutable_battle_frame_info();
  inline ::Battle_Frame_Info* release_battle_frame_info();
  inline void set_allocated_battle_frame_info(::Battle_Frame_Info* battle_frame_info);

  // @@protoc_insertion_point(class_scope:S2C_Battle_Frame_Info)
 private:
  inline void set_has_battle_index();
  inline void clear_has_battle_index();
  inline void set_has_battle_frame_index();
  inline void clear_has_battle_frame_index();
  inline void set_has_battle_frame_info();
  inline void clear_has_battle_frame_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 battle_index_;
  ::Battle_Frame_Info* battle_frame_info_;
  ::google::protobuf::int32 battle_frame_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Battle_Frame_Info* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Avatar_Goods_List : public ::google::protobuf::Message {
 public:
  S2C_Avatar_Goods_List();
  virtual ~S2C_Avatar_Goods_List();

  S2C_Avatar_Goods_List(const S2C_Avatar_Goods_List& from);

  inline S2C_Avatar_Goods_List& operator=(const S2C_Avatar_Goods_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Avatar_Goods_List& default_instance();

  void Swap(S2C_Avatar_Goods_List* other);

  // implements Message ----------------------------------------------

  S2C_Avatar_Goods_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Avatar_Goods_List& from);
  void MergeFrom(const S2C_Avatar_Goods_List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameShopAvatarInfo list_avatar_info = 1;
  inline int list_avatar_info_size() const;
  inline void clear_list_avatar_info();
  static const int kListAvatarInfoFieldNumber = 1;
  inline const ::GameShopAvatarInfo& list_avatar_info(int index) const;
  inline ::GameShopAvatarInfo* mutable_list_avatar_info(int index);
  inline ::GameShopAvatarInfo* add_list_avatar_info();
  inline const ::google::protobuf::RepeatedPtrField< ::GameShopAvatarInfo >&
      list_avatar_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::GameShopAvatarInfo >*
      mutable_list_avatar_info();

  // @@protoc_insertion_point(class_scope:S2C_Avatar_Goods_List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GameShopAvatarInfo > list_avatar_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Avatar_Goods_List* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Buy_Avatar_Goods : public ::google::protobuf::Message {
 public:
  C2S_Buy_Avatar_Goods();
  virtual ~C2S_Buy_Avatar_Goods();

  C2S_Buy_Avatar_Goods(const C2S_Buy_Avatar_Goods& from);

  inline C2S_Buy_Avatar_Goods& operator=(const C2S_Buy_Avatar_Goods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Buy_Avatar_Goods& default_instance();

  void Swap(C2S_Buy_Avatar_Goods* other);

  // implements Message ----------------------------------------------

  C2S_Buy_Avatar_Goods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Buy_Avatar_Goods& from);
  void MergeFrom(const C2S_Buy_Avatar_Goods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GameShopAvatarInfo list_avatar_info = 1;
  inline bool has_list_avatar_info() const;
  inline void clear_list_avatar_info();
  static const int kListAvatarInfoFieldNumber = 1;
  inline const ::GameShopAvatarInfo& list_avatar_info() const;
  inline ::GameShopAvatarInfo* mutable_list_avatar_info();
  inline ::GameShopAvatarInfo* release_list_avatar_info();
  inline void set_allocated_list_avatar_info(::GameShopAvatarInfo* list_avatar_info);

  // @@protoc_insertion_point(class_scope:C2S_Buy_Avatar_Goods)
 private:
  inline void set_has_list_avatar_info();
  inline void clear_has_list_avatar_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GameShopAvatarInfo* list_avatar_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Buy_Avatar_Goods* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Buy_Avatar_Goods : public ::google::protobuf::Message {
 public:
  S2C_Buy_Avatar_Goods();
  virtual ~S2C_Buy_Avatar_Goods();

  S2C_Buy_Avatar_Goods(const S2C_Buy_Avatar_Goods& from);

  inline S2C_Buy_Avatar_Goods& operator=(const S2C_Buy_Avatar_Goods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Buy_Avatar_Goods& default_instance();

  void Swap(S2C_Buy_Avatar_Goods* other);

  // implements Message ----------------------------------------------

  S2C_Buy_Avatar_Goods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Buy_Avatar_Goods& from);
  void MergeFrom(const S2C_Buy_Avatar_Goods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required .GameShopAvatarInfo list_avatar_info = 2;
  inline bool has_list_avatar_info() const;
  inline void clear_list_avatar_info();
  static const int kListAvatarInfoFieldNumber = 2;
  inline const ::GameShopAvatarInfo& list_avatar_info() const;
  inline ::GameShopAvatarInfo* mutable_list_avatar_info();
  inline ::GameShopAvatarInfo* release_list_avatar_info();
  inline void set_allocated_list_avatar_info(::GameShopAvatarInfo* list_avatar_info);

  // @@protoc_insertion_point(class_scope:S2C_Buy_Avatar_Goods)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_list_avatar_info();
  inline void clear_has_list_avatar_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::GameShopAvatarInfo* list_avatar_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Buy_Avatar_Goods* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Bag_Item : public ::google::protobuf::Message {
 public:
  C2S_Bag_Item();
  virtual ~C2S_Bag_Item();

  C2S_Bag_Item(const C2S_Bag_Item& from);

  inline C2S_Bag_Item& operator=(const C2S_Bag_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Bag_Item& default_instance();

  void Swap(C2S_Bag_Item* other);

  // implements Message ----------------------------------------------

  C2S_Bag_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Bag_Item& from);
  void MergeFrom(const C2S_Bag_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Bag_Item)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Bag_Item* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_Role_Bag_Item : public ::google::protobuf::Message {
 public:
  S2C_Sync_Role_Bag_Item();
  virtual ~S2C_Sync_Role_Bag_Item();

  S2C_Sync_Role_Bag_Item(const S2C_Sync_Role_Bag_Item& from);

  inline S2C_Sync_Role_Bag_Item& operator=(const S2C_Sync_Role_Bag_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_Role_Bag_Item& default_instance();

  void Swap(S2C_Sync_Role_Bag_Item* other);

  // implements Message ----------------------------------------------

  S2C_Sync_Role_Bag_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_Role_Bag_Item& from);
  void MergeFrom(const S2C_Sync_Role_Bag_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 game_coin = 1;
  inline bool has_game_coin() const;
  inline void clear_game_coin();
  static const int kGameCoinFieldNumber = 1;
  inline ::google::protobuf::int64 game_coin() const;
  inline void set_game_coin(::google::protobuf::int64 value);

  // required int64 game_Deposit = 2;
  inline bool has_game_deposit() const;
  inline void clear_game_deposit();
  static const int kGameDepositFieldNumber = 2;
  inline ::google::protobuf::int64 game_deposit() const;
  inline void set_game_deposit(::google::protobuf::int64 value);

  // required .universal_data game_bag = 3;
  inline bool has_game_bag() const;
  inline void clear_game_bag();
  static const int kGameBagFieldNumber = 3;
  inline const ::universal_data& game_bag() const;
  inline ::universal_data* mutable_game_bag();
  inline ::universal_data* release_game_bag();
  inline void set_allocated_game_bag(::universal_data* game_bag);

  // @@protoc_insertion_point(class_scope:S2C_Sync_Role_Bag_Item)
 private:
  inline void set_has_game_coin();
  inline void clear_has_game_coin();
  inline void set_has_game_deposit();
  inline void clear_has_game_deposit();
  inline void set_has_game_bag();
  inline void clear_has_game_bag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 game_coin_;
  ::google::protobuf::int64 game_deposit_;
  ::universal_data* game_bag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_Role_Bag_Item* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Bag_MoveItem : public ::google::protobuf::Message {
 public:
  C2S_Bag_MoveItem();
  virtual ~C2S_Bag_MoveItem();

  C2S_Bag_MoveItem(const C2S_Bag_MoveItem& from);

  inline C2S_Bag_MoveItem& operator=(const C2S_Bag_MoveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Bag_MoveItem& default_instance();

  void Swap(C2S_Bag_MoveItem* other);

  // implements Message ----------------------------------------------

  C2S_Bag_MoveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Bag_MoveItem& from);
  void MergeFrom(const C2S_Bag_MoveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 src_item_index = 2;
  inline bool has_src_item_index() const;
  inline void clear_src_item_index();
  static const int kSrcItemIndexFieldNumber = 2;
  inline ::google::protobuf::int64 src_item_index() const;
  inline void set_src_item_index(::google::protobuf::int64 value);

  // required sint32 src_item_pos = 3;
  inline bool has_src_item_pos() const;
  inline void clear_src_item_pos();
  static const int kSrcItemPosFieldNumber = 3;
  inline ::google::protobuf::int32 src_item_pos() const;
  inline void set_src_item_pos(::google::protobuf::int32 value);

  // required sint32 tar_item_pos = 4;
  inline bool has_tar_item_pos() const;
  inline void clear_tar_item_pos();
  static const int kTarItemPosFieldNumber = 4;
  inline ::google::protobuf::int32 tar_item_pos() const;
  inline void set_tar_item_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Bag_MoveItem)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_src_item_index();
  inline void clear_has_src_item_index();
  inline void set_has_src_item_pos();
  inline void clear_has_src_item_pos();
  inline void set_has_tar_item_pos();
  inline void clear_has_tar_item_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 src_item_index_;
  ::google::protobuf::int32 src_item_pos_;
  ::google::protobuf::int32 tar_item_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Bag_MoveItem* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Use_Item : public ::google::protobuf::Message {
 public:
  C2S_Use_Item();
  virtual ~C2S_Use_Item();

  C2S_Use_Item(const C2S_Use_Item& from);

  inline C2S_Use_Item& operator=(const C2S_Use_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Use_Item& default_instance();

  void Swap(C2S_Use_Item* other);

  // implements Message ----------------------------------------------

  C2S_Use_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Use_Item& from);
  void MergeFrom(const C2S_Use_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 bag_pos = 2;
  inline bool has_bag_pos() const;
  inline void clear_bag_pos();
  static const int kBagPosFieldNumber = 2;
  inline ::google::protobuf::int32 bag_pos() const;
  inline void set_bag_pos(::google::protobuf::int32 value);

  // required int64 item_index = 3;
  inline bool has_item_index() const;
  inline void clear_item_index();
  static const int kItemIndexFieldNumber = 3;
  inline ::google::protobuf::int64 item_index() const;
  inline void set_item_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Use_Item)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_bag_pos();
  inline void clear_has_bag_pos();
  inline void set_has_item_index();
  inline void clear_has_item_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 item_index_;
  ::google::protobuf::int32 bag_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Use_Item* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Use_Item : public ::google::protobuf::Message {
 public:
  S2C_Use_Item();
  virtual ~S2C_Use_Item();

  S2C_Use_Item(const S2C_Use_Item& from);

  inline S2C_Use_Item& operator=(const S2C_Use_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Use_Item& default_instance();

  void Swap(S2C_Use_Item* other);

  // implements Message ----------------------------------------------

  S2C_Use_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Use_Item& from);
  void MergeFrom(const S2C_Use_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required sint32 bag_pos = 2;
  inline bool has_bag_pos() const;
  inline void clear_bag_pos();
  static const int kBagPosFieldNumber = 2;
  inline ::google::protobuf::int32 bag_pos() const;
  inline void set_bag_pos(::google::protobuf::int32 value);

  // required int64 item_index = 3;
  inline bool has_item_index() const;
  inline void clear_item_index();
  static const int kItemIndexFieldNumber = 3;
  inline ::google::protobuf::int64 item_index() const;
  inline void set_item_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Use_Item)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_bag_pos();
  inline void clear_has_bag_pos();
  inline void set_has_item_index();
  inline void clear_has_item_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 item_index_;
  ::google::protobuf::int32 bag_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Use_Item* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Role_Equip : public ::google::protobuf::Message {
 public:
  C2S_Role_Equip();
  virtual ~C2S_Role_Equip();

  C2S_Role_Equip(const C2S_Role_Equip& from);

  inline C2S_Role_Equip& operator=(const C2S_Role_Equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Role_Equip& default_instance();

  void Swap(C2S_Role_Equip* other);

  // implements Message ----------------------------------------------

  C2S_Role_Equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Role_Equip& from);
  void MergeFrom(const C2S_Role_Equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Role_Equip)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Role_Equip* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Role_Equip : public ::google::protobuf::Message {
 public:
  S2C_Role_Equip();
  virtual ~S2C_Role_Equip();

  S2C_Role_Equip(const S2C_Role_Equip& from);

  inline S2C_Role_Equip& operator=(const S2C_Role_Equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Role_Equip& default_instance();

  void Swap(S2C_Role_Equip* other);

  // implements Message ----------------------------------------------

  S2C_Role_Equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Role_Equip& from);
  void MergeFrom(const S2C_Role_Equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .dict_item equips = 2;
  inline bool has_equips() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 2;
  inline const ::dict_item& equips() const;
  inline ::dict_item* mutable_equips();
  inline ::dict_item* release_equips();
  inline void set_allocated_equips(::dict_item* equips);

  // @@protoc_insertion_point(class_scope:S2C_Role_Equip)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_equips();
  inline void clear_has_equips();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::dict_item* equips_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Role_Equip* default_instance_;
};
// -------------------------------------------------------------------

class C2S_TakeOff_Equip : public ::google::protobuf::Message {
 public:
  C2S_TakeOff_Equip();
  virtual ~C2S_TakeOff_Equip();

  C2S_TakeOff_Equip(const C2S_TakeOff_Equip& from);

  inline C2S_TakeOff_Equip& operator=(const C2S_TakeOff_Equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_TakeOff_Equip& default_instance();

  void Swap(C2S_TakeOff_Equip* other);

  // implements Message ----------------------------------------------

  C2S_TakeOff_Equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_TakeOff_Equip& from);
  void MergeFrom(const C2S_TakeOff_Equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 equip_index = 2;
  inline bool has_equip_index() const;
  inline void clear_equip_index();
  static const int kEquipIndexFieldNumber = 2;
  inline ::google::protobuf::int64 equip_index() const;
  inline void set_equip_index(::google::protobuf::int64 value);

  // required sint32 equip_pos_type = 3;
  inline bool has_equip_pos_type() const;
  inline void clear_equip_pos_type();
  static const int kEquipPosTypeFieldNumber = 3;
  inline ::google::protobuf::int32 equip_pos_type() const;
  inline void set_equip_pos_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_TakeOff_Equip)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_equip_index();
  inline void clear_has_equip_index();
  inline void set_has_equip_pos_type();
  inline void clear_has_equip_pos_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 equip_index_;
  ::google::protobuf::int32 equip_pos_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_TakeOff_Equip* default_instance_;
};
// -------------------------------------------------------------------

class S2C_TakeOff_Equip : public ::google::protobuf::Message {
 public:
  S2C_TakeOff_Equip();
  virtual ~S2C_TakeOff_Equip();

  S2C_TakeOff_Equip(const S2C_TakeOff_Equip& from);

  inline S2C_TakeOff_Equip& operator=(const S2C_TakeOff_Equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_TakeOff_Equip& default_instance();

  void Swap(S2C_TakeOff_Equip* other);

  // implements Message ----------------------------------------------

  S2C_TakeOff_Equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_TakeOff_Equip& from);
  void MergeFrom(const S2C_TakeOff_Equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 equip_index = 2;
  inline bool has_equip_index() const;
  inline void clear_equip_index();
  static const int kEquipIndexFieldNumber = 2;
  inline ::google::protobuf::int64 equip_index() const;
  inline void set_equip_index(::google::protobuf::int64 value);

  // required sint32 equip_pos_type = 3;
  inline bool has_equip_pos_type() const;
  inline void clear_equip_pos_type();
  static const int kEquipPosTypeFieldNumber = 3;
  inline ::google::protobuf::int32 equip_pos_type() const;
  inline void set_equip_pos_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_TakeOff_Equip)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_equip_index();
  inline void clear_has_equip_index();
  inline void set_has_equip_pos_type();
  inline void clear_has_equip_pos_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 equip_index_;
  ::google::protobuf::int32 equip_pos_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_TakeOff_Equip* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Bag_Item_Insert : public ::google::protobuf::Message {
 public:
  S2C_Bag_Item_Insert();
  virtual ~S2C_Bag_Item_Insert();

  S2C_Bag_Item_Insert(const S2C_Bag_Item_Insert& from);

  inline S2C_Bag_Item_Insert& operator=(const S2C_Bag_Item_Insert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Bag_Item_Insert& default_instance();

  void Swap(S2C_Bag_Item_Insert* other);

  // implements Message ----------------------------------------------

  S2C_Bag_Item_Insert* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Bag_Item_Insert& from);
  void MergeFrom(const S2C_Bag_Item_Insert& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .item item_info = 1;
  inline bool has_item_info() const;
  inline void clear_item_info();
  static const int kItemInfoFieldNumber = 1;
  inline const ::item& item_info() const;
  inline ::item* mutable_item_info();
  inline ::item* release_item_info();
  inline void set_allocated_item_info(::item* item_info);

  // @@protoc_insertion_point(class_scope:S2C_Bag_Item_Insert)
 private:
  inline void set_has_item_info();
  inline void clear_has_item_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::item* item_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Bag_Item_Insert* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Bag_Item_Remove : public ::google::protobuf::Message {
 public:
  S2C_Bag_Item_Remove();
  virtual ~S2C_Bag_Item_Remove();

  S2C_Bag_Item_Remove(const S2C_Bag_Item_Remove& from);

  inline S2C_Bag_Item_Remove& operator=(const S2C_Bag_Item_Remove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Bag_Item_Remove& default_instance();

  void Swap(S2C_Bag_Item_Remove* other);

  // implements Message ----------------------------------------------

  S2C_Bag_Item_Remove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Bag_Item_Remove& from);
  void MergeFrom(const S2C_Bag_Item_Remove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .item item_info = 1;
  inline bool has_item_info() const;
  inline void clear_item_info();
  static const int kItemInfoFieldNumber = 1;
  inline const ::item& item_info() const;
  inline ::item* mutable_item_info();
  inline ::item* release_item_info();
  inline void set_allocated_item_info(::item* item_info);

  // @@protoc_insertion_point(class_scope:S2C_Bag_Item_Remove)
 private:
  inline void set_has_item_info();
  inline void clear_has_item_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::item* item_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Bag_Item_Remove* default_instance_;
};
// -------------------------------------------------------------------

class C2S_SuitShopInfo : public ::google::protobuf::Message {
 public:
  C2S_SuitShopInfo();
  virtual ~C2S_SuitShopInfo();

  C2S_SuitShopInfo(const C2S_SuitShopInfo& from);

  inline C2S_SuitShopInfo& operator=(const C2S_SuitShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_SuitShopInfo& default_instance();

  void Swap(C2S_SuitShopInfo* other);

  // implements Message ----------------------------------------------

  C2S_SuitShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_SuitShopInfo& from);
  void MergeFrom(const C2S_SuitShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_SuitShopInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_SuitShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_SuitShopInfo : public ::google::protobuf::Message {
 public:
  S2C_SuitShopInfo();
  virtual ~S2C_SuitShopInfo();

  S2C_SuitShopInfo(const S2C_SuitShopInfo& from);

  inline S2C_SuitShopInfo& operator=(const S2C_SuitShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_SuitShopInfo& default_instance();

  void Swap(S2C_SuitShopInfo* other);

  // implements Message ----------------------------------------------

  S2C_SuitShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_SuitShopInfo& from);
  void MergeFrom(const S2C_SuitShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // repeated .suit_goods_info list_buy_suit = 2;
  inline int list_buy_suit_size() const;
  inline void clear_list_buy_suit();
  static const int kListBuySuitFieldNumber = 2;
  inline const ::suit_goods_info& list_buy_suit(int index) const;
  inline ::suit_goods_info* mutable_list_buy_suit(int index);
  inline ::suit_goods_info* add_list_buy_suit();
  inline const ::google::protobuf::RepeatedPtrField< ::suit_goods_info >&
      list_buy_suit() const;
  inline ::google::protobuf::RepeatedPtrField< ::suit_goods_info >*
      mutable_list_buy_suit();

  // required int64 suit_shop_surplus_update_time = 3;
  inline bool has_suit_shop_surplus_update_time() const;
  inline void clear_suit_shop_surplus_update_time();
  static const int kSuitShopSurplusUpdateTimeFieldNumber = 3;
  inline ::google::protobuf::int64 suit_shop_surplus_update_time() const;
  inline void set_suit_shop_surplus_update_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_SuitShopInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_shop_surplus_update_time();
  inline void clear_has_suit_shop_surplus_update_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::RepeatedPtrField< ::suit_goods_info > list_buy_suit_;
  ::google::protobuf::int64 suit_shop_surplus_update_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_SuitShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BuySuitInShop : public ::google::protobuf::Message {
 public:
  C2S_BuySuitInShop();
  virtual ~C2S_BuySuitInShop();

  C2S_BuySuitInShop(const C2S_BuySuitInShop& from);

  inline C2S_BuySuitInShop& operator=(const C2S_BuySuitInShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BuySuitInShop& default_instance();

  void Swap(C2S_BuySuitInShop* other);

  // implements Message ----------------------------------------------

  C2S_BuySuitInShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BuySuitInShop& from);
  void MergeFrom(const C2S_BuySuitInShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 suit_shop_id = 2;
  inline bool has_suit_shop_id() const;
  inline void clear_suit_shop_id();
  static const int kSuitShopIdFieldNumber = 2;
  inline ::google::protobuf::int32 suit_shop_id() const;
  inline void set_suit_shop_id(::google::protobuf::int32 value);

  // required sint32 suit_duration = 3;
  inline bool has_suit_duration() const;
  inline void clear_suit_duration();
  static const int kSuitDurationFieldNumber = 3;
  inline ::google::protobuf::int32 suit_duration() const;
  inline void set_suit_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_BuySuitInShop)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_shop_id();
  inline void clear_has_suit_shop_id();
  inline void set_has_suit_duration();
  inline void clear_has_suit_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 suit_shop_id_;
  ::google::protobuf::int32 suit_duration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_BuySuitInShop* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BuySuitInShop : public ::google::protobuf::Message {
 public:
  S2C_BuySuitInShop();
  virtual ~S2C_BuySuitInShop();

  S2C_BuySuitInShop(const S2C_BuySuitInShop& from);

  inline S2C_BuySuitInShop& operator=(const S2C_BuySuitInShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BuySuitInShop& default_instance();

  void Swap(S2C_BuySuitInShop* other);

  // implements Message ----------------------------------------------

  S2C_BuySuitInShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BuySuitInShop& from);
  void MergeFrom(const S2C_BuySuitInShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 suit_shop_id = 3;
  inline bool has_suit_shop_id() const;
  inline void clear_suit_shop_id();
  static const int kSuitShopIdFieldNumber = 3;
  inline ::google::protobuf::int32 suit_shop_id() const;
  inline void set_suit_shop_id(::google::protobuf::int32 value);

  // required sint32 suit_duration = 4;
  inline bool has_suit_duration() const;
  inline void clear_suit_duration();
  static const int kSuitDurationFieldNumber = 4;
  inline ::google::protobuf::int32 suit_duration() const;
  inline void set_suit_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_BuySuitInShop)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_shop_id();
  inline void clear_has_suit_shop_id();
  inline void set_has_suit_duration();
  inline void clear_has_suit_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 suit_shop_id_;
  ::google::protobuf::int32 suit_duration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_BuySuitInShop* default_instance_;
};
// -------------------------------------------------------------------

class C2S_RoleSuitInfo : public ::google::protobuf::Message {
 public:
  C2S_RoleSuitInfo();
  virtual ~C2S_RoleSuitInfo();

  C2S_RoleSuitInfo(const C2S_RoleSuitInfo& from);

  inline C2S_RoleSuitInfo& operator=(const C2S_RoleSuitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_RoleSuitInfo& default_instance();

  void Swap(C2S_RoleSuitInfo* other);

  // implements Message ----------------------------------------------

  C2S_RoleSuitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_RoleSuitInfo& from);
  void MergeFrom(const C2S_RoleSuitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_RoleSuitInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_RoleSuitInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_RoleSuitInfo : public ::google::protobuf::Message {
 public:
  S2C_RoleSuitInfo();
  virtual ~S2C_RoleSuitInfo();

  S2C_RoleSuitInfo(const S2C_RoleSuitInfo& from);

  inline S2C_RoleSuitInfo& operator=(const S2C_RoleSuitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_RoleSuitInfo& default_instance();

  void Swap(S2C_RoleSuitInfo* other);

  // implements Message ----------------------------------------------

  S2C_RoleSuitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_RoleSuitInfo& from);
  void MergeFrom(const S2C_RoleSuitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .list_role_suit_info role_suit_info = 3;
  inline bool has_role_suit_info() const;
  inline void clear_role_suit_info();
  static const int kRoleSuitInfoFieldNumber = 3;
  inline const ::list_role_suit_info& role_suit_info() const;
  inline ::list_role_suit_info* mutable_role_suit_info();
  inline ::list_role_suit_info* release_role_suit_info();
  inline void set_allocated_role_suit_info(::list_role_suit_info* role_suit_info);

  // @@protoc_insertion_point(class_scope:S2C_RoleSuitInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_role_suit_info();
  inline void clear_has_role_suit_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::list_role_suit_info* role_suit_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_RoleSuitInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2S_DressSuit : public ::google::protobuf::Message {
 public:
  C2S_DressSuit();
  virtual ~C2S_DressSuit();

  C2S_DressSuit(const C2S_DressSuit& from);

  inline C2S_DressSuit& operator=(const C2S_DressSuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_DressSuit& default_instance();

  void Swap(C2S_DressSuit* other);

  // implements Message ----------------------------------------------

  C2S_DressSuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_DressSuit& from);
  void MergeFrom(const C2S_DressSuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 suit_id = 2;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 2;
  inline ::google::protobuf::int32 suit_id() const;
  inline void set_suit_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_DressSuit)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_id();
  inline void clear_has_suit_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 suit_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_DressSuit* default_instance_;
};
// -------------------------------------------------------------------

class S2C_DressSuit : public ::google::protobuf::Message {
 public:
  S2C_DressSuit();
  virtual ~S2C_DressSuit();

  S2C_DressSuit(const S2C_DressSuit& from);

  inline S2C_DressSuit& operator=(const S2C_DressSuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_DressSuit& default_instance();

  void Swap(S2C_DressSuit* other);

  // implements Message ----------------------------------------------

  S2C_DressSuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_DressSuit& from);
  void MergeFrom(const S2C_DressSuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 suit_id = 3;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 3;
  inline ::google::protobuf::int32 suit_id() const;
  inline void set_suit_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_DressSuit)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_id();
  inline void clear_has_suit_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 suit_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_DressSuit* default_instance_;
};
// -------------------------------------------------------------------

class C2S_TakeOffSuit : public ::google::protobuf::Message {
 public:
  C2S_TakeOffSuit();
  virtual ~C2S_TakeOffSuit();

  C2S_TakeOffSuit(const C2S_TakeOffSuit& from);

  inline C2S_TakeOffSuit& operator=(const C2S_TakeOffSuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_TakeOffSuit& default_instance();

  void Swap(C2S_TakeOffSuit* other);

  // implements Message ----------------------------------------------

  C2S_TakeOffSuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_TakeOffSuit& from);
  void MergeFrom(const C2S_TakeOffSuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 suit_id = 2;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 2;
  inline ::google::protobuf::int32 suit_id() const;
  inline void set_suit_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_TakeOffSuit)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_id();
  inline void clear_has_suit_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 suit_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_TakeOffSuit* default_instance_;
};
// -------------------------------------------------------------------

class S2C_TakeOffSuit : public ::google::protobuf::Message {
 public:
  S2C_TakeOffSuit();
  virtual ~S2C_TakeOffSuit();

  S2C_TakeOffSuit(const S2C_TakeOffSuit& from);

  inline S2C_TakeOffSuit& operator=(const S2C_TakeOffSuit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_TakeOffSuit& default_instance();

  void Swap(S2C_TakeOffSuit* other);

  // implements Message ----------------------------------------------

  S2C_TakeOffSuit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_TakeOffSuit& from);
  void MergeFrom(const S2C_TakeOffSuit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 suit_id = 3;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 3;
  inline ::google::protobuf::int32 suit_id() const;
  inline void set_suit_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_TakeOffSuit)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_id();
  inline void clear_has_suit_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 suit_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_TakeOffSuit* default_instance_;
};
// -------------------------------------------------------------------

class C2S_AskRewardList : public ::google::protobuf::Message {
 public:
  C2S_AskRewardList();
  virtual ~C2S_AskRewardList();

  C2S_AskRewardList(const C2S_AskRewardList& from);

  inline C2S_AskRewardList& operator=(const C2S_AskRewardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_AskRewardList& default_instance();

  void Swap(C2S_AskRewardList* other);

  // implements Message ----------------------------------------------

  C2S_AskRewardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_AskRewardList& from);
  void MergeFrom(const C2S_AskRewardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_AskRewardList)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_AskRewardList* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Sync_Role_RewardList : public ::google::protobuf::Message {
 public:
  S2C_Sync_Role_RewardList();
  virtual ~S2C_Sync_Role_RewardList();

  S2C_Sync_Role_RewardList(const S2C_Sync_Role_RewardList& from);

  inline S2C_Sync_Role_RewardList& operator=(const S2C_Sync_Role_RewardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Sync_Role_RewardList& default_instance();

  void Swap(S2C_Sync_Role_RewardList* other);

  // implements Message ----------------------------------------------

  S2C_Sync_Role_RewardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Sync_Role_RewardList& from);
  void MergeFrom(const S2C_Sync_Role_RewardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // repeated int64 list_reward_exp = 2;
  inline int list_reward_exp_size() const;
  inline void clear_list_reward_exp();
  static const int kListRewardExpFieldNumber = 2;
  inline ::google::protobuf::int64 list_reward_exp(int index) const;
  inline void set_list_reward_exp(int index, ::google::protobuf::int64 value);
  inline void add_list_reward_exp(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      list_reward_exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_list_reward_exp();

  // repeated int64 list_reward_money = 3;
  inline int list_reward_money_size() const;
  inline void clear_list_reward_money();
  static const int kListRewardMoneyFieldNumber = 3;
  inline ::google::protobuf::int64 list_reward_money(int index) const;
  inline void set_list_reward_money(int index, ::google::protobuf::int64 value);
  inline void add_list_reward_money(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      list_reward_money() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_list_reward_money();

  // repeated .item list_reward_item = 4;
  inline int list_reward_item_size() const;
  inline void clear_list_reward_item();
  static const int kListRewardItemFieldNumber = 4;
  inline const ::item& list_reward_item(int index) const;
  inline ::item* mutable_list_reward_item(int index);
  inline ::item* add_list_reward_item();
  inline const ::google::protobuf::RepeatedPtrField< ::item >&
      list_reward_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::item >*
      mutable_list_reward_item();

  // @@protoc_insertion_point(class_scope:S2C_Sync_Role_RewardList)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > list_reward_exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > list_reward_money_;
  ::google::protobuf::RepeatedPtrField< ::item > list_reward_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Sync_Role_RewardList* default_instance_;
};
// -------------------------------------------------------------------

class C2S_FaceShopInfo : public ::google::protobuf::Message {
 public:
  C2S_FaceShopInfo();
  virtual ~C2S_FaceShopInfo();

  C2S_FaceShopInfo(const C2S_FaceShopInfo& from);

  inline C2S_FaceShopInfo& operator=(const C2S_FaceShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_FaceShopInfo& default_instance();

  void Swap(C2S_FaceShopInfo* other);

  // implements Message ----------------------------------------------

  C2S_FaceShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_FaceShopInfo& from);
  void MergeFrom(const C2S_FaceShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_FaceShopInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_FaceShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_FaceShopInfo : public ::google::protobuf::Message {
 public:
  S2C_FaceShopInfo();
  virtual ~S2C_FaceShopInfo();

  S2C_FaceShopInfo(const S2C_FaceShopInfo& from);

  inline S2C_FaceShopInfo& operator=(const S2C_FaceShopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_FaceShopInfo& default_instance();

  void Swap(S2C_FaceShopInfo* other);

  // implements Message ----------------------------------------------

  S2C_FaceShopInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_FaceShopInfo& from);
  void MergeFrom(const S2C_FaceShopInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // repeated .face_goods_info list_original_buy_face = 2;
  inline int list_original_buy_face_size() const;
  inline void clear_list_original_buy_face();
  static const int kListOriginalBuyFaceFieldNumber = 2;
  inline const ::face_goods_info& list_original_buy_face(int index) const;
  inline ::face_goods_info* mutable_list_original_buy_face(int index);
  inline ::face_goods_info* add_list_original_buy_face();
  inline const ::google::protobuf::RepeatedPtrField< ::face_goods_info >&
      list_original_buy_face() const;
  inline ::google::protobuf::RepeatedPtrField< ::face_goods_info >*
      mutable_list_original_buy_face();

  // repeated .face_goods_info list_discount_buy_face = 3;
  inline int list_discount_buy_face_size() const;
  inline void clear_list_discount_buy_face();
  static const int kListDiscountBuyFaceFieldNumber = 3;
  inline const ::face_goods_info& list_discount_buy_face(int index) const;
  inline ::face_goods_info* mutable_list_discount_buy_face(int index);
  inline ::face_goods_info* add_list_discount_buy_face();
  inline const ::google::protobuf::RepeatedPtrField< ::face_goods_info >&
      list_discount_buy_face() const;
  inline ::google::protobuf::RepeatedPtrField< ::face_goods_info >*
      mutable_list_discount_buy_face();

  // required sint32 face_shop_surplus_update_time = 4;
  inline bool has_face_shop_surplus_update_time() const;
  inline void clear_face_shop_surplus_update_time();
  static const int kFaceShopSurplusUpdateTimeFieldNumber = 4;
  inline ::google::protobuf::int32 face_shop_surplus_update_time() const;
  inline void set_face_shop_surplus_update_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_FaceShopInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_face_shop_surplus_update_time();
  inline void clear_has_face_shop_surplus_update_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::RepeatedPtrField< ::face_goods_info > list_original_buy_face_;
  ::google::protobuf::RepeatedPtrField< ::face_goods_info > list_discount_buy_face_;
  ::google::protobuf::int32 face_shop_surplus_update_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_FaceShopInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BuyFaceInShop : public ::google::protobuf::Message {
 public:
  C2S_BuyFaceInShop();
  virtual ~C2S_BuyFaceInShop();

  C2S_BuyFaceInShop(const C2S_BuyFaceInShop& from);

  inline C2S_BuyFaceInShop& operator=(const C2S_BuyFaceInShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BuyFaceInShop& default_instance();

  void Swap(C2S_BuyFaceInShop* other);

  // implements Message ----------------------------------------------

  C2S_BuyFaceInShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BuyFaceInShop& from);
  void MergeFrom(const C2S_BuyFaceInShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 face_shop_id = 2;
  inline bool has_face_shop_id() const;
  inline void clear_face_shop_id();
  static const int kFaceShopIdFieldNumber = 2;
  inline ::google::protobuf::int32 face_shop_id() const;
  inline void set_face_shop_id(::google::protobuf::int32 value);

  // required sint32 face_duration = 3;
  inline bool has_face_duration() const;
  inline void clear_face_duration();
  static const int kFaceDurationFieldNumber = 3;
  inline ::google::protobuf::int32 face_duration() const;
  inline void set_face_duration(::google::protobuf::int32 value);

  // required bool face_isdiscount = 4;
  inline bool has_face_isdiscount() const;
  inline void clear_face_isdiscount();
  static const int kFaceIsdiscountFieldNumber = 4;
  inline bool face_isdiscount() const;
  inline void set_face_isdiscount(bool value);

  // @@protoc_insertion_point(class_scope:C2S_BuyFaceInShop)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_face_shop_id();
  inline void clear_has_face_shop_id();
  inline void set_has_face_duration();
  inline void clear_has_face_duration();
  inline void set_has_face_isdiscount();
  inline void clear_has_face_isdiscount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 face_shop_id_;
  ::google::protobuf::int32 face_duration_;
  bool face_isdiscount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_BuyFaceInShop* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BuyFaceInShop : public ::google::protobuf::Message {
 public:
  S2C_BuyFaceInShop();
  virtual ~S2C_BuyFaceInShop();

  S2C_BuyFaceInShop(const S2C_BuyFaceInShop& from);

  inline S2C_BuyFaceInShop& operator=(const S2C_BuyFaceInShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BuyFaceInShop& default_instance();

  void Swap(S2C_BuyFaceInShop* other);

  // implements Message ----------------------------------------------

  S2C_BuyFaceInShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BuyFaceInShop& from);
  void MergeFrom(const S2C_BuyFaceInShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 face_shop_id = 3;
  inline bool has_face_shop_id() const;
  inline void clear_face_shop_id();
  static const int kFaceShopIdFieldNumber = 3;
  inline ::google::protobuf::int32 face_shop_id() const;
  inline void set_face_shop_id(::google::protobuf::int32 value);

  // required sint32 face_duration = 4;
  inline bool has_face_duration() const;
  inline void clear_face_duration();
  static const int kFaceDurationFieldNumber = 4;
  inline ::google::protobuf::int32 face_duration() const;
  inline void set_face_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_BuyFaceInShop)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_face_shop_id();
  inline void clear_has_face_shop_id();
  inline void set_has_face_duration();
  inline void clear_has_face_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 face_shop_id_;
  ::google::protobuf::int32 face_duration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_BuyFaceInShop* default_instance_;
};
// -------------------------------------------------------------------

class C2S_RoleFaceInfo : public ::google::protobuf::Message {
 public:
  C2S_RoleFaceInfo();
  virtual ~C2S_RoleFaceInfo();

  C2S_RoleFaceInfo(const C2S_RoleFaceInfo& from);

  inline C2S_RoleFaceInfo& operator=(const C2S_RoleFaceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_RoleFaceInfo& default_instance();

  void Swap(C2S_RoleFaceInfo* other);

  // implements Message ----------------------------------------------

  C2S_RoleFaceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_RoleFaceInfo& from);
  void MergeFrom(const C2S_RoleFaceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_RoleFaceInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_RoleFaceInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_RoleFaceInfo : public ::google::protobuf::Message {
 public:
  S2C_RoleFaceInfo();
  virtual ~S2C_RoleFaceInfo();

  S2C_RoleFaceInfo(const S2C_RoleFaceInfo& from);

  inline S2C_RoleFaceInfo& operator=(const S2C_RoleFaceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_RoleFaceInfo& default_instance();

  void Swap(S2C_RoleFaceInfo* other);

  // implements Message ----------------------------------------------

  S2C_RoleFaceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_RoleFaceInfo& from);
  void MergeFrom(const S2C_RoleFaceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required .list_role_face_info role_face_info = 3;
  inline bool has_role_face_info() const;
  inline void clear_role_face_info();
  static const int kRoleFaceInfoFieldNumber = 3;
  inline const ::list_role_face_info& role_face_info() const;
  inline ::list_role_face_info* mutable_role_face_info();
  inline ::list_role_face_info* release_role_face_info();
  inline void set_allocated_role_face_info(::list_role_face_info* role_face_info);

  // @@protoc_insertion_point(class_scope:S2C_RoleFaceInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_role_face_info();
  inline void clear_has_role_face_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::list_role_face_info* role_face_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_RoleFaceInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2S_DressFace : public ::google::protobuf::Message {
 public:
  C2S_DressFace();
  virtual ~C2S_DressFace();

  C2S_DressFace(const C2S_DressFace& from);

  inline C2S_DressFace& operator=(const C2S_DressFace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_DressFace& default_instance();

  void Swap(C2S_DressFace* other);

  // implements Message ----------------------------------------------

  C2S_DressFace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_DressFace& from);
  void MergeFrom(const C2S_DressFace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 face_id = 2;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 2;
  inline ::google::protobuf::int32 face_id() const;
  inline void set_face_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_DressFace)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_face_id();
  inline void clear_has_face_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 face_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_DressFace* default_instance_;
};
// -------------------------------------------------------------------

class S2C_DressFace : public ::google::protobuf::Message {
 public:
  S2C_DressFace();
  virtual ~S2C_DressFace();

  S2C_DressFace(const S2C_DressFace& from);

  inline S2C_DressFace& operator=(const S2C_DressFace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_DressFace& default_instance();

  void Swap(S2C_DressFace* other);

  // implements Message ----------------------------------------------

  S2C_DressFace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_DressFace& from);
  void MergeFrom(const S2C_DressFace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 face_id = 3;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 3;
  inline ::google::protobuf::int32 face_id() const;
  inline void set_face_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_DressFace)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_face_id();
  inline void clear_has_face_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 face_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_DressFace* default_instance_;
};
// -------------------------------------------------------------------

class C2S_TakeOffFace : public ::google::protobuf::Message {
 public:
  C2S_TakeOffFace();
  virtual ~C2S_TakeOffFace();

  C2S_TakeOffFace(const C2S_TakeOffFace& from);

  inline C2S_TakeOffFace& operator=(const C2S_TakeOffFace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_TakeOffFace& default_instance();

  void Swap(C2S_TakeOffFace* other);

  // implements Message ----------------------------------------------

  C2S_TakeOffFace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_TakeOffFace& from);
  void MergeFrom(const C2S_TakeOffFace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 face_id = 2;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 2;
  inline ::google::protobuf::int32 face_id() const;
  inline void set_face_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_TakeOffFace)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_face_id();
  inline void clear_has_face_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 face_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_TakeOffFace* default_instance_;
};
// -------------------------------------------------------------------

class S2C_TakeOffFace : public ::google::protobuf::Message {
 public:
  S2C_TakeOffFace();
  virtual ~S2C_TakeOffFace();

  S2C_TakeOffFace(const S2C_TakeOffFace& from);

  inline S2C_TakeOffFace& operator=(const S2C_TakeOffFace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_TakeOffFace& default_instance();

  void Swap(S2C_TakeOffFace* other);

  // implements Message ----------------------------------------------

  S2C_TakeOffFace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_TakeOffFace& from);
  void MergeFrom(const S2C_TakeOffFace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 face_id = 3;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 3;
  inline ::google::protobuf::int32 face_id() const;
  inline void set_face_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_TakeOffFace)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_face_id();
  inline void clear_has_face_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 face_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_TakeOffFace* default_instance_;
};
// -------------------------------------------------------------------

class C2S_ManualUpdateFaceShop : public ::google::protobuf::Message {
 public:
  C2S_ManualUpdateFaceShop();
  virtual ~C2S_ManualUpdateFaceShop();

  C2S_ManualUpdateFaceShop(const C2S_ManualUpdateFaceShop& from);

  inline C2S_ManualUpdateFaceShop& operator=(const C2S_ManualUpdateFaceShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_ManualUpdateFaceShop& default_instance();

  void Swap(C2S_ManualUpdateFaceShop* other);

  // implements Message ----------------------------------------------

  C2S_ManualUpdateFaceShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_ManualUpdateFaceShop& from);
  void MergeFrom(const C2S_ManualUpdateFaceShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_ManualUpdateFaceShop)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_ManualUpdateFaceShop* default_instance_;
};
// -------------------------------------------------------------------

class S2C_ManualUpdateFaceShop : public ::google::protobuf::Message {
 public:
  S2C_ManualUpdateFaceShop();
  virtual ~S2C_ManualUpdateFaceShop();

  S2C_ManualUpdateFaceShop(const S2C_ManualUpdateFaceShop& from);

  inline S2C_ManualUpdateFaceShop& operator=(const S2C_ManualUpdateFaceShop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_ManualUpdateFaceShop& default_instance();

  void Swap(S2C_ManualUpdateFaceShop* other);

  // implements Message ----------------------------------------------

  S2C_ManualUpdateFaceShop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_ManualUpdateFaceShop& from);
  void MergeFrom(const S2C_ManualUpdateFaceShop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_ManualUpdateFaceShop)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_ManualUpdateFaceShop* default_instance_;
};
// -------------------------------------------------------------------

class C2S_PassRisk : public ::google::protobuf::Message {
 public:
  C2S_PassRisk();
  virtual ~C2S_PassRisk();

  C2S_PassRisk(const C2S_PassRisk& from);

  inline C2S_PassRisk& operator=(const C2S_PassRisk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_PassRisk& default_instance();

  void Swap(C2S_PassRisk* other);

  // implements Message ----------------------------------------------

  C2S_PassRisk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_PassRisk& from);
  void MergeFrom(const C2S_PassRisk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 passed = 2;
  inline bool has_passed() const;
  inline void clear_passed();
  static const int kPassedFieldNumber = 2;
  inline ::google::protobuf::int32 passed() const;
  inline void set_passed(::google::protobuf::int32 value);

  // required sint32 chap_id = 3;
  inline bool has_chap_id() const;
  inline void clear_chap_id();
  static const int kChapIdFieldNumber = 3;
  inline ::google::protobuf::int32 chap_id() const;
  inline void set_chap_id(::google::protobuf::int32 value);

  // required sint32 level_id = 4;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 4;
  inline ::google::protobuf::int32 level_id() const;
  inline void set_level_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_PassRisk)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_passed();
  inline void clear_has_passed();
  inline void set_has_chap_id();
  inline void clear_has_chap_id();
  inline void set_has_level_id();
  inline void clear_has_level_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 passed_;
  ::google::protobuf::int32 chap_id_;
  ::google::protobuf::int32 level_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_PassRisk* default_instance_;
};
// -------------------------------------------------------------------

class S2C_PassRisk : public ::google::protobuf::Message {
 public:
  S2C_PassRisk();
  virtual ~S2C_PassRisk();

  S2C_PassRisk(const S2C_PassRisk& from);

  inline S2C_PassRisk& operator=(const S2C_PassRisk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_PassRisk& default_instance();

  void Swap(S2C_PassRisk* other);

  // implements Message ----------------------------------------------

  S2C_PassRisk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_PassRisk& from);
  void MergeFrom(const S2C_PassRisk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // repeated .reward_info list_reward = 2;
  inline int list_reward_size() const;
  inline void clear_list_reward();
  static const int kListRewardFieldNumber = 2;
  inline const ::reward_info& list_reward(int index) const;
  inline ::reward_info* mutable_list_reward(int index);
  inline ::reward_info* add_list_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::reward_info >&
      list_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::reward_info >*
      mutable_list_reward();

  // @@protoc_insertion_point(class_scope:S2C_PassRisk)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::RepeatedPtrField< ::reward_info > list_reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_PassRisk* default_instance_;
};
// -------------------------------------------------------------------

class C2S_ReadyEnterRisk : public ::google::protobuf::Message {
 public:
  C2S_ReadyEnterRisk();
  virtual ~C2S_ReadyEnterRisk();

  C2S_ReadyEnterRisk(const C2S_ReadyEnterRisk& from);

  inline C2S_ReadyEnterRisk& operator=(const C2S_ReadyEnterRisk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_ReadyEnterRisk& default_instance();

  void Swap(C2S_ReadyEnterRisk* other);

  // implements Message ----------------------------------------------

  C2S_ReadyEnterRisk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_ReadyEnterRisk& from);
  void MergeFrom(const C2S_ReadyEnterRisk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 risk_id = 2;
  inline bool has_risk_id() const;
  inline void clear_risk_id();
  static const int kRiskIdFieldNumber = 2;
  inline ::google::protobuf::int32 risk_id() const;
  inline void set_risk_id(::google::protobuf::int32 value);

  // required sint32 npc_id = 3;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 3;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required sint32 scene_id = 4;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // required sint32 scene_type = 5;
  inline bool has_scene_type() const;
  inline void clear_scene_type();
  static const int kSceneTypeFieldNumber = 5;
  inline ::google::protobuf::int32 scene_type() const;
  inline void set_scene_type(::google::protobuf::int32 value);

  // required sint32 trans_info_id = 6;
  inline bool has_trans_info_id() const;
  inline void clear_trans_info_id();
  static const int kTransInfoIdFieldNumber = 6;
  inline ::google::protobuf::int32 trans_info_id() const;
  inline void set_trans_info_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_ReadyEnterRisk)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_risk_id();
  inline void clear_has_risk_id();
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_scene_type();
  inline void clear_has_scene_type();
  inline void set_has_trans_info_id();
  inline void clear_has_trans_info_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 risk_id_;
  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 scene_type_;
  ::google::protobuf::int32 trans_info_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_ReadyEnterRisk* default_instance_;
};
// -------------------------------------------------------------------

class S2C_ReadyEnterRisk : public ::google::protobuf::Message {
 public:
  S2C_ReadyEnterRisk();
  virtual ~S2C_ReadyEnterRisk();

  S2C_ReadyEnterRisk(const S2C_ReadyEnterRisk& from);

  inline S2C_ReadyEnterRisk& operator=(const S2C_ReadyEnterRisk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_ReadyEnterRisk& default_instance();

  void Swap(S2C_ReadyEnterRisk* other);

  // implements Message ----------------------------------------------

  S2C_ReadyEnterRisk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_ReadyEnterRisk& from);
  void MergeFrom(const S2C_ReadyEnterRisk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 risk_id = 3;
  inline bool has_risk_id() const;
  inline void clear_risk_id();
  static const int kRiskIdFieldNumber = 3;
  inline ::google::protobuf::int32 risk_id() const;
  inline void set_risk_id(::google::protobuf::int32 value);

  // required sint32 npc_id = 4;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 4;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required sint32 scene_id = 5;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // required sint32 trans_info_id = 6;
  inline bool has_trans_info_id() const;
  inline void clear_trans_info_id();
  static const int kTransInfoIdFieldNumber = 6;
  inline ::google::protobuf::int32 trans_info_id() const;
  inline void set_trans_info_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_ReadyEnterRisk)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_risk_id();
  inline void clear_has_risk_id();
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_trans_info_id();
  inline void clear_has_trans_info_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 risk_id_;
  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 trans_info_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_ReadyEnterRisk* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NPC_Add_RecordQueue : public ::google::protobuf::Message {
 public:
  S2C_NPC_Add_RecordQueue();
  virtual ~S2C_NPC_Add_RecordQueue();

  S2C_NPC_Add_RecordQueue(const S2C_NPC_Add_RecordQueue& from);

  inline S2C_NPC_Add_RecordQueue& operator=(const S2C_NPC_Add_RecordQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NPC_Add_RecordQueue& default_instance();

  void Swap(S2C_NPC_Add_RecordQueue* other);

  // implements Message ----------------------------------------------

  S2C_NPC_Add_RecordQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NPC_Add_RecordQueue& from);
  void MergeFrom(const S2C_NPC_Add_RecordQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 npc_id = 1;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 suit_id = 3;
  inline bool has_suit_id() const;
  inline void clear_suit_id();
  static const int kSuitIdFieldNumber = 3;
  inline ::google::protobuf::int32 suit_id() const;
  inline void set_suit_id(::google::protobuf::int32 value);

  // required sint32 face_id = 4;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 4;
  inline ::google::protobuf::int32 face_id() const;
  inline void set_face_id(::google::protobuf::int32 value);

  // required sint32 weapon_id = 5;
  inline bool has_weapon_id() const;
  inline void clear_weapon_id();
  static const int kWeaponIdFieldNumber = 5;
  inline ::google::protobuf::int32 weapon_id() const;
  inline void set_weapon_id(::google::protobuf::int32 value);

  // required sint32 helmet_id = 6;
  inline bool has_helmet_id() const;
  inline void clear_helmet_id();
  static const int kHelmetIdFieldNumber = 6;
  inline ::google::protobuf::int32 helmet_id() const;
  inline void set_helmet_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_NPC_Add_RecordQueue)
 private:
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_suit_id();
  inline void clear_has_suit_id();
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_weapon_id();
  inline void clear_has_weapon_id();
  inline void set_has_helmet_id();
  inline void clear_has_helmet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::int32 suit_id_;
  ::google::protobuf::int32 face_id_;
  ::google::protobuf::int32 weapon_id_;
  ::google::protobuf::int32 helmet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_NPC_Add_RecordQueue* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NPC_Go_RecordQueue : public ::google::protobuf::Message {
 public:
  S2C_NPC_Go_RecordQueue();
  virtual ~S2C_NPC_Go_RecordQueue();

  S2C_NPC_Go_RecordQueue(const S2C_NPC_Go_RecordQueue& from);

  inline S2C_NPC_Go_RecordQueue& operator=(const S2C_NPC_Go_RecordQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NPC_Go_RecordQueue& default_instance();

  void Swap(S2C_NPC_Go_RecordQueue* other);

  // implements Message ----------------------------------------------

  S2C_NPC_Go_RecordQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NPC_Go_RecordQueue& from);
  void MergeFrom(const S2C_NPC_Go_RecordQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 npc_id = 1;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required int64 role_index = 2;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_NPC_Go_RecordQueue)
 private:
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 npc_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_NPC_Go_RecordQueue* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Select_Recommend_Friends : public ::google::protobuf::Message {
 public:
  C2S_Select_Recommend_Friends();
  virtual ~C2S_Select_Recommend_Friends();

  C2S_Select_Recommend_Friends(const C2S_Select_Recommend_Friends& from);

  inline C2S_Select_Recommend_Friends& operator=(const C2S_Select_Recommend_Friends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Select_Recommend_Friends& default_instance();

  void Swap(C2S_Select_Recommend_Friends* other);

  // implements Message ----------------------------------------------

  C2S_Select_Recommend_Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Select_Recommend_Friends& from);
  void MergeFrom(const C2S_Select_Recommend_Friends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Select_Recommend_Friends)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Select_Recommend_Friends* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Select_Recommend_Friends : public ::google::protobuf::Message {
 public:
  S2C_Select_Recommend_Friends();
  virtual ~S2C_Select_Recommend_Friends();

  S2C_Select_Recommend_Friends(const S2C_Select_Recommend_Friends& from);

  inline S2C_Select_Recommend_Friends& operator=(const S2C_Select_Recommend_Friends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Select_Recommend_Friends& default_instance();

  void Swap(S2C_Select_Recommend_Friends* other);

  // implements Message ----------------------------------------------

  S2C_Select_Recommend_Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Select_Recommend_Friends& from);
  void MergeFrom(const S2C_Select_Recommend_Friends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .game_friend list_friend_infos = 1;
  inline int list_friend_infos_size() const;
  inline void clear_list_friend_infos();
  static const int kListFriendInfosFieldNumber = 1;
  inline const ::game_friend& list_friend_infos(int index) const;
  inline ::game_friend* mutable_list_friend_infos(int index);
  inline ::game_friend* add_list_friend_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::game_friend >&
      list_friend_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_friend >*
      mutable_list_friend_infos();

  // @@protoc_insertion_point(class_scope:S2C_Select_Recommend_Friends)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_friend > list_friend_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Select_Recommend_Friends* default_instance_;
};
// -------------------------------------------------------------------

class C2S_FindFriend : public ::google::protobuf::Message {
 public:
  C2S_FindFriend();
  virtual ~C2S_FindFriend();

  C2S_FindFriend(const C2S_FindFriend& from);

  inline C2S_FindFriend& operator=(const C2S_FindFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_FindFriend& default_instance();

  void Swap(C2S_FindFriend* other);

  // implements Message ----------------------------------------------

  C2S_FindFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_FindFriend& from);
  void MergeFrom(const C2S_FindFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:C2S_FindFriend)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* nick_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_FindFriend* default_instance_;
};
// -------------------------------------------------------------------

class S2C_FindFriend : public ::google::protobuf::Message {
 public:
  S2C_FindFriend();
  virtual ~S2C_FindFriend();

  S2C_FindFriend(const S2C_FindFriend& from);

  inline S2C_FindFriend& operator=(const S2C_FindFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_FindFriend& default_instance();

  void Swap(S2C_FindFriend* other);

  // implements Message ----------------------------------------------

  S2C_FindFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_FindFriend& from);
  void MergeFrom(const S2C_FindFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // optional .game_friend friend_info = 2;
  inline bool has_friend_info() const;
  inline void clear_friend_info();
  static const int kFriendInfoFieldNumber = 2;
  inline const ::game_friend& friend_info() const;
  inline ::game_friend* mutable_friend_info();
  inline ::game_friend* release_friend_info();
  inline void set_allocated_friend_info(::game_friend* friend_info);

  // @@protoc_insertion_point(class_scope:S2C_FindFriend)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_friend_info();
  inline void clear_has_friend_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ret_code_;
  ::game_friend* friend_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_FindFriend* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Add_Friend : public ::google::protobuf::Message {
 public:
  C2S_Add_Friend();
  virtual ~C2S_Add_Friend();

  C2S_Add_Friend(const C2S_Add_Friend& from);

  inline C2S_Add_Friend& operator=(const C2S_Add_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Add_Friend& default_instance();

  void Swap(C2S_Add_Friend* other);

  // implements Message ----------------------------------------------

  C2S_Add_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Add_Friend& from);
  void MergeFrom(const C2S_Add_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Add_Friend)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Add_Friend* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Add_Friend : public ::google::protobuf::Message {
 public:
  S2C_Add_Friend();
  virtual ~S2C_Add_Friend();

  S2C_Add_Friend(const S2C_Add_Friend& from);

  inline S2C_Add_Friend& operator=(const S2C_Add_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Add_Friend& default_instance();

  void Swap(S2C_Add_Friend* other);

  // implements Message ----------------------------------------------

  S2C_Add_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Add_Friend& from);
  void MergeFrom(const S2C_Add_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 tar_role_index = 1;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // optional .game_friend tar_friend_info = 3;
  inline bool has_tar_friend_info() const;
  inline void clear_tar_friend_info();
  static const int kTarFriendInfoFieldNumber = 3;
  inline const ::game_friend& tar_friend_info() const;
  inline ::game_friend* mutable_tar_friend_info();
  inline ::game_friend* release_tar_friend_info();
  inline void set_allocated_tar_friend_info(::game_friend* tar_friend_info);

  // @@protoc_insertion_point(class_scope:S2C_Add_Friend)
 private:
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_tar_friend_info();
  inline void clear_has_tar_friend_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tar_role_index_;
  ::std::string* ret_code_;
  ::game_friend* tar_friend_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Add_Friend* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Remove_Friend : public ::google::protobuf::Message {
 public:
  C2S_Remove_Friend();
  virtual ~C2S_Remove_Friend();

  C2S_Remove_Friend(const C2S_Remove_Friend& from);

  inline C2S_Remove_Friend& operator=(const C2S_Remove_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Remove_Friend& default_instance();

  void Swap(C2S_Remove_Friend* other);

  // implements Message ----------------------------------------------

  C2S_Remove_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Remove_Friend& from);
  void MergeFrom(const C2S_Remove_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Remove_Friend)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Remove_Friend* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Remove_Friend : public ::google::protobuf::Message {
 public:
  S2C_Remove_Friend();
  virtual ~S2C_Remove_Friend();

  S2C_Remove_Friend(const S2C_Remove_Friend& from);

  inline S2C_Remove_Friend& operator=(const S2C_Remove_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Remove_Friend& default_instance();

  void Swap(S2C_Remove_Friend* other);

  // implements Message ----------------------------------------------

  S2C_Remove_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Remove_Friend& from);
  void MergeFrom(const S2C_Remove_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 tar_role_index = 1;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Remove_Friend)
 private:
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tar_role_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Remove_Friend* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Request_Add_Friend : public ::google::protobuf::Message {
 public:
  S2C_Request_Add_Friend();
  virtual ~S2C_Request_Add_Friend();

  S2C_Request_Add_Friend(const S2C_Request_Add_Friend& from);

  inline S2C_Request_Add_Friend& operator=(const S2C_Request_Add_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Request_Add_Friend& default_instance();

  void Swap(S2C_Request_Add_Friend* other);

  // implements Message ----------------------------------------------

  S2C_Request_Add_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Request_Add_Friend& from);
  void MergeFrom(const S2C_Request_Add_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required .game_friend src_friend_info = 2;
  inline bool has_src_friend_info() const;
  inline void clear_src_friend_info();
  static const int kSrcFriendInfoFieldNumber = 2;
  inline const ::game_friend& src_friend_info() const;
  inline ::game_friend* mutable_src_friend_info();
  inline ::game_friend* release_src_friend_info();
  inline void set_allocated_src_friend_info(::game_friend* src_friend_info);

  // @@protoc_insertion_point(class_scope:S2C_Request_Add_Friend)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_src_friend_info();
  inline void clear_has_src_friend_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::game_friend* src_friend_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Request_Add_Friend* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Request_Add_Friend : public ::google::protobuf::Message {
 public:
  C2S_Request_Add_Friend();
  virtual ~C2S_Request_Add_Friend();

  C2S_Request_Add_Friend(const C2S_Request_Add_Friend& from);

  inline C2S_Request_Add_Friend& operator=(const C2S_Request_Add_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Request_Add_Friend& default_instance();

  void Swap(C2S_Request_Add_Friend* other);

  // implements Message ----------------------------------------------

  C2S_Request_Add_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Request_Add_Friend& from);
  void MergeFrom(const C2S_Request_Add_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 src_role_index = 2;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required bool is_refuse = 3;
  inline bool has_is_refuse() const;
  inline void clear_is_refuse();
  static const int kIsRefuseFieldNumber = 3;
  inline bool is_refuse() const;
  inline void set_is_refuse(bool value);

  // @@protoc_insertion_point(class_scope:C2S_Request_Add_Friend)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_is_refuse();
  inline void clear_has_is_refuse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 src_role_index_;
  bool is_refuse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Request_Add_Friend* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Friend_Online : public ::google::protobuf::Message {
 public:
  S2C_Friend_Online();
  virtual ~S2C_Friend_Online();

  S2C_Friend_Online(const S2C_Friend_Online& from);

  inline S2C_Friend_Online& operator=(const S2C_Friend_Online& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Friend_Online& default_instance();

  void Swap(S2C_Friend_Online* other);

  // implements Message ----------------------------------------------

  S2C_Friend_Online* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Friend_Online& from);
  void MergeFrom(const S2C_Friend_Online& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 friend_role_index = 1;
  inline bool has_friend_role_index() const;
  inline void clear_friend_role_index();
  static const int kFriendRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 friend_role_index() const;
  inline void set_friend_role_index(::google::protobuf::int64 value);

  // required .game_friend src_friend_info = 2;
  inline bool has_src_friend_info() const;
  inline void clear_src_friend_info();
  static const int kSrcFriendInfoFieldNumber = 2;
  inline const ::game_friend& src_friend_info() const;
  inline ::game_friend* mutable_src_friend_info();
  inline ::game_friend* release_src_friend_info();
  inline void set_allocated_src_friend_info(::game_friend* src_friend_info);

  // @@protoc_insertion_point(class_scope:S2C_Friend_Online)
 private:
  inline void set_has_friend_role_index();
  inline void clear_has_friend_role_index();
  inline void set_has_src_friend_info();
  inline void clear_has_src_friend_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 friend_role_index_;
  ::game_friend* src_friend_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Friend_Online* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Friend_Offline : public ::google::protobuf::Message {
 public:
  S2C_Friend_Offline();
  virtual ~S2C_Friend_Offline();

  S2C_Friend_Offline(const S2C_Friend_Offline& from);

  inline S2C_Friend_Offline& operator=(const S2C_Friend_Offline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Friend_Offline& default_instance();

  void Swap(S2C_Friend_Offline* other);

  // implements Message ----------------------------------------------

  S2C_Friend_Offline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Friend_Offline& from);
  void MergeFrom(const S2C_Friend_Offline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 friend_role_index = 1;
  inline bool has_friend_role_index() const;
  inline void clear_friend_role_index();
  static const int kFriendRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 friend_role_index() const;
  inline void set_friend_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Friend_Offline)
 private:
  inline void set_has_friend_role_index();
  inline void clear_has_friend_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 friend_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Friend_Offline* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Skill_Study : public ::google::protobuf::Message {
 public:
  C2S_Skill_Study();
  virtual ~C2S_Skill_Study();

  C2S_Skill_Study(const C2S_Skill_Study& from);

  inline C2S_Skill_Study& operator=(const C2S_Skill_Study& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Skill_Study& default_instance();

  void Swap(C2S_Skill_Study* other);

  // implements Message ----------------------------------------------

  C2S_Skill_Study* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Skill_Study& from);
  void MergeFrom(const C2S_Skill_Study& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Skill_Study)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Skill_Study* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Skill_Study : public ::google::protobuf::Message {
 public:
  S2C_Skill_Study();
  virtual ~S2C_Skill_Study();

  S2C_Skill_Study(const S2C_Skill_Study& from);

  inline S2C_Skill_Study& operator=(const S2C_Skill_Study& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Skill_Study& default_instance();

  void Swap(S2C_Skill_Study* other);

  // implements Message ----------------------------------------------

  S2C_Skill_Study* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Skill_Study& from);
  void MergeFrom(const S2C_Skill_Study& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Skill_Study)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Skill_Study* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Skill_LevelUp : public ::google::protobuf::Message {
 public:
  C2S_Skill_LevelUp();
  virtual ~C2S_Skill_LevelUp();

  C2S_Skill_LevelUp(const C2S_Skill_LevelUp& from);

  inline C2S_Skill_LevelUp& operator=(const C2S_Skill_LevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Skill_LevelUp& default_instance();

  void Swap(C2S_Skill_LevelUp* other);

  // implements Message ----------------------------------------------

  C2S_Skill_LevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Skill_LevelUp& from);
  void MergeFrom(const C2S_Skill_LevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Skill_LevelUp)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Skill_LevelUp* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Skill_LevelUp : public ::google::protobuf::Message {
 public:
  S2C_Skill_LevelUp();
  virtual ~S2C_Skill_LevelUp();

  S2C_Skill_LevelUp(const S2C_Skill_LevelUp& from);

  inline S2C_Skill_LevelUp& operator=(const S2C_Skill_LevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Skill_LevelUp& default_instance();

  void Swap(S2C_Skill_LevelUp* other);

  // implements Message ----------------------------------------------

  S2C_Skill_LevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Skill_LevelUp& from);
  void MergeFrom(const S2C_Skill_LevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Skill_LevelUp)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Skill_LevelUp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Skill_DressTalent : public ::google::protobuf::Message {
 public:
  C2S_Skill_DressTalent();
  virtual ~C2S_Skill_DressTalent();

  C2S_Skill_DressTalent(const C2S_Skill_DressTalent& from);

  inline C2S_Skill_DressTalent& operator=(const C2S_Skill_DressTalent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Skill_DressTalent& default_instance();

  void Swap(C2S_Skill_DressTalent* other);

  // implements Message ----------------------------------------------

  C2S_Skill_DressTalent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Skill_DressTalent& from);
  void MergeFrom(const C2S_Skill_DressTalent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Skill_DressTalent)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Skill_DressTalent* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Skill_DressTalent : public ::google::protobuf::Message {
 public:
  S2C_Skill_DressTalent();
  virtual ~S2C_Skill_DressTalent();

  S2C_Skill_DressTalent(const S2C_Skill_DressTalent& from);

  inline S2C_Skill_DressTalent& operator=(const S2C_Skill_DressTalent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Skill_DressTalent& default_instance();

  void Swap(S2C_Skill_DressTalent* other);

  // implements Message ----------------------------------------------

  S2C_Skill_DressTalent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Skill_DressTalent& from);
  void MergeFrom(const S2C_Skill_DressTalent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Skill_DressTalent)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Skill_DressTalent* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Skill_TakeOffTalent : public ::google::protobuf::Message {
 public:
  C2S_Skill_TakeOffTalent();
  virtual ~C2S_Skill_TakeOffTalent();

  C2S_Skill_TakeOffTalent(const C2S_Skill_TakeOffTalent& from);

  inline C2S_Skill_TakeOffTalent& operator=(const C2S_Skill_TakeOffTalent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Skill_TakeOffTalent& default_instance();

  void Swap(C2S_Skill_TakeOffTalent* other);

  // implements Message ----------------------------------------------

  C2S_Skill_TakeOffTalent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Skill_TakeOffTalent& from);
  void MergeFrom(const C2S_Skill_TakeOffTalent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Skill_TakeOffTalent)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Skill_TakeOffTalent* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Skill_TakeOffTalent : public ::google::protobuf::Message {
 public:
  S2C_Skill_TakeOffTalent();
  virtual ~S2C_Skill_TakeOffTalent();

  S2C_Skill_TakeOffTalent(const S2C_Skill_TakeOffTalent& from);

  inline S2C_Skill_TakeOffTalent& operator=(const S2C_Skill_TakeOffTalent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Skill_TakeOffTalent& default_instance();

  void Swap(S2C_Skill_TakeOffTalent* other);

  // implements Message ----------------------------------------------

  S2C_Skill_TakeOffTalent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Skill_TakeOffTalent& from);
  void MergeFrom(const S2C_Skill_TakeOffTalent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Skill_TakeOffTalent)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Skill_TakeOffTalent* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Skill_DressBook : public ::google::protobuf::Message {
 public:
  C2S_Skill_DressBook();
  virtual ~C2S_Skill_DressBook();

  C2S_Skill_DressBook(const C2S_Skill_DressBook& from);

  inline C2S_Skill_DressBook& operator=(const C2S_Skill_DressBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Skill_DressBook& default_instance();

  void Swap(C2S_Skill_DressBook* other);

  // implements Message ----------------------------------------------

  C2S_Skill_DressBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Skill_DressBook& from);
  void MergeFrom(const C2S_Skill_DressBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Skill_DressBook)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Skill_DressBook* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Skill_DressBook : public ::google::protobuf::Message {
 public:
  S2C_Skill_DressBook();
  virtual ~S2C_Skill_DressBook();

  S2C_Skill_DressBook(const S2C_Skill_DressBook& from);

  inline S2C_Skill_DressBook& operator=(const S2C_Skill_DressBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Skill_DressBook& default_instance();

  void Swap(S2C_Skill_DressBook* other);

  // implements Message ----------------------------------------------

  S2C_Skill_DressBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Skill_DressBook& from);
  void MergeFrom(const S2C_Skill_DressBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Skill_DressBook)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Skill_DressBook* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Skill_TakeOffBook : public ::google::protobuf::Message {
 public:
  C2S_Skill_TakeOffBook();
  virtual ~C2S_Skill_TakeOffBook();

  C2S_Skill_TakeOffBook(const C2S_Skill_TakeOffBook& from);

  inline C2S_Skill_TakeOffBook& operator=(const C2S_Skill_TakeOffBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Skill_TakeOffBook& default_instance();

  void Swap(C2S_Skill_TakeOffBook* other);

  // implements Message ----------------------------------------------

  C2S_Skill_TakeOffBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Skill_TakeOffBook& from);
  void MergeFrom(const C2S_Skill_TakeOffBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Skill_TakeOffBook)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Skill_TakeOffBook* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Skill_TakeOffBook : public ::google::protobuf::Message {
 public:
  S2C_Skill_TakeOffBook();
  virtual ~S2C_Skill_TakeOffBook();

  S2C_Skill_TakeOffBook(const S2C_Skill_TakeOffBook& from);

  inline S2C_Skill_TakeOffBook& operator=(const S2C_Skill_TakeOffBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Skill_TakeOffBook& default_instance();

  void Swap(S2C_Skill_TakeOffBook* other);

  // implements Message ----------------------------------------------

  S2C_Skill_TakeOffBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Skill_TakeOffBook& from);
  void MergeFrom(const S2C_Skill_TakeOffBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 skill_id = 2;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Skill_TakeOffBook)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::google::protobuf::int32 skill_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Skill_TakeOffBook* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_ChangeAttrPoint : public ::google::protobuf::Message {
 public:
  C2S_Ask_ChangeAttrPoint();
  virtual ~C2S_Ask_ChangeAttrPoint();

  C2S_Ask_ChangeAttrPoint(const C2S_Ask_ChangeAttrPoint& from);

  inline C2S_Ask_ChangeAttrPoint& operator=(const C2S_Ask_ChangeAttrPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_ChangeAttrPoint& default_instance();

  void Swap(C2S_Ask_ChangeAttrPoint* other);

  // implements Message ----------------------------------------------

  C2S_Ask_ChangeAttrPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_ChangeAttrPoint& from);
  void MergeFrom(const C2S_Ask_ChangeAttrPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int32 hp_point = 2;
  inline bool has_hp_point() const;
  inline void clear_hp_point();
  static const int kHpPointFieldNumber = 2;
  inline ::google::protobuf::int32 hp_point() const;
  inline void set_hp_point(::google::protobuf::int32 value);

  // required int32 mp_point = 3;
  inline bool has_mp_point() const;
  inline void clear_mp_point();
  static const int kMpPointFieldNumber = 3;
  inline ::google::protobuf::int32 mp_point() const;
  inline void set_mp_point(::google::protobuf::int32 value);

  // required int32 ap_point = 4;
  inline bool has_ap_point() const;
  inline void clear_ap_point();
  static const int kApPointFieldNumber = 4;
  inline ::google::protobuf::int32 ap_point() const;
  inline void set_ap_point(::google::protobuf::int32 value);

  // required int32 sp_point = 5;
  inline bool has_sp_point() const;
  inline void clear_sp_point();
  static const int kSpPointFieldNumber = 5;
  inline ::google::protobuf::int32 sp_point() const;
  inline void set_sp_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_ChangeAttrPoint)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_hp_point();
  inline void clear_has_hp_point();
  inline void set_has_mp_point();
  inline void clear_has_mp_point();
  inline void set_has_ap_point();
  inline void clear_has_ap_point();
  inline void set_has_sp_point();
  inline void clear_has_sp_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 hp_point_;
  ::google::protobuf::int32 mp_point_;
  ::google::protobuf::int32 ap_point_;
  ::google::protobuf::int32 sp_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_ChangeAttrPoint* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_SummonpetChangeAttrPoint : public ::google::protobuf::Message {
 public:
  C2S_Ask_SummonpetChangeAttrPoint();
  virtual ~C2S_Ask_SummonpetChangeAttrPoint();

  C2S_Ask_SummonpetChangeAttrPoint(const C2S_Ask_SummonpetChangeAttrPoint& from);

  inline C2S_Ask_SummonpetChangeAttrPoint& operator=(const C2S_Ask_SummonpetChangeAttrPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_SummonpetChangeAttrPoint& default_instance();

  void Swap(C2S_Ask_SummonpetChangeAttrPoint* other);

  // implements Message ----------------------------------------------

  C2S_Ask_SummonpetChangeAttrPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_SummonpetChangeAttrPoint& from);
  void MergeFrom(const C2S_Ask_SummonpetChangeAttrPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 summonpet_role_index = 2;
  inline bool has_summonpet_role_index() const;
  inline void clear_summonpet_role_index();
  static const int kSummonpetRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 summonpet_role_index() const;
  inline void set_summonpet_role_index(::google::protobuf::int64 value);

  // required int32 hp_point = 3;
  inline bool has_hp_point() const;
  inline void clear_hp_point();
  static const int kHpPointFieldNumber = 3;
  inline ::google::protobuf::int32 hp_point() const;
  inline void set_hp_point(::google::protobuf::int32 value);

  // required int32 mp_point = 4;
  inline bool has_mp_point() const;
  inline void clear_mp_point();
  static const int kMpPointFieldNumber = 4;
  inline ::google::protobuf::int32 mp_point() const;
  inline void set_mp_point(::google::protobuf::int32 value);

  // required int32 ap_point = 5;
  inline bool has_ap_point() const;
  inline void clear_ap_point();
  static const int kApPointFieldNumber = 5;
  inline ::google::protobuf::int32 ap_point() const;
  inline void set_ap_point(::google::protobuf::int32 value);

  // required int32 sp_point = 6;
  inline bool has_sp_point() const;
  inline void clear_sp_point();
  static const int kSpPointFieldNumber = 6;
  inline ::google::protobuf::int32 sp_point() const;
  inline void set_sp_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_SummonpetChangeAttrPoint)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_summonpet_role_index();
  inline void clear_has_summonpet_role_index();
  inline void set_has_hp_point();
  inline void clear_has_hp_point();
  inline void set_has_mp_point();
  inline void clear_has_mp_point();
  inline void set_has_ap_point();
  inline void clear_has_ap_point();
  inline void set_has_sp_point();
  inline void clear_has_sp_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 summonpet_role_index_;
  ::google::protobuf::int32 hp_point_;
  ::google::protobuf::int32 mp_point_;
  ::google::protobuf::int32 ap_point_;
  ::google::protobuf::int32 sp_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_SummonpetChangeAttrPoint* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_CreateTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_CreateTeam();
  virtual ~C2S_Ask_CreateTeam();

  C2S_Ask_CreateTeam(const C2S_Ask_CreateTeam& from);

  inline C2S_Ask_CreateTeam& operator=(const C2S_Ask_CreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_CreateTeam& default_instance();

  void Swap(C2S_Ask_CreateTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_CreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_CreateTeam& from);
  void MergeFrom(const C2S_Ask_CreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_CreateTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_CreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_CreateTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_CreateTeam();
  virtual ~S2C_Ret_CreateTeam();

  S2C_Ret_CreateTeam(const S2C_Ret_CreateTeam& from);

  inline S2C_Ret_CreateTeam& operator=(const S2C_Ret_CreateTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_CreateTeam& default_instance();

  void Swap(S2C_Ret_CreateTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_CreateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_CreateTeam& from);
  void MergeFrom(const S2C_Ret_CreateTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Ret_CreateTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_CreateTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_DestroyTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_DestroyTeam();
  virtual ~C2S_Ask_DestroyTeam();

  C2S_Ask_DestroyTeam(const C2S_Ask_DestroyTeam& from);

  inline C2S_Ask_DestroyTeam& operator=(const C2S_Ask_DestroyTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_DestroyTeam& default_instance();

  void Swap(C2S_Ask_DestroyTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_DestroyTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_DestroyTeam& from);
  void MergeFrom(const C2S_Ask_DestroyTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_DestroyTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_DestroyTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_DestroyTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_DestroyTeam();
  virtual ~S2C_Ret_DestroyTeam();

  S2C_Ret_DestroyTeam(const S2C_Ret_DestroyTeam& from);

  inline S2C_Ret_DestroyTeam& operator=(const S2C_Ret_DestroyTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_DestroyTeam& default_instance();

  void Swap(S2C_Ret_DestroyTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_DestroyTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_DestroyTeam& from);
  void MergeFrom(const S2C_Ret_DestroyTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Ret_DestroyTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_DestroyTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_InviteEnterTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_InviteEnterTeam();
  virtual ~C2S_Ask_InviteEnterTeam();

  C2S_Ask_InviteEnterTeam(const C2S_Ask_InviteEnterTeam& from);

  inline C2S_Ask_InviteEnterTeam& operator=(const C2S_Ask_InviteEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_InviteEnterTeam& default_instance();

  void Swap(C2S_Ask_InviteEnterTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_InviteEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_InviteEnterTeam& from);
  void MergeFrom(const C2S_Ask_InviteEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required int64 team_index = 3;
  inline bool has_team_index() const;
  inline void clear_team_index();
  static const int kTeamIndexFieldNumber = 3;
  inline ::google::protobuf::int64 team_index() const;
  inline void set_team_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_InviteEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_team_index();
  inline void clear_has_team_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_role_index_;
  ::google::protobuf::int64 team_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_InviteEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_InviteEnterTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_InviteEnterTeam();
  virtual ~S2C_Ret_InviteEnterTeam();

  S2C_Ret_InviteEnterTeam(const S2C_Ret_InviteEnterTeam& from);

  inline S2C_Ret_InviteEnterTeam& operator=(const S2C_Ret_InviteEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_InviteEnterTeam& default_instance();

  void Swap(S2C_Ret_InviteEnterTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_InviteEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_InviteEnterTeam& from);
  void MergeFrom(const S2C_Ret_InviteEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // required int64 team_index = 3;
  inline bool has_team_index() const;
  inline void clear_team_index();
  static const int kTeamIndexFieldNumber = 3;
  inline ::google::protobuf::int64 team_index() const;
  inline void set_team_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_Ret_InviteEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_team_index();
  inline void clear_has_team_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;
  ::google::protobuf::int64 team_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_InviteEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_ApplyEnterTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_ApplyEnterTeam();
  virtual ~C2S_Ask_ApplyEnterTeam();

  C2S_Ask_ApplyEnterTeam(const C2S_Ask_ApplyEnterTeam& from);

  inline C2S_Ask_ApplyEnterTeam& operator=(const C2S_Ask_ApplyEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_ApplyEnterTeam& default_instance();

  void Swap(C2S_Ask_ApplyEnterTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_ApplyEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_ApplyEnterTeam& from);
  void MergeFrom(const C2S_Ask_ApplyEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 team_index = 2;
  inline bool has_team_index() const;
  inline void clear_team_index();
  static const int kTeamIndexFieldNumber = 2;
  inline ::google::protobuf::int64 team_index() const;
  inline void set_team_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_ApplyEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_team_index();
  inline void clear_has_team_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 team_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_ApplyEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_ApplyEnterTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_ApplyEnterTeam();
  virtual ~S2C_Ret_ApplyEnterTeam();

  S2C_Ret_ApplyEnterTeam(const S2C_Ret_ApplyEnterTeam& from);

  inline S2C_Ret_ApplyEnterTeam& operator=(const S2C_Ret_ApplyEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_ApplyEnterTeam& default_instance();

  void Swap(S2C_Ret_ApplyEnterTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_ApplyEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_ApplyEnterTeam& from);
  void MergeFrom(const S2C_Ret_ApplyEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Ret_ApplyEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_ApplyEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_ApplyLeaveTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_ApplyLeaveTeam();
  virtual ~C2S_Ask_ApplyLeaveTeam();

  C2S_Ask_ApplyLeaveTeam(const C2S_Ask_ApplyLeaveTeam& from);

  inline C2S_Ask_ApplyLeaveTeam& operator=(const C2S_Ask_ApplyLeaveTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_ApplyLeaveTeam& default_instance();

  void Swap(C2S_Ask_ApplyLeaveTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_ApplyLeaveTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_ApplyLeaveTeam& from);
  void MergeFrom(const C2S_Ask_ApplyLeaveTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_ApplyLeaveTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_ApplyLeaveTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_ApplyLeaveTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_ApplyLeaveTeam();
  virtual ~S2C_Ret_ApplyLeaveTeam();

  S2C_Ret_ApplyLeaveTeam(const S2C_Ret_ApplyLeaveTeam& from);

  inline S2C_Ret_ApplyLeaveTeam& operator=(const S2C_Ret_ApplyLeaveTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_ApplyLeaveTeam& default_instance();

  void Swap(S2C_Ret_ApplyLeaveTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_ApplyLeaveTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_ApplyLeaveTeam& from);
  void MergeFrom(const S2C_Ret_ApplyLeaveTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Ret_ApplyLeaveTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_ApplyLeaveTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_AgreeEnterTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_AgreeEnterTeam();
  virtual ~C2S_Ask_AgreeEnterTeam();

  C2S_Ask_AgreeEnterTeam(const C2S_Ask_AgreeEnterTeam& from);

  inline C2S_Ask_AgreeEnterTeam& operator=(const C2S_Ask_AgreeEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_AgreeEnterTeam& default_instance();

  void Swap(C2S_Ask_AgreeEnterTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_AgreeEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_AgreeEnterTeam& from);
  void MergeFrom(const C2S_Ask_AgreeEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_index = 2;
  inline bool has_tar_index() const;
  inline void clear_tar_index();
  static const int kTarIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_index() const;
  inline void set_tar_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_AgreeEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_index();
  inline void clear_has_tar_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_AgreeEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_AgreeEnterTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_AgreeEnterTeam();
  virtual ~S2C_Ret_AgreeEnterTeam();

  S2C_Ret_AgreeEnterTeam(const S2C_Ret_AgreeEnterTeam& from);

  inline S2C_Ret_AgreeEnterTeam& operator=(const S2C_Ret_AgreeEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_AgreeEnterTeam& default_instance();

  void Swap(S2C_Ret_AgreeEnterTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_AgreeEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_AgreeEnterTeam& from);
  void MergeFrom(const S2C_Ret_AgreeEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_index = 2;
  inline bool has_tar_index() const;
  inline void clear_tar_index();
  static const int kTarIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_index() const;
  inline void set_tar_index(::google::protobuf::int64 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Ret_AgreeEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_index();
  inline void clear_has_tar_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_AgreeEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_RefuseEnterTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_RefuseEnterTeam();
  virtual ~C2S_Ask_RefuseEnterTeam();

  C2S_Ask_RefuseEnterTeam(const C2S_Ask_RefuseEnterTeam& from);

  inline C2S_Ask_RefuseEnterTeam& operator=(const C2S_Ask_RefuseEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_RefuseEnterTeam& default_instance();

  void Swap(C2S_Ask_RefuseEnterTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_RefuseEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_RefuseEnterTeam& from);
  void MergeFrom(const C2S_Ask_RefuseEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_index = 2;
  inline bool has_tar_index() const;
  inline void clear_tar_index();
  static const int kTarIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_index() const;
  inline void set_tar_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_RefuseEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_index();
  inline void clear_has_tar_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_RefuseEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_RefuseEnterTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_RefuseEnterTeam();
  virtual ~S2C_Ret_RefuseEnterTeam();

  S2C_Ret_RefuseEnterTeam(const S2C_Ret_RefuseEnterTeam& from);

  inline S2C_Ret_RefuseEnterTeam& operator=(const S2C_Ret_RefuseEnterTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_RefuseEnterTeam& default_instance();

  void Swap(S2C_Ret_RefuseEnterTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_RefuseEnterTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_RefuseEnterTeam& from);
  void MergeFrom(const S2C_Ret_RefuseEnterTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_index = 2;
  inline bool has_tar_index() const;
  inline void clear_tar_index();
  static const int kTarIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_index() const;
  inline void set_tar_index(::google::protobuf::int64 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Ret_RefuseEnterTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_index();
  inline void clear_has_tar_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_RefuseEnterTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_KickLeaveTeam : public ::google::protobuf::Message {
 public:
  C2S_Ask_KickLeaveTeam();
  virtual ~C2S_Ask_KickLeaveTeam();

  C2S_Ask_KickLeaveTeam(const C2S_Ask_KickLeaveTeam& from);

  inline C2S_Ask_KickLeaveTeam& operator=(const C2S_Ask_KickLeaveTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_KickLeaveTeam& default_instance();

  void Swap(C2S_Ask_KickLeaveTeam* other);

  // implements Message ----------------------------------------------

  C2S_Ask_KickLeaveTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_KickLeaveTeam& from);
  void MergeFrom(const C2S_Ask_KickLeaveTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_index = 2;
  inline bool has_tar_index() const;
  inline void clear_tar_index();
  static const int kTarIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_index() const;
  inline void set_tar_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_KickLeaveTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_index();
  inline void clear_has_tar_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_KickLeaveTeam* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_KickLeaveTeam : public ::google::protobuf::Message {
 public:
  S2C_Ret_KickLeaveTeam();
  virtual ~S2C_Ret_KickLeaveTeam();

  S2C_Ret_KickLeaveTeam(const S2C_Ret_KickLeaveTeam& from);

  inline S2C_Ret_KickLeaveTeam& operator=(const S2C_Ret_KickLeaveTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_KickLeaveTeam& default_instance();

  void Swap(S2C_Ret_KickLeaveTeam* other);

  // implements Message ----------------------------------------------

  S2C_Ret_KickLeaveTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_KickLeaveTeam& from);
  void MergeFrom(const S2C_Ret_KickLeaveTeam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required int64 tar_index = 2;
  inline bool has_tar_index() const;
  inline void clear_tar_index();
  static const int kTarIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_index() const;
  inline void set_tar_index(::google::protobuf::int64 value);

  // required bytes ret_code = 3;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  inline const ::std::string& ret_code() const;
  inline void set_ret_code(const ::std::string& value);
  inline void set_ret_code(const char* value);
  inline void set_ret_code(const void* value, size_t size);
  inline ::std::string* mutable_ret_code();
  inline ::std::string* release_ret_code();
  inline void set_allocated_ret_code(::std::string* ret_code);

  // @@protoc_insertion_point(class_scope:S2C_Ret_KickLeaveTeam)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_index();
  inline void clear_has_tar_index();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_index_;
  ::std::string* ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_KickLeaveTeam* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_TeamInfo : public ::google::protobuf::Message {
 public:
  C2S_Ask_TeamInfo();
  virtual ~C2S_Ask_TeamInfo();

  C2S_Ask_TeamInfo(const C2S_Ask_TeamInfo& from);

  inline C2S_Ask_TeamInfo& operator=(const C2S_Ask_TeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_TeamInfo& default_instance();

  void Swap(C2S_Ask_TeamInfo* other);

  // implements Message ----------------------------------------------

  C2S_Ask_TeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_TeamInfo& from);
  void MergeFrom(const C2S_Ask_TeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_Ask_TeamInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_TeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Ret_TeamInfo : public ::google::protobuf::Message {
 public:
  S2C_Ret_TeamInfo();
  virtual ~S2C_Ret_TeamInfo();

  S2C_Ret_TeamInfo(const S2C_Ret_TeamInfo& from);

  inline S2C_Ret_TeamInfo& operator=(const S2C_Ret_TeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Ret_TeamInfo& default_instance();

  void Swap(S2C_Ret_TeamInfo* other);

  // implements Message ----------------------------------------------

  S2C_Ret_TeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Ret_TeamInfo& from);
  void MergeFrom(const S2C_Ret_TeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .universal_data teams = 1;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 1;
  inline const ::universal_data& teams(int index) const;
  inline ::universal_data* mutable_teams(int index);
  inline ::universal_data* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
      mutable_teams();

  // repeated int64 destroy_teams = 2;
  inline int destroy_teams_size() const;
  inline void clear_destroy_teams();
  static const int kDestroyTeamsFieldNumber = 2;
  inline ::google::protobuf::int64 destroy_teams(int index) const;
  inline void set_destroy_teams(int index, ::google::protobuf::int64 value);
  inline void add_destroy_teams(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      destroy_teams() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_destroy_teams();

  // @@protoc_insertion_point(class_scope:S2C_Ret_TeamInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::universal_data > teams_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > destroy_teams_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_NetPacket_2eproto();
  friend void protobuf_AssignDesc_NetPacket_2eproto();
  friend void protobuf_ShutdownFile_NetPacket_2eproto();

  void InitAsDefaultInstance();
  static S2C_Ret_TeamInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// C2S_Ask_Login

// required bytes account = 1;
inline bool C2S_Ask_Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_Login::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& C2S_Ask_Login::account() const {
  return *account_;
}
inline void C2S_Ask_Login::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_Login::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_Login::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_Login::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* C2S_Ask_Login::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_Login::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes password = 2;
inline bool C2S_Ask_Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_Login::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& C2S_Ask_Login::password() const {
  return *password_;
}
inline void C2S_Ask_Login::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void C2S_Ask_Login::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void C2S_Ask_Login::set_password(const void* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_Login::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* C2S_Ask_Login::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_Login::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes sid = 3;
inline bool C2S_Ask_Login::has_sid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_Login::set_has_sid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_Login::clear_has_sid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_Login::clear_sid() {
  if (sid_ != &::google::protobuf::internal::kEmptyString) {
    sid_->clear();
  }
  clear_has_sid();
}
inline const ::std::string& C2S_Ask_Login::sid() const {
  return *sid_;
}
inline void C2S_Ask_Login::set_sid(const ::std::string& value) {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  sid_->assign(value);
}
inline void C2S_Ask_Login::set_sid(const char* value) {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  sid_->assign(value);
}
inline void C2S_Ask_Login::set_sid(const void* value, size_t size) {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  sid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_Login::mutable_sid() {
  set_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    sid_ = new ::std::string;
  }
  return sid_;
}
inline ::std::string* C2S_Ask_Login::release_sid() {
  clear_has_sid();
  if (sid_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = sid_;
    sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_Login::set_allocated_sid(::std::string* sid) {
  if (sid_ != &::google::protobuf::internal::kEmptyString) {
    delete sid_;
  }
  if (sid) {
    set_has_sid();
    sid_ = sid;
  } else {
    clear_has_sid();
    sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// S2C_Ret_Login

// required bytes ret_code = 1;
inline bool S2C_Ret_Login::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_Login::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_Login::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_Login::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_Login::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_Login::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_Login::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_Login::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_Login::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_Login::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_Login::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool re_login = 2;
inline bool S2C_Ret_Login::has_re_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_Login::set_has_re_login() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_Login::clear_has_re_login() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_Login::clear_re_login() {
  re_login_ = false;
  clear_has_re_login();
}
inline bool S2C_Ret_Login::re_login() const {
  return re_login_;
}
inline void S2C_Ret_Login::set_re_login(bool value) {
  set_has_re_login();
  re_login_ = value;
}

// required bytes account = 3;
inline bool S2C_Ret_Login::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_Login::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_Login::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_Ret_Login::account() const {
  return *account_;
}
inline void S2C_Ret_Login::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_Login::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_Login::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_Login::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_Ret_Login::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_Login::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_Register

// required bytes account = 1;
inline bool C2S_Ask_Register::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_Register::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_Register::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_Register::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& C2S_Ask_Register::account() const {
  return *account_;
}
inline void C2S_Ask_Register::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_Register::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_Register::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_Register::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* C2S_Ask_Register::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_Register::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes password = 2;
inline bool C2S_Ask_Register::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_Register::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_Register::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_Register::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& C2S_Ask_Register::password() const {
  return *password_;
}
inline void C2S_Ask_Register::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void C2S_Ask_Register::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void C2S_Ask_Register::set_password(const void* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_Register::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* C2S_Ask_Register::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_Register::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 new_unit_index = 3;
inline bool C2S_Ask_Register::has_new_unit_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_Register::set_has_new_unit_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_Register::clear_has_new_unit_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_Register::clear_new_unit_index() {
  new_unit_index_ = GOOGLE_LONGLONG(0);
  clear_has_new_unit_index();
}
inline ::google::protobuf::int64 C2S_Ask_Register::new_unit_index() const {
  return new_unit_index_;
}
inline void C2S_Ask_Register::set_new_unit_index(::google::protobuf::int64 value) {
  set_has_new_unit_index();
  new_unit_index_ = value;
}

// optional int64 ret_unitindex = 4;
inline bool C2S_Ask_Register::has_ret_unitindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Ask_Register::set_has_ret_unitindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Ask_Register::clear_has_ret_unitindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Ask_Register::clear_ret_unitindex() {
  ret_unitindex_ = GOOGLE_LONGLONG(0);
  clear_has_ret_unitindex();
}
inline ::google::protobuf::int64 C2S_Ask_Register::ret_unitindex() const {
  return ret_unitindex_;
}
inline void C2S_Ask_Register::set_ret_unitindex(::google::protobuf::int64 value) {
  set_has_ret_unitindex();
  ret_unitindex_ = value;
}

// optional int64 ret_intaddr = 5;
inline bool C2S_Ask_Register::has_ret_intaddr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_Ask_Register::set_has_ret_intaddr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_Ask_Register::clear_has_ret_intaddr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_Ask_Register::clear_ret_intaddr() {
  ret_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_ret_intaddr();
}
inline ::google::protobuf::int64 C2S_Ask_Register::ret_intaddr() const {
  return ret_intaddr_;
}
inline void C2S_Ask_Register::set_ret_intaddr(::google::protobuf::int64 value) {
  set_has_ret_intaddr();
  ret_intaddr_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_Register

// required bytes ret_code = 1;
inline bool S2C_Ret_Register::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_Register::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_Register::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_Register::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_Register::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_Register::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_Register::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_Register::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_Register::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_Register::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_Register::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes account = 2;
inline bool S2C_Ret_Register::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_Register::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_Register::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_Register::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_Ret_Register::account() const {
  return *account_;
}
inline void S2C_Ret_Register::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_Register::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_Register::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_Register::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_Ret_Register::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_Register::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 account_key = 3;
inline bool S2C_Ret_Register::has_account_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_Register::set_has_account_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_Register::clear_has_account_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_Register::clear_account_key() {
  account_key_ = GOOGLE_LONGLONG(0);
  clear_has_account_key();
}
inline ::google::protobuf::int64 S2C_Ret_Register::account_key() const {
  return account_key_;
}
inline void S2C_Ret_Register::set_account_key(::google::protobuf::int64 value) {
  set_has_account_key();
  account_key_ = value;
}

// -------------------------------------------------------------------

// C2S_Ask_RoleSum

// required bytes account = 1;
inline bool C2S_Ask_RoleSum::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_RoleSum::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_RoleSum::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_RoleSum::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& C2S_Ask_RoleSum::account() const {
  return *account_;
}
inline void C2S_Ask_RoleSum::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_RoleSum::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_RoleSum::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleSum::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* C2S_Ask_RoleSum::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleSum::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 ret_unitindex = 2;
inline bool C2S_Ask_RoleSum::has_ret_unitindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_RoleSum::set_has_ret_unitindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_RoleSum::clear_has_ret_unitindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_RoleSum::clear_ret_unitindex() {
  ret_unitindex_ = GOOGLE_LONGLONG(0);
  clear_has_ret_unitindex();
}
inline ::google::protobuf::int64 C2S_Ask_RoleSum::ret_unitindex() const {
  return ret_unitindex_;
}
inline void C2S_Ask_RoleSum::set_ret_unitindex(::google::protobuf::int64 value) {
  set_has_ret_unitindex();
  ret_unitindex_ = value;
}

// optional int64 ret_intaddr = 3;
inline bool C2S_Ask_RoleSum::has_ret_intaddr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_RoleSum::set_has_ret_intaddr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_RoleSum::clear_has_ret_intaddr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_RoleSum::clear_ret_intaddr() {
  ret_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_ret_intaddr();
}
inline ::google::protobuf::int64 C2S_Ask_RoleSum::ret_intaddr() const {
  return ret_intaddr_;
}
inline void C2S_Ask_RoleSum::set_ret_intaddr(::google::protobuf::int64 value) {
  set_has_ret_intaddr();
  ret_intaddr_ = value;
}

// optional int64 account_key = 4;
inline bool C2S_Ask_RoleSum::has_account_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Ask_RoleSum::set_has_account_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Ask_RoleSum::clear_has_account_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Ask_RoleSum::clear_account_key() {
  account_key_ = GOOGLE_LONGLONG(0);
  clear_has_account_key();
}
inline ::google::protobuf::int64 C2S_Ask_RoleSum::account_key() const {
  return account_key_;
}
inline void C2S_Ask_RoleSum::set_account_key(::google::protobuf::int64 value) {
  set_has_account_key();
  account_key_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_RoleSum

// required bytes account = 1;
inline bool S2C_Ret_RoleSum::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_RoleSum::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_RoleSum::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_RoleSum::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_Ret_RoleSum::account() const {
  return *account_;
}
inline void S2C_Ret_RoleSum::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_RoleSum::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_RoleSum::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_RoleSum::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_Ret_RoleSum::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_RoleSum::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int64 list_role_index = 2;
inline int S2C_Ret_RoleSum::list_role_index_size() const {
  return list_role_index_.size();
}
inline void S2C_Ret_RoleSum::clear_list_role_index() {
  list_role_index_.Clear();
}
inline ::google::protobuf::int64 S2C_Ret_RoleSum::list_role_index(int index) const {
  return list_role_index_.Get(index);
}
inline void S2C_Ret_RoleSum::set_list_role_index(int index, ::google::protobuf::int64 value) {
  list_role_index_.Set(index, value);
}
inline void S2C_Ret_RoleSum::add_list_role_index(::google::protobuf::int64 value) {
  list_role_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
S2C_Ret_RoleSum::list_role_index() const {
  return list_role_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
S2C_Ret_RoleSum::mutable_list_role_index() {
  return &list_role_index_;
}

// -------------------------------------------------------------------

// C2S_ClearRole

// required bytes account = 1;
inline bool C2S_ClearRole::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_ClearRole::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_ClearRole::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_ClearRole::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& C2S_ClearRole::account() const {
  return *account_;
}
inline void C2S_ClearRole::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_ClearRole::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_ClearRole::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_ClearRole::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* C2S_ClearRole::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_ClearRole::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 ret_unitindex = 2;
inline bool C2S_ClearRole::has_ret_unitindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_ClearRole::set_has_ret_unitindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_ClearRole::clear_has_ret_unitindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_ClearRole::clear_ret_unitindex() {
  ret_unitindex_ = GOOGLE_LONGLONG(0);
  clear_has_ret_unitindex();
}
inline ::google::protobuf::int64 C2S_ClearRole::ret_unitindex() const {
  return ret_unitindex_;
}
inline void C2S_ClearRole::set_ret_unitindex(::google::protobuf::int64 value) {
  set_has_ret_unitindex();
  ret_unitindex_ = value;
}

// optional int64 ret_intaddr = 3;
inline bool C2S_ClearRole::has_ret_intaddr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_ClearRole::set_has_ret_intaddr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_ClearRole::clear_has_ret_intaddr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_ClearRole::clear_ret_intaddr() {
  ret_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_ret_intaddr();
}
inline ::google::protobuf::int64 C2S_ClearRole::ret_intaddr() const {
  return ret_intaddr_;
}
inline void C2S_ClearRole::set_ret_intaddr(::google::protobuf::int64 value) {
  set_has_ret_intaddr();
  ret_intaddr_ = value;
}

// -------------------------------------------------------------------

// S2C_Response_ClearRole

// required bytes account = 1;
inline bool S2C_Response_ClearRole::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Response_ClearRole::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Response_ClearRole::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Response_ClearRole::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_Response_ClearRole::account() const {
  return *account_;
}
inline void S2C_Response_ClearRole::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Response_ClearRole::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Response_ClearRole::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Response_ClearRole::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_Response_ClearRole::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Response_ClearRole::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool is_ok = 2;
inline bool S2C_Response_ClearRole::has_is_ok() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Response_ClearRole::set_has_is_ok() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Response_ClearRole::clear_has_is_ok() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Response_ClearRole::clear_is_ok() {
  is_ok_ = false;
  clear_has_is_ok();
}
inline bool S2C_Response_ClearRole::is_ok() const {
  return is_ok_;
}
inline void S2C_Response_ClearRole::set_is_ok(bool value) {
  set_has_is_ok();
  is_ok_ = value;
}

// -------------------------------------------------------------------

// C2S_RandNickName

// required bytes account = 1;
inline bool C2S_RandNickName::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_RandNickName::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_RandNickName::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_RandNickName::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& C2S_RandNickName::account() const {
  return *account_;
}
inline void C2S_RandNickName::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_RandNickName::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_RandNickName::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_RandNickName::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* C2S_RandNickName::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_RandNickName::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 ret_unitindex = 2;
inline bool C2S_RandNickName::has_ret_unitindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_RandNickName::set_has_ret_unitindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_RandNickName::clear_has_ret_unitindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_RandNickName::clear_ret_unitindex() {
  ret_unitindex_ = GOOGLE_LONGLONG(0);
  clear_has_ret_unitindex();
}
inline ::google::protobuf::int64 C2S_RandNickName::ret_unitindex() const {
  return ret_unitindex_;
}
inline void C2S_RandNickName::set_ret_unitindex(::google::protobuf::int64 value) {
  set_has_ret_unitindex();
  ret_unitindex_ = value;
}

// optional int64 ret_intaddr = 3;
inline bool C2S_RandNickName::has_ret_intaddr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_RandNickName::set_has_ret_intaddr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_RandNickName::clear_has_ret_intaddr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_RandNickName::clear_ret_intaddr() {
  ret_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_ret_intaddr();
}
inline ::google::protobuf::int64 C2S_RandNickName::ret_intaddr() const {
  return ret_intaddr_;
}
inline void C2S_RandNickName::set_ret_intaddr(::google::protobuf::int64 value) {
  set_has_ret_intaddr();
  ret_intaddr_ = value;
}

// -------------------------------------------------------------------

// S2C_RandNickName

// required bytes account = 1;
inline bool S2C_RandNickName::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_RandNickName::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_RandNickName::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_RandNickName::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_RandNickName::account() const {
  return *account_;
}
inline void S2C_RandNickName::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_RandNickName::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_RandNickName::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_RandNickName::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_RandNickName::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_RandNickName::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated bytes list_nick_name = 2;
inline int S2C_RandNickName::list_nick_name_size() const {
  return list_nick_name_.size();
}
inline void S2C_RandNickName::clear_list_nick_name() {
  list_nick_name_.Clear();
}
inline const ::std::string& S2C_RandNickName::list_nick_name(int index) const {
  return list_nick_name_.Get(index);
}
inline ::std::string* S2C_RandNickName::mutable_list_nick_name(int index) {
  return list_nick_name_.Mutable(index);
}
inline void S2C_RandNickName::set_list_nick_name(int index, const ::std::string& value) {
  list_nick_name_.Mutable(index)->assign(value);
}
inline void S2C_RandNickName::set_list_nick_name(int index, const char* value) {
  list_nick_name_.Mutable(index)->assign(value);
}
inline void S2C_RandNickName::set_list_nick_name(int index, const void* value, size_t size) {
  list_nick_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_RandNickName::add_list_nick_name() {
  return list_nick_name_.Add();
}
inline void S2C_RandNickName::add_list_nick_name(const ::std::string& value) {
  list_nick_name_.Add()->assign(value);
}
inline void S2C_RandNickName::add_list_nick_name(const char* value) {
  list_nick_name_.Add()->assign(value);
}
inline void S2C_RandNickName::add_list_nick_name(const void* value, size_t size) {
  list_nick_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
S2C_RandNickName::list_nick_name() const {
  return list_nick_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
S2C_RandNickName::mutable_list_nick_name() {
  return &list_nick_name_;
}

// -------------------------------------------------------------------

// C2S_Ask_RoleCreate

// required bytes nick_name = 1;
inline bool C2S_Ask_RoleCreate::has_nick_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_nick_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_RoleCreate::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_RoleCreate::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& C2S_Ask_RoleCreate::nick_name() const {
  return *nick_name_;
}
inline void C2S_Ask_RoleCreate::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes account = 2;
inline bool C2S_Ask_RoleCreate::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_RoleCreate::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_RoleCreate::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& C2S_Ask_RoleCreate::account() const {
  return *account_;
}
inline void C2S_Ask_RoleCreate::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes device_key = 3;
inline bool C2S_Ask_RoleCreate::has_device_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_device_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_RoleCreate::clear_has_device_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_RoleCreate::clear_device_key() {
  if (device_key_ != &::google::protobuf::internal::kEmptyString) {
    device_key_->clear();
  }
  clear_has_device_key();
}
inline const ::std::string& C2S_Ask_RoleCreate::device_key() const {
  return *device_key_;
}
inline void C2S_Ask_RoleCreate::set_device_key(const ::std::string& value) {
  set_has_device_key();
  if (device_key_ == &::google::protobuf::internal::kEmptyString) {
    device_key_ = new ::std::string;
  }
  device_key_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_device_key(const char* value) {
  set_has_device_key();
  if (device_key_ == &::google::protobuf::internal::kEmptyString) {
    device_key_ = new ::std::string;
  }
  device_key_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_device_key(const void* value, size_t size) {
  set_has_device_key();
  if (device_key_ == &::google::protobuf::internal::kEmptyString) {
    device_key_ = new ::std::string;
  }
  device_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_device_key() {
  set_has_device_key();
  if (device_key_ == &::google::protobuf::internal::kEmptyString) {
    device_key_ = new ::std::string;
  }
  return device_key_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_device_key() {
  clear_has_device_key();
  if (device_key_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = device_key_;
    device_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_device_key(::std::string* device_key) {
  if (device_key_ != &::google::protobuf::internal::kEmptyString) {
    delete device_key_;
  }
  if (device_key) {
    set_has_device_key();
    device_key_ = device_key;
  } else {
    clear_has_device_key();
    device_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes device_token = 4;
inline bool C2S_Ask_RoleCreate::has_device_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_device_token() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Ask_RoleCreate::clear_has_device_token() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Ask_RoleCreate::clear_device_token() {
  if (device_token_ != &::google::protobuf::internal::kEmptyString) {
    device_token_->clear();
  }
  clear_has_device_token();
}
inline const ::std::string& C2S_Ask_RoleCreate::device_token() const {
  return *device_token_;
}
inline void C2S_Ask_RoleCreate::set_device_token(const ::std::string& value) {
  set_has_device_token();
  if (device_token_ == &::google::protobuf::internal::kEmptyString) {
    device_token_ = new ::std::string;
  }
  device_token_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_device_token(const char* value) {
  set_has_device_token();
  if (device_token_ == &::google::protobuf::internal::kEmptyString) {
    device_token_ = new ::std::string;
  }
  device_token_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_device_token(const void* value, size_t size) {
  set_has_device_token();
  if (device_token_ == &::google::protobuf::internal::kEmptyString) {
    device_token_ = new ::std::string;
  }
  device_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_device_token() {
  set_has_device_token();
  if (device_token_ == &::google::protobuf::internal::kEmptyString) {
    device_token_ = new ::std::string;
  }
  return device_token_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_device_token() {
  clear_has_device_token();
  if (device_token_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = device_token_;
    device_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_device_token(::std::string* device_token) {
  if (device_token_ != &::google::protobuf::internal::kEmptyString) {
    delete device_token_;
  }
  if (device_token) {
    set_has_device_token();
    device_token_ = device_token;
  } else {
    clear_has_device_token();
    device_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes device_type = 5;
inline bool C2S_Ask_RoleCreate::has_device_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_device_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_Ask_RoleCreate::clear_has_device_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_Ask_RoleCreate::clear_device_type() {
  if (device_type_ != &::google::protobuf::internal::kEmptyString) {
    device_type_->clear();
  }
  clear_has_device_type();
}
inline const ::std::string& C2S_Ask_RoleCreate::device_type() const {
  return *device_type_;
}
inline void C2S_Ask_RoleCreate::set_device_type(const ::std::string& value) {
  set_has_device_type();
  if (device_type_ == &::google::protobuf::internal::kEmptyString) {
    device_type_ = new ::std::string;
  }
  device_type_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_device_type(const char* value) {
  set_has_device_type();
  if (device_type_ == &::google::protobuf::internal::kEmptyString) {
    device_type_ = new ::std::string;
  }
  device_type_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_device_type(const void* value, size_t size) {
  set_has_device_type();
  if (device_type_ == &::google::protobuf::internal::kEmptyString) {
    device_type_ = new ::std::string;
  }
  device_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_device_type() {
  set_has_device_type();
  if (device_type_ == &::google::protobuf::internal::kEmptyString) {
    device_type_ = new ::std::string;
  }
  return device_type_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_device_type() {
  clear_has_device_type();
  if (device_type_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = device_type_;
    device_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_device_type(::std::string* device_type) {
  if (device_type_ != &::google::protobuf::internal::kEmptyString) {
    delete device_type_;
  }
  if (device_type) {
    set_has_device_type();
    device_type_ = device_type;
  } else {
    clear_has_device_type();
    device_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes platform_type = 6;
inline bool C2S_Ask_RoleCreate::has_platform_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_platform_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2S_Ask_RoleCreate::clear_has_platform_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2S_Ask_RoleCreate::clear_platform_type() {
  if (platform_type_ != &::google::protobuf::internal::kEmptyString) {
    platform_type_->clear();
  }
  clear_has_platform_type();
}
inline const ::std::string& C2S_Ask_RoleCreate::platform_type() const {
  return *platform_type_;
}
inline void C2S_Ask_RoleCreate::set_platform_type(const ::std::string& value) {
  set_has_platform_type();
  if (platform_type_ == &::google::protobuf::internal::kEmptyString) {
    platform_type_ = new ::std::string;
  }
  platform_type_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_platform_type(const char* value) {
  set_has_platform_type();
  if (platform_type_ == &::google::protobuf::internal::kEmptyString) {
    platform_type_ = new ::std::string;
  }
  platform_type_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_platform_type(const void* value, size_t size) {
  set_has_platform_type();
  if (platform_type_ == &::google::protobuf::internal::kEmptyString) {
    platform_type_ = new ::std::string;
  }
  platform_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_platform_type() {
  set_has_platform_type();
  if (platform_type_ == &::google::protobuf::internal::kEmptyString) {
    platform_type_ = new ::std::string;
  }
  return platform_type_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_platform_type() {
  clear_has_platform_type();
  if (platform_type_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = platform_type_;
    platform_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_platform_type(::std::string* platform_type) {
  if (platform_type_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_type_;
  }
  if (platform_type) {
    set_has_platform_type();
    platform_type_ = platform_type;
  } else {
    clear_has_platform_type();
    platform_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes role_type = 7;
inline bool C2S_Ask_RoleCreate::has_role_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_role_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void C2S_Ask_RoleCreate::clear_has_role_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void C2S_Ask_RoleCreate::clear_role_type() {
  if (role_type_ != &::google::protobuf::internal::kEmptyString) {
    role_type_->clear();
  }
  clear_has_role_type();
}
inline const ::std::string& C2S_Ask_RoleCreate::role_type() const {
  return *role_type_;
}
inline void C2S_Ask_RoleCreate::set_role_type(const ::std::string& value) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_role_type(const char* value) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_role_type(const void* value, size_t size) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_role_type() {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  return role_type_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_role_type() {
  clear_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = role_type_;
    role_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_role_type(::std::string* role_type) {
  if (role_type_ != &::google::protobuf::internal::kEmptyString) {
    delete role_type_;
  }
  if (role_type) {
    set_has_role_type();
    role_type_ = role_type;
  } else {
    clear_has_role_type();
    role_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes password = 8;
inline bool C2S_Ask_RoleCreate::has_password() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_password() {
  _has_bits_[0] |= 0x00000080u;
}
inline void C2S_Ask_RoleCreate::clear_has_password() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void C2S_Ask_RoleCreate::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& C2S_Ask_RoleCreate::password() const {
  return *password_;
}
inline void C2S_Ask_RoleCreate::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void C2S_Ask_RoleCreate::set_password(const void* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleCreate::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* C2S_Ask_RoleCreate::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleCreate::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .universal_data role_info = 9;
inline bool C2S_Ask_RoleCreate::has_role_info() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_role_info() {
  _has_bits_[0] |= 0x00000100u;
}
inline void C2S_Ask_RoleCreate::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void C2S_Ask_RoleCreate::clear_role_info() {
  if (role_info_ != nullptr) role_info_->::universal_data::Clear();
  clear_has_role_info();
}
inline const ::universal_data& C2S_Ask_RoleCreate::role_info() const {
  return role_info_ != nullptr ? *role_info_ : *default_instance_->role_info_;
}
inline ::universal_data* C2S_Ask_RoleCreate::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == nullptr) role_info_ = new ::universal_data;
  return role_info_;
}
inline ::universal_data* C2S_Ask_RoleCreate::release_role_info() {
  clear_has_role_info();
  ::universal_data* temp = role_info_;
  role_info_ = nullptr;
  return temp;
}
inline void C2S_Ask_RoleCreate::set_allocated_role_info(::universal_data* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
}

// optional int64 ret_unitindex = 10;
inline bool C2S_Ask_RoleCreate::has_ret_unitindex() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_ret_unitindex() {
  _has_bits_[0] |= 0x00000200u;
}
inline void C2S_Ask_RoleCreate::clear_has_ret_unitindex() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void C2S_Ask_RoleCreate::clear_ret_unitindex() {
  ret_unitindex_ = GOOGLE_LONGLONG(0);
  clear_has_ret_unitindex();
}
inline ::google::protobuf::int64 C2S_Ask_RoleCreate::ret_unitindex() const {
  return ret_unitindex_;
}
inline void C2S_Ask_RoleCreate::set_ret_unitindex(::google::protobuf::int64 value) {
  set_has_ret_unitindex();
  ret_unitindex_ = value;
}

// optional int64 ret_intaddr = 11;
inline bool C2S_Ask_RoleCreate::has_ret_intaddr() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void C2S_Ask_RoleCreate::set_has_ret_intaddr() {
  _has_bits_[0] |= 0x00000400u;
}
inline void C2S_Ask_RoleCreate::clear_has_ret_intaddr() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void C2S_Ask_RoleCreate::clear_ret_intaddr() {
  ret_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_ret_intaddr();
}
inline ::google::protobuf::int64 C2S_Ask_RoleCreate::ret_intaddr() const {
  return ret_intaddr_;
}
inline void C2S_Ask_RoleCreate::set_ret_intaddr(::google::protobuf::int64 value) {
  set_has_ret_intaddr();
  ret_intaddr_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_RoleCreate

// required bytes ret_code = 1;
inline bool S2C_Ret_RoleCreate::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_RoleCreate::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_RoleCreate::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_RoleCreate::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_RoleCreate::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_RoleCreate::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_RoleCreate::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_RoleCreate::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_RoleCreate::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_RoleCreate::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_RoleCreate::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes nick_name = 2;
inline bool S2C_Ret_RoleCreate::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_RoleCreate::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_RoleCreate::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_RoleCreate::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& S2C_Ret_RoleCreate::nick_name() const {
  return *nick_name_;
}
inline void S2C_Ret_RoleCreate::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void S2C_Ret_RoleCreate::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void S2C_Ret_RoleCreate::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_RoleCreate::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* S2C_Ret_RoleCreate::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_RoleCreate::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes account = 3;
inline bool S2C_Ret_RoleCreate::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_RoleCreate::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_RoleCreate::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_RoleCreate::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_Ret_RoleCreate::account() const {
  return *account_;
}
inline void S2C_Ret_RoleCreate::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_RoleCreate::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_RoleCreate::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_RoleCreate::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_Ret_RoleCreate::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_RoleCreate::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_RoleInfo

// required bytes account = 1;
inline bool C2S_Ask_RoleInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_RoleInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_RoleInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_RoleInfo::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& C2S_Ask_RoleInfo::account() const {
  return *account_;
}
inline void C2S_Ask_RoleInfo::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_RoleInfo::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void C2S_Ask_RoleInfo::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_RoleInfo::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* C2S_Ask_RoleInfo::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_RoleInfo::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool C2S_Ask_RoleInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_RoleInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_RoleInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_RoleInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_RoleInfo::role_index() const {
  return role_index_;
}
inline void C2S_Ask_RoleInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// optional int64 ret_unitindex = 3;
inline bool C2S_Ask_RoleInfo::has_ret_unitindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_RoleInfo::set_has_ret_unitindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_RoleInfo::clear_has_ret_unitindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_RoleInfo::clear_ret_unitindex() {
  ret_unitindex_ = GOOGLE_LONGLONG(0);
  clear_has_ret_unitindex();
}
inline ::google::protobuf::int64 C2S_Ask_RoleInfo::ret_unitindex() const {
  return ret_unitindex_;
}
inline void C2S_Ask_RoleInfo::set_ret_unitindex(::google::protobuf::int64 value) {
  set_has_ret_unitindex();
  ret_unitindex_ = value;
}

// optional int64 ret_intaddr = 4;
inline bool C2S_Ask_RoleInfo::has_ret_intaddr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Ask_RoleInfo::set_has_ret_intaddr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Ask_RoleInfo::clear_has_ret_intaddr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Ask_RoleInfo::clear_ret_intaddr() {
  ret_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_ret_intaddr();
}
inline ::google::protobuf::int64 C2S_Ask_RoleInfo::ret_intaddr() const {
  return ret_intaddr_;
}
inline void C2S_Ask_RoleInfo::set_ret_intaddr(::google::protobuf::int64 value) {
  set_has_ret_intaddr();
  ret_intaddr_ = value;
}

// optional bool force_apply_role_info = 5;
inline bool C2S_Ask_RoleInfo::has_force_apply_role_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_Ask_RoleInfo::set_has_force_apply_role_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_Ask_RoleInfo::clear_has_force_apply_role_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_Ask_RoleInfo::clear_force_apply_role_info() {
  force_apply_role_info_ = false;
  clear_has_force_apply_role_info();
}
inline bool C2S_Ask_RoleInfo::force_apply_role_info() const {
  return force_apply_role_info_;
}
inline void C2S_Ask_RoleInfo::set_force_apply_role_info(bool value) {
  set_has_force_apply_role_info();
  force_apply_role_info_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_RoleInfo

// required bytes account = 1;
inline bool S2C_Ret_RoleInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_RoleInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_RoleInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_RoleInfo::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_Ret_RoleInfo::account() const {
  return *account_;
}
inline void S2C_Ret_RoleInfo::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_RoleInfo::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Ret_RoleInfo::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_RoleInfo::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_Ret_RoleInfo::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_RoleInfo::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_Ret_RoleInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_RoleInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_RoleInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_RoleInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_RoleInfo::role_index() const {
  return role_index_;
}
inline void S2C_Ret_RoleInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// optional .universal_data role_info = 3;
inline bool S2C_Ret_RoleInfo::has_role_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_RoleInfo::set_has_role_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_RoleInfo::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_RoleInfo::clear_role_info() {
  if (role_info_ != nullptr) role_info_->::universal_data::Clear();
  clear_has_role_info();
}
inline const ::universal_data& S2C_Ret_RoleInfo::role_info() const {
  return role_info_ != nullptr ? *role_info_ : *default_instance_->role_info_;
}
inline ::universal_data* S2C_Ret_RoleInfo::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == nullptr) role_info_ = new ::universal_data;
  return role_info_;
}
inline ::universal_data* S2C_Ret_RoleInfo::release_role_info() {
  clear_has_role_info();
  ::universal_data* temp = role_info_;
  role_info_ = nullptr;
  return temp;
}
inline void S2C_Ret_RoleInfo::set_allocated_role_info(::universal_data* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
}

// optional int64 login_intaddr = 4;
inline bool S2C_Ret_RoleInfo::has_login_intaddr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Ret_RoleInfo::set_has_login_intaddr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Ret_RoleInfo::clear_has_login_intaddr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Ret_RoleInfo::clear_login_intaddr() {
  login_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_login_intaddr();
}
inline ::google::protobuf::int64 S2C_Ret_RoleInfo::login_intaddr() const {
  return login_intaddr_;
}
inline void S2C_Ret_RoleInfo::set_login_intaddr(::google::protobuf::int64 value) {
  set_has_login_intaddr();
  login_intaddr_ = value;
}

// optional int64 scene_intaddr = 5;
inline bool S2C_Ret_RoleInfo::has_scene_intaddr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_Ret_RoleInfo::set_has_scene_intaddr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_Ret_RoleInfo::clear_has_scene_intaddr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_Ret_RoleInfo::clear_scene_intaddr() {
  scene_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_scene_intaddr();
}
inline ::google::protobuf::int64 S2C_Ret_RoleInfo::scene_intaddr() const {
  return scene_intaddr_;
}
inline void S2C_Ret_RoleInfo::set_scene_intaddr(::google::protobuf::int64 value) {
  set_has_scene_intaddr();
  scene_intaddr_ = value;
}

// optional int64 scene_instance_id = 6;
inline bool S2C_Ret_RoleInfo::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_Ret_RoleInfo::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_Ret_RoleInfo::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_Ret_RoleInfo::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 S2C_Ret_RoleInfo::scene_instance_id() const {
  return scene_instance_id_;
}
inline void S2C_Ret_RoleInfo::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// -------------------------------------------------------------------

// C2S_Sync_RoleConfig

// required int64 role_index = 1;
inline bool C2S_Sync_RoleConfig::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Sync_RoleConfig::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Sync_RoleConfig::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Sync_RoleConfig::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Sync_RoleConfig::role_index() const {
  return role_index_;
}
inline void C2S_Sync_RoleConfig::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .universal_data role_config = 2;
inline bool C2S_Sync_RoleConfig::has_role_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Sync_RoleConfig::set_has_role_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Sync_RoleConfig::clear_has_role_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Sync_RoleConfig::clear_role_config() {
  if (role_config_ != nullptr) role_config_->::universal_data::Clear();
  clear_has_role_config();
}
inline const ::universal_data& C2S_Sync_RoleConfig::role_config() const {
  return role_config_ != nullptr ? *role_config_ : *default_instance_->role_config_;
}
inline ::universal_data* C2S_Sync_RoleConfig::mutable_role_config() {
  set_has_role_config();
  if (role_config_ == nullptr) role_config_ = new ::universal_data;
  return role_config_;
}
inline ::universal_data* C2S_Sync_RoleConfig::release_role_config() {
  clear_has_role_config();
  ::universal_data* temp = role_config_;
  role_config_ = nullptr;
  return temp;
}
inline void C2S_Sync_RoleConfig::set_allocated_role_config(::universal_data* role_config) {
  delete role_config_;
  role_config_ = role_config;
  if (role_config) {
    set_has_role_config();
  } else {
    clear_has_role_config();
  }
}

// -------------------------------------------------------------------

// S2C_Sync_RoleConfig

// required int64 role_index = 1;
inline bool S2C_Sync_RoleConfig::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_RoleConfig::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_RoleConfig::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_RoleConfig::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_RoleConfig::role_index() const {
  return role_index_;
}
inline void S2C_Sync_RoleConfig::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .universal_data role_config = 2;
inline bool S2C_Sync_RoleConfig::has_role_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_RoleConfig::set_has_role_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_RoleConfig::clear_has_role_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_RoleConfig::clear_role_config() {
  if (role_config_ != nullptr) role_config_->::universal_data::Clear();
  clear_has_role_config();
}
inline const ::universal_data& S2C_Sync_RoleConfig::role_config() const {
  return role_config_ != nullptr ? *role_config_ : *default_instance_->role_config_;
}
inline ::universal_data* S2C_Sync_RoleConfig::mutable_role_config() {
  set_has_role_config();
  if (role_config_ == nullptr) role_config_ = new ::universal_data;
  return role_config_;
}
inline ::universal_data* S2C_Sync_RoleConfig::release_role_config() {
  clear_has_role_config();
  ::universal_data* temp = role_config_;
  role_config_ = nullptr;
  return temp;
}
inline void S2C_Sync_RoleConfig::set_allocated_role_config(::universal_data* role_config) {
  delete role_config_;
  role_config_ = role_config;
  if (role_config) {
    set_has_role_config();
  } else {
    clear_has_role_config();
  }
}

// -------------------------------------------------------------------

// C2S_Ask_Ready_EnterScene

// required int64 role_index = 1;
inline bool C2S_Ask_Ready_EnterScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_Ready_EnterScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_Ready_EnterScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_Ready_EnterScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_Ready_EnterScene::role_index() const {
  return role_index_;
}
inline void C2S_Ask_Ready_EnterScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// optional int64 login_intaddr = 2;
inline bool C2S_Ask_Ready_EnterScene::has_login_intaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_Ready_EnterScene::set_has_login_intaddr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_Ready_EnterScene::clear_has_login_intaddr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_Ready_EnterScene::clear_login_intaddr() {
  login_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_login_intaddr();
}
inline ::google::protobuf::int64 C2S_Ask_Ready_EnterScene::login_intaddr() const {
  return login_intaddr_;
}
inline void C2S_Ask_Ready_EnterScene::set_login_intaddr(::google::protobuf::int64 value) {
  set_has_login_intaddr();
  login_intaddr_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_Ready_EnterScene

// required bytes ret_code = 1;
inline bool S2C_Ret_Ready_EnterScene::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_Ready_EnterScene::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_Ready_EnterScene::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_Ready_EnterScene::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_Ready_EnterScene::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_Ready_EnterScene::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_Ready_EnterScene::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_Ready_EnterScene::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_Ready_EnterScene::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_Ready_EnterScene::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_Ready_EnterScene::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_Ret_Ready_EnterScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_Ready_EnterScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_Ready_EnterScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_Ready_EnterScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_Ready_EnterScene::role_index() const {
  return role_index_;
}
inline void S2C_Ret_Ready_EnterScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 scene_id = 5;
inline bool S2C_Ret_Ready_EnterScene::has_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_Ready_EnterScene::set_has_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_Ready_EnterScene::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_Ready_EnterScene::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 S2C_Ret_Ready_EnterScene::scene_id() const {
  return scene_id_;
}
inline void S2C_Ret_Ready_EnterScene::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// required int64 scene_intaddr = 6;
inline bool S2C_Ret_Ready_EnterScene::has_scene_intaddr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Ret_Ready_EnterScene::set_has_scene_intaddr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Ret_Ready_EnterScene::clear_has_scene_intaddr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Ret_Ready_EnterScene::clear_scene_intaddr() {
  scene_intaddr_ = GOOGLE_LONGLONG(0);
  clear_has_scene_intaddr();
}
inline ::google::protobuf::int64 S2C_Ret_Ready_EnterScene::scene_intaddr() const {
  return scene_intaddr_;
}
inline void S2C_Ret_Ready_EnterScene::set_scene_intaddr(::google::protobuf::int64 value) {
  set_has_scene_intaddr();
  scene_intaddr_ = value;
}

// required int64 scene_instance_id = 7;
inline bool S2C_Ret_Ready_EnterScene::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_Ret_Ready_EnterScene::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_Ret_Ready_EnterScene::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_Ret_Ready_EnterScene::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 S2C_Ret_Ready_EnterScene::scene_instance_id() const {
  return scene_instance_id_;
}
inline void S2C_Ret_Ready_EnterScene::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// required .E_SCENE_TYPE scene_type = 8 [default = EST_INVALID];
inline bool S2C_Ret_Ready_EnterScene::has_scene_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_Ret_Ready_EnterScene::set_has_scene_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_Ret_Ready_EnterScene::clear_has_scene_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_Ret_Ready_EnterScene::clear_scene_type() {
  scene_type_ = 0;
  clear_has_scene_type();
}
inline ::E_SCENE_TYPE S2C_Ret_Ready_EnterScene::scene_type() const {
  return static_cast< ::E_SCENE_TYPE >(scene_type_);
}
inline void S2C_Ret_Ready_EnterScene::set_scene_type(::E_SCENE_TYPE value) {
  assert(::E_SCENE_TYPE_IsValid(value));
  set_has_scene_type();
  scene_type_ = value;
}

// required bool is_refresh = 9;
inline bool S2C_Ret_Ready_EnterScene::has_is_refresh() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2C_Ret_Ready_EnterScene::set_has_is_refresh() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2C_Ret_Ready_EnterScene::clear_has_is_refresh() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2C_Ret_Ready_EnterScene::clear_is_refresh() {
  is_refresh_ = false;
  clear_has_is_refresh();
}
inline bool S2C_Ret_Ready_EnterScene::is_refresh() const {
  return is_refresh_;
}
inline void S2C_Ret_Ready_EnterScene::set_is_refresh(bool value) {
  set_has_is_refresh();
  is_refresh_ = value;
}

// -------------------------------------------------------------------

// C2S_Ask_EnterScene

// required int64 role_index = 1;
inline bool C2S_Ask_EnterScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_EnterScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_EnterScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_EnterScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_EnterScene::role_index() const {
  return role_index_;
}
inline void C2S_Ask_EnterScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 scene_instance_id = 2;
inline bool C2S_Ask_EnterScene::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_EnterScene::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_EnterScene::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_EnterScene::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 C2S_Ask_EnterScene::scene_instance_id() const {
  return scene_instance_id_;
}
inline void C2S_Ask_EnterScene::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// -------------------------------------------------------------------

// C2S_RefreshScene

// required int64 role_index = 1;
inline bool C2S_RefreshScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_RefreshScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_RefreshScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_RefreshScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_RefreshScene::role_index() const {
  return role_index_;
}
inline void C2S_RefreshScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Notice_OffLine

// required bytes account = 1;
inline bool S2C_Notice_OffLine::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Notice_OffLine::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Notice_OffLine::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Notice_OffLine::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& S2C_Notice_OffLine::account() const {
  return *account_;
}
inline void S2C_Notice_OffLine::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Notice_OffLine::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void S2C_Notice_OffLine::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Notice_OffLine::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* S2C_Notice_OffLine::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Notice_OffLine::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes reason = 2;
inline bool S2C_Notice_OffLine::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Notice_OffLine::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Notice_OffLine::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Notice_OffLine::clear_reason() {
  if (reason_ != &::google::protobuf::internal::kEmptyString) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& S2C_Notice_OffLine::reason() const {
  return *reason_;
}
inline void S2C_Notice_OffLine::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void S2C_Notice_OffLine::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void S2C_Notice_OffLine::set_reason(const void* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Notice_OffLine::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  return reason_;
}
inline ::std::string* S2C_Notice_OffLine::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Notice_OffLine::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::kEmptyString) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_Charset

// required bool utf_8 = 1;
inline bool C2S_Ask_Charset::has_utf_8() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_Charset::set_has_utf_8() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_Charset::clear_has_utf_8() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_Charset::clear_utf_8() {
  utf_8_ = false;
  clear_has_utf_8();
}
inline bool C2S_Ask_Charset::utf_8() const {
  return utf_8_;
}
inline void C2S_Ask_Charset::set_utf_8(bool value) {
  set_has_utf_8();
  utf_8_ = value;
}

// required sint32 msg_version = 2;
inline bool C2S_Ask_Charset::has_msg_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_Charset::set_has_msg_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_Charset::clear_has_msg_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_Charset::clear_msg_version() {
  msg_version_ = 0;
  clear_has_msg_version();
}
inline ::google::protobuf::int32 C2S_Ask_Charset::msg_version() const {
  return msg_version_;
}
inline void C2S_Ask_Charset::set_msg_version(::google::protobuf::int32 value) {
  set_has_msg_version();
  msg_version_ = value;
}

// -------------------------------------------------------------------

// C2S_Heartbeat

// required int64 time = 1;
inline bool C2S_Heartbeat::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Heartbeat::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Heartbeat::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Heartbeat::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 C2S_Heartbeat::time() const {
  return time_;
}
inline void C2S_Heartbeat::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// S2C_Heartbeat

// required int64 time = 1;
inline bool S2C_Heartbeat::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Heartbeat::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Heartbeat::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Heartbeat::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 S2C_Heartbeat::time() const {
  return time_;
}
inline void S2C_Heartbeat::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// C2S_GameCoin

// required int64 role_index = 1;
inline bool C2S_GameCoin::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_GameCoin::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_GameCoin::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_GameCoin::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_GameCoin::role_index() const {
  return role_index_;
}
inline void C2S_GameCoin::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_Role_GameCoin

// required int64 role_index = 1;
inline bool S2C_Sync_Role_GameCoin::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_Role_GameCoin::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_Role_GameCoin::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_Role_GameCoin::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_Role_GameCoin::role_index() const {
  return role_index_;
}
inline void S2C_Sync_Role_GameCoin::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 add_game_coin = 2;
inline bool S2C_Sync_Role_GameCoin::has_add_game_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_Role_GameCoin::set_has_add_game_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_Role_GameCoin::clear_has_add_game_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_Role_GameCoin::clear_add_game_coin() {
  add_game_coin_ = GOOGLE_LONGLONG(0);
  clear_has_add_game_coin();
}
inline ::google::protobuf::int64 S2C_Sync_Role_GameCoin::add_game_coin() const {
  return add_game_coin_;
}
inline void S2C_Sync_Role_GameCoin::set_add_game_coin(::google::protobuf::int64 value) {
  set_has_add_game_coin();
  add_game_coin_ = value;
}

// required int64 cur_game_coin = 3;
inline bool S2C_Sync_Role_GameCoin::has_cur_game_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Sync_Role_GameCoin::set_has_cur_game_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Sync_Role_GameCoin::clear_has_cur_game_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Sync_Role_GameCoin::clear_cur_game_coin() {
  cur_game_coin_ = GOOGLE_LONGLONG(0);
  clear_has_cur_game_coin();
}
inline ::google::protobuf::int64 S2C_Sync_Role_GameCoin::cur_game_coin() const {
  return cur_game_coin_;
}
inline void S2C_Sync_Role_GameCoin::set_cur_game_coin(::google::protobuf::int64 value) {
  set_has_cur_game_coin();
  cur_game_coin_ = value;
}

// required bool is_show = 4;
inline bool S2C_Sync_Role_GameCoin::has_is_show() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Sync_Role_GameCoin::set_has_is_show() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Sync_Role_GameCoin::clear_has_is_show() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Sync_Role_GameCoin::clear_is_show() {
  is_show_ = false;
  clear_has_is_show();
}
inline bool S2C_Sync_Role_GameCoin::is_show() const {
  return is_show_;
}
inline void S2C_Sync_Role_GameCoin::set_is_show(bool value) {
  set_has_is_show();
  is_show_ = value;
}

// -------------------------------------------------------------------

// C2S_DiamondCoin

// required int64 role_index = 1;
inline bool C2S_DiamondCoin::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_DiamondCoin::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_DiamondCoin::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_DiamondCoin::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_DiamondCoin::role_index() const {
  return role_index_;
}
inline void C2S_DiamondCoin::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_DiamondCoin

// required int64 role_index = 1;
inline bool S2C_DiamondCoin::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_DiamondCoin::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_DiamondCoin::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_DiamondCoin::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_DiamondCoin::role_index() const {
  return role_index_;
}
inline void S2C_DiamondCoin::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 diamond_coin = 2;
inline bool S2C_DiamondCoin::has_diamond_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_DiamondCoin::set_has_diamond_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_DiamondCoin::clear_has_diamond_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_DiamondCoin::clear_diamond_coin() {
  diamond_coin_ = GOOGLE_LONGLONG(0);
  clear_has_diamond_coin();
}
inline ::google::protobuf::int64 S2C_DiamondCoin::diamond_coin() const {
  return diamond_coin_;
}
inline void S2C_DiamondCoin::set_diamond_coin(::google::protobuf::int64 value) {
  set_has_diamond_coin();
  diamond_coin_ = value;
}

// -------------------------------------------------------------------

// C2S_Stamina

// required int64 role_index = 1;
inline bool C2S_Stamina::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Stamina::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Stamina::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Stamina::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Stamina::role_index() const {
  return role_index_;
}
inline void C2S_Stamina::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Stamina

// required int64 role_index = 1;
inline bool S2C_Stamina::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Stamina::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Stamina::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Stamina::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Stamina::role_index() const {
  return role_index_;
}
inline void S2C_Stamina::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 stamina = 2;
inline bool S2C_Stamina::has_stamina() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Stamina::set_has_stamina() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Stamina::clear_has_stamina() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Stamina::clear_stamina() {
  stamina_ = 0;
  clear_has_stamina();
}
inline ::google::protobuf::int32 S2C_Stamina::stamina() const {
  return stamina_;
}
inline void S2C_Stamina::set_stamina(::google::protobuf::int32 value) {
  set_has_stamina();
  stamina_ = value;
}

// -------------------------------------------------------------------

// C2S_Exp

// required int64 role_index = 1;
inline bool C2S_Exp::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Exp::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Exp::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Exp::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Exp::role_index() const {
  return role_index_;
}
inline void C2S_Exp::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_Role_Exp

// required int64 role_index = 1;
inline bool S2C_Sync_Role_Exp::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_Role_Exp::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_Role_Exp::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_Role_Exp::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_Role_Exp::role_index() const {
  return role_index_;
}
inline void S2C_Sync_Role_Exp::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bool is_show = 2;
inline bool S2C_Sync_Role_Exp::has_is_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_Role_Exp::set_has_is_show() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_Role_Exp::clear_has_is_show() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_Role_Exp::clear_is_show() {
  is_show_ = false;
  clear_has_is_show();
}
inline bool S2C_Sync_Role_Exp::is_show() const {
  return is_show_;
}
inline void S2C_Sync_Role_Exp::set_is_show(bool value) {
  set_has_is_show();
  is_show_ = value;
}

// required int64 add_exp = 3;
inline bool S2C_Sync_Role_Exp::has_add_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Sync_Role_Exp::set_has_add_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Sync_Role_Exp::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Sync_Role_Exp::clear_add_exp() {
  add_exp_ = GOOGLE_LONGLONG(0);
  clear_has_add_exp();
}
inline ::google::protobuf::int64 S2C_Sync_Role_Exp::add_exp() const {
  return add_exp_;
}
inline void S2C_Sync_Role_Exp::set_add_exp(::google::protobuf::int64 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// required int64 cur_exp = 4;
inline bool S2C_Sync_Role_Exp::has_cur_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Sync_Role_Exp::set_has_cur_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Sync_Role_Exp::clear_has_cur_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Sync_Role_Exp::clear_cur_exp() {
  cur_exp_ = GOOGLE_LONGLONG(0);
  clear_has_cur_exp();
}
inline ::google::protobuf::int64 S2C_Sync_Role_Exp::cur_exp() const {
  return cur_exp_;
}
inline void S2C_Sync_Role_Exp::set_cur_exp(::google::protobuf::int64 value) {
  set_has_cur_exp();
  cur_exp_ = value;
}

// required int64 max_exp = 5;
inline bool S2C_Sync_Role_Exp::has_max_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_Sync_Role_Exp::set_has_max_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_Sync_Role_Exp::clear_has_max_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_Sync_Role_Exp::clear_max_exp() {
  max_exp_ = GOOGLE_LONGLONG(0);
  clear_has_max_exp();
}
inline ::google::protobuf::int64 S2C_Sync_Role_Exp::max_exp() const {
  return max_exp_;
}
inline void S2C_Sync_Role_Exp::set_max_exp(::google::protobuf::int64 value) {
  set_has_max_exp();
  max_exp_ = value;
}

// -------------------------------------------------------------------

// S2C_Notice_Role_EnterScene

// required int64 role_index = 1;
inline bool S2C_Notice_Role_EnterScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Notice_Role_EnterScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Notice_Role_EnterScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Notice_Role_EnterScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Notice_Role_EnterScene::role_index() const {
  return role_index_;
}
inline void S2C_Notice_Role_EnterScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .universal_data public_info = 2;
inline bool S2C_Notice_Role_EnterScene::has_public_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Notice_Role_EnterScene::set_has_public_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Notice_Role_EnterScene::clear_has_public_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Notice_Role_EnterScene::clear_public_info() {
  if (public_info_ != nullptr) public_info_->::universal_data::Clear();
  clear_has_public_info();
}
inline const ::universal_data& S2C_Notice_Role_EnterScene::public_info() const {
  return public_info_ != nullptr ? *public_info_ : *default_instance_->public_info_;
}
inline ::universal_data* S2C_Notice_Role_EnterScene::mutable_public_info() {
  set_has_public_info();
  if (public_info_ == nullptr) public_info_ = new ::universal_data;
  return public_info_;
}
inline ::universal_data* S2C_Notice_Role_EnterScene::release_public_info() {
  clear_has_public_info();
  ::universal_data* temp = public_info_;
  public_info_ = nullptr;
  return temp;
}
inline void S2C_Notice_Role_EnterScene::set_allocated_public_info(::universal_data* public_info) {
  delete public_info_;
  public_info_ = public_info;
  if (public_info) {
    set_has_public_info();
  } else {
    clear_has_public_info();
  }
}

// required .universal_data public_memory_info = 3;
inline bool S2C_Notice_Role_EnterScene::has_public_memory_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Notice_Role_EnterScene::set_has_public_memory_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Notice_Role_EnterScene::clear_has_public_memory_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Notice_Role_EnterScene::clear_public_memory_info() {
  if (public_memory_info_ != nullptr) public_memory_info_->::universal_data::Clear();
  clear_has_public_memory_info();
}
inline const ::universal_data& S2C_Notice_Role_EnterScene::public_memory_info() const {
  return public_memory_info_ != nullptr ? *public_memory_info_ : *default_instance_->public_memory_info_;
}
inline ::universal_data* S2C_Notice_Role_EnterScene::mutable_public_memory_info() {
  set_has_public_memory_info();
  if (public_memory_info_ == nullptr) public_memory_info_ = new ::universal_data;
  return public_memory_info_;
}
inline ::universal_data* S2C_Notice_Role_EnterScene::release_public_memory_info() {
  clear_has_public_memory_info();
  ::universal_data* temp = public_memory_info_;
  public_memory_info_ = nullptr;
  return temp;
}
inline void S2C_Notice_Role_EnterScene::set_allocated_public_memory_info(::universal_data* public_memory_info) {
  delete public_memory_info_;
  public_memory_info_ = public_memory_info;
  if (public_memory_info) {
    set_has_public_memory_info();
  } else {
    clear_has_public_memory_info();
  }
}

// optional .universal_data additional_info = 4;
inline bool S2C_Notice_Role_EnterScene::has_additional_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Notice_Role_EnterScene::set_has_additional_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Notice_Role_EnterScene::clear_has_additional_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Notice_Role_EnterScene::clear_additional_info() {
  if (additional_info_ != nullptr) additional_info_->::universal_data::Clear();
  clear_has_additional_info();
}
inline const ::universal_data& S2C_Notice_Role_EnterScene::additional_info() const {
  return additional_info_ != nullptr ? *additional_info_ : *default_instance_->additional_info_;
}
inline ::universal_data* S2C_Notice_Role_EnterScene::mutable_additional_info() {
  set_has_additional_info();
  if (additional_info_ == nullptr) additional_info_ = new ::universal_data;
  return additional_info_;
}
inline ::universal_data* S2C_Notice_Role_EnterScene::release_additional_info() {
  clear_has_additional_info();
  ::universal_data* temp = additional_info_;
  additional_info_ = nullptr;
  return temp;
}
inline void S2C_Notice_Role_EnterScene::set_allocated_additional_info(::universal_data* additional_info) {
  delete additional_info_;
  additional_info_ = additional_info;
  if (additional_info) {
    set_has_additional_info();
  } else {
    clear_has_additional_info();
  }
}

// required int64 scene_instance_id = 5;
inline bool S2C_Notice_Role_EnterScene::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_Notice_Role_EnterScene::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_Notice_Role_EnterScene::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_Notice_Role_EnterScene::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 S2C_Notice_Role_EnterScene::scene_instance_id() const {
  return scene_instance_id_;
}
inline void S2C_Notice_Role_EnterScene::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Notice_Role_LeaveScene

// required int64 role_index = 1;
inline bool S2C_Notice_Role_LeaveScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Notice_Role_LeaveScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Notice_Role_LeaveScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Notice_Role_LeaveScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Notice_Role_LeaveScene::role_index() const {
  return role_index_;
}
inline void S2C_Notice_Role_LeaveScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 scene_instance_id = 2;
inline bool S2C_Notice_Role_LeaveScene::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Notice_Role_LeaveScene::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Notice_Role_LeaveScene::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Notice_Role_LeaveScene::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 S2C_Notice_Role_LeaveScene::scene_instance_id() const {
  return scene_instance_id_;
}
inline void S2C_Notice_Role_LeaveScene::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_Role_PublicInfo

// required int64 role_index = 1;
inline bool S2C_Sync_Role_PublicInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_Role_PublicInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_Role_PublicInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_Role_PublicInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_Role_PublicInfo::role_index() const {
  return role_index_;
}
inline void S2C_Sync_Role_PublicInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .universal_data public_info = 2;
inline bool S2C_Sync_Role_PublicInfo::has_public_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_Role_PublicInfo::set_has_public_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_Role_PublicInfo::clear_has_public_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_Role_PublicInfo::clear_public_info() {
  if (public_info_ != nullptr) public_info_->::universal_data::Clear();
  clear_has_public_info();
}
inline const ::universal_data& S2C_Sync_Role_PublicInfo::public_info() const {
  return public_info_ != nullptr ? *public_info_ : *default_instance_->public_info_;
}
inline ::universal_data* S2C_Sync_Role_PublicInfo::mutable_public_info() {
  set_has_public_info();
  if (public_info_ == nullptr) public_info_ = new ::universal_data;
  return public_info_;
}
inline ::universal_data* S2C_Sync_Role_PublicInfo::release_public_info() {
  clear_has_public_info();
  ::universal_data* temp = public_info_;
  public_info_ = nullptr;
  return temp;
}
inline void S2C_Sync_Role_PublicInfo::set_allocated_public_info(::universal_data* public_info) {
  delete public_info_;
  public_info_ = public_info;
  if (public_info) {
    set_has_public_info();
  } else {
    clear_has_public_info();
  }
}

// required .universal_data public_memory_info = 3;
inline bool S2C_Sync_Role_PublicInfo::has_public_memory_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Sync_Role_PublicInfo::set_has_public_memory_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Sync_Role_PublicInfo::clear_has_public_memory_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Sync_Role_PublicInfo::clear_public_memory_info() {
  if (public_memory_info_ != nullptr) public_memory_info_->::universal_data::Clear();
  clear_has_public_memory_info();
}
inline const ::universal_data& S2C_Sync_Role_PublicInfo::public_memory_info() const {
  return public_memory_info_ != nullptr ? *public_memory_info_ : *default_instance_->public_memory_info_;
}
inline ::universal_data* S2C_Sync_Role_PublicInfo::mutable_public_memory_info() {
  set_has_public_memory_info();
  if (public_memory_info_ == nullptr) public_memory_info_ = new ::universal_data;
  return public_memory_info_;
}
inline ::universal_data* S2C_Sync_Role_PublicInfo::release_public_memory_info() {
  clear_has_public_memory_info();
  ::universal_data* temp = public_memory_info_;
  public_memory_info_ = nullptr;
  return temp;
}
inline void S2C_Sync_Role_PublicInfo::set_allocated_public_memory_info(::universal_data* public_memory_info) {
  delete public_memory_info_;
  public_memory_info_ = public_memory_info;
  if (public_memory_info) {
    set_has_public_memory_info();
  } else {
    clear_has_public_memory_info();
  }
}

// -------------------------------------------------------------------

// S2C_Sync_Role_PrivateInfo

// required int64 role_index = 1;
inline bool S2C_Sync_Role_PrivateInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_Role_PrivateInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_Role_PrivateInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_Role_PrivateInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_Role_PrivateInfo::role_index() const {
  return role_index_;
}
inline void S2C_Sync_Role_PrivateInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .universal_data private_info = 2;
inline bool S2C_Sync_Role_PrivateInfo::has_private_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_Role_PrivateInfo::set_has_private_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_Role_PrivateInfo::clear_has_private_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_Role_PrivateInfo::clear_private_info() {
  if (private_info_ != nullptr) private_info_->::universal_data::Clear();
  clear_has_private_info();
}
inline const ::universal_data& S2C_Sync_Role_PrivateInfo::private_info() const {
  return private_info_ != nullptr ? *private_info_ : *default_instance_->private_info_;
}
inline ::universal_data* S2C_Sync_Role_PrivateInfo::mutable_private_info() {
  set_has_private_info();
  if (private_info_ == nullptr) private_info_ = new ::universal_data;
  return private_info_;
}
inline ::universal_data* S2C_Sync_Role_PrivateInfo::release_private_info() {
  clear_has_private_info();
  ::universal_data* temp = private_info_;
  private_info_ = nullptr;
  return temp;
}
inline void S2C_Sync_Role_PrivateInfo::set_allocated_private_info(::universal_data* private_info) {
  delete private_info_;
  private_info_ = private_info;
  if (private_info) {
    set_has_private_info();
  } else {
    clear_has_private_info();
  }
}

// required .universal_data private_memory_info = 3;
inline bool S2C_Sync_Role_PrivateInfo::has_private_memory_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Sync_Role_PrivateInfo::set_has_private_memory_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Sync_Role_PrivateInfo::clear_has_private_memory_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Sync_Role_PrivateInfo::clear_private_memory_info() {
  if (private_memory_info_ != nullptr) private_memory_info_->::universal_data::Clear();
  clear_has_private_memory_info();
}
inline const ::universal_data& S2C_Sync_Role_PrivateInfo::private_memory_info() const {
  return private_memory_info_ != nullptr ? *private_memory_info_ : *default_instance_->private_memory_info_;
}
inline ::universal_data* S2C_Sync_Role_PrivateInfo::mutable_private_memory_info() {
  set_has_private_memory_info();
  if (private_memory_info_ == nullptr) private_memory_info_ = new ::universal_data;
  return private_memory_info_;
}
inline ::universal_data* S2C_Sync_Role_PrivateInfo::release_private_memory_info() {
  clear_has_private_memory_info();
  ::universal_data* temp = private_memory_info_;
  private_memory_info_ = nullptr;
  return temp;
}
inline void S2C_Sync_Role_PrivateInfo::set_allocated_private_memory_info(::universal_data* private_memory_info) {
  delete private_memory_info_;
  private_memory_info_ = private_memory_info;
  if (private_memory_info) {
    set_has_private_memory_info();
  } else {
    clear_has_private_memory_info();
  }
}

// -------------------------------------------------------------------

// S2C_Sync_RoleInfo

// required int64 role_index = 1;
inline bool S2C_Sync_RoleInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_RoleInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_RoleInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_RoleInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_RoleInfo::role_index() const {
  return role_index_;
}
inline void S2C_Sync_RoleInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// repeated .universal_data universal_role_info = 2;
inline int S2C_Sync_RoleInfo::universal_role_info_size() const {
  return universal_role_info_.size();
}
inline void S2C_Sync_RoleInfo::clear_universal_role_info() {
  universal_role_info_.Clear();
}
inline const ::universal_data& S2C_Sync_RoleInfo::universal_role_info(int index) const {
  return universal_role_info_.Get(index);
}
inline ::universal_data* S2C_Sync_RoleInfo::mutable_universal_role_info(int index) {
  return universal_role_info_.Mutable(index);
}
inline ::universal_data* S2C_Sync_RoleInfo::add_universal_role_info() {
  return universal_role_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
S2C_Sync_RoleInfo::universal_role_info() const {
  return universal_role_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
S2C_Sync_RoleInfo::mutable_universal_role_info() {
  return &universal_role_info_;
}

// -------------------------------------------------------------------

// S2C_Sync_RoleAttr

// required int64 role_index = 1;
inline bool S2C_Sync_RoleAttr::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_RoleAttr::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_RoleAttr::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_RoleAttr::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_RoleAttr::role_index() const {
  return role_index_;
}
inline void S2C_Sync_RoleAttr::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .universal_data new_role_attr = 2;
inline bool S2C_Sync_RoleAttr::has_new_role_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_RoleAttr::set_has_new_role_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_RoleAttr::clear_has_new_role_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_RoleAttr::clear_new_role_attr() {
  if (new_role_attr_ != nullptr) new_role_attr_->::universal_data::Clear();
  clear_has_new_role_attr();
}
inline const ::universal_data& S2C_Sync_RoleAttr::new_role_attr() const {
  return new_role_attr_ != nullptr ? *new_role_attr_ : *default_instance_->new_role_attr_;
}
inline ::universal_data* S2C_Sync_RoleAttr::mutable_new_role_attr() {
  set_has_new_role_attr();
  if (new_role_attr_ == nullptr) new_role_attr_ = new ::universal_data;
  return new_role_attr_;
}
inline ::universal_data* S2C_Sync_RoleAttr::release_new_role_attr() {
  clear_has_new_role_attr();
  ::universal_data* temp = new_role_attr_;
  new_role_attr_ = nullptr;
  return temp;
}
inline void S2C_Sync_RoleAttr::set_allocated_new_role_attr(::universal_data* new_role_attr) {
  delete new_role_attr_;
  new_role_attr_ = new_role_attr;
  if (new_role_attr) {
    set_has_new_role_attr();
  } else {
    clear_has_new_role_attr();
  }
}

// -------------------------------------------------------------------

// C2S_Sync_Dir

// required int64 role_index = 1;
inline bool C2S_Sync_Dir::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Sync_Dir::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Sync_Dir::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Sync_Dir::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Sync_Dir::role_index() const {
  return role_index_;
}
inline void C2S_Sync_Dir::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 dir = 2;
inline bool C2S_Sync_Dir::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Sync_Dir::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Sync_Dir::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Sync_Dir::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline ::google::protobuf::int32 C2S_Sync_Dir::dir() const {
  return dir_;
}
inline void C2S_Sync_Dir::set_dir(::google::protobuf::int32 value) {
  set_has_dir();
  dir_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_Dir

// required int64 role_index = 1;
inline bool S2C_Sync_Dir::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_Dir::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_Dir::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_Dir::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_Dir::role_index() const {
  return role_index_;
}
inline void S2C_Sync_Dir::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 dir = 2;
inline bool S2C_Sync_Dir::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_Dir::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_Dir::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_Dir::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline ::google::protobuf::int32 S2C_Sync_Dir::dir() const {
  return dir_;
}
inline void S2C_Sync_Dir::set_dir(::google::protobuf::int32 value) {
  set_has_dir();
  dir_ = value;
}

// -------------------------------------------------------------------

// C2S_Sync_RoleMove

// required int64 role_index = 1;
inline bool C2S_Sync_RoleMove::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Sync_RoleMove::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Sync_RoleMove::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Sync_RoleMove::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Sync_RoleMove::role_index() const {
  return role_index_;
}
inline void C2S_Sync_RoleMove::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required float begin_x = 3;
inline bool C2S_Sync_RoleMove::has_begin_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Sync_RoleMove::set_has_begin_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Sync_RoleMove::clear_has_begin_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Sync_RoleMove::clear_begin_x() {
  begin_x_ = 0;
  clear_has_begin_x();
}
inline float C2S_Sync_RoleMove::begin_x() const {
  return begin_x_;
}
inline void C2S_Sync_RoleMove::set_begin_x(float value) {
  set_has_begin_x();
  begin_x_ = value;
}

// required float begin_y = 4;
inline bool C2S_Sync_RoleMove::has_begin_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Sync_RoleMove::set_has_begin_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Sync_RoleMove::clear_has_begin_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Sync_RoleMove::clear_begin_y() {
  begin_y_ = 0;
  clear_has_begin_y();
}
inline float C2S_Sync_RoleMove::begin_y() const {
  return begin_y_;
}
inline void C2S_Sync_RoleMove::set_begin_y(float value) {
  set_has_begin_y();
  begin_y_ = value;
}

// required float end_x = 5;
inline bool C2S_Sync_RoleMove::has_end_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Sync_RoleMove::set_has_end_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Sync_RoleMove::clear_has_end_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Sync_RoleMove::clear_end_x() {
  end_x_ = 0;
  clear_has_end_x();
}
inline float C2S_Sync_RoleMove::end_x() const {
  return end_x_;
}
inline void C2S_Sync_RoleMove::set_end_x(float value) {
  set_has_end_x();
  end_x_ = value;
}

// required float end_y = 6;
inline bool C2S_Sync_RoleMove::has_end_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_Sync_RoleMove::set_has_end_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_Sync_RoleMove::clear_has_end_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_Sync_RoleMove::clear_end_y() {
  end_y_ = 0;
  clear_has_end_y();
}
inline float C2S_Sync_RoleMove::end_y() const {
  return end_y_;
}
inline void C2S_Sync_RoleMove::set_end_y(float value) {
  set_has_end_y();
  end_y_ = value;
}

// required bool is_run = 7;
inline bool C2S_Sync_RoleMove::has_is_run() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2S_Sync_RoleMove::set_has_is_run() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2S_Sync_RoleMove::clear_has_is_run() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2S_Sync_RoleMove::clear_is_run() {
  is_run_ = false;
  clear_has_is_run();
}
inline bool C2S_Sync_RoleMove::is_run() const {
  return is_run_;
}
inline void C2S_Sync_RoleMove::set_is_run(bool value) {
  set_has_is_run();
  is_run_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_RoleMove

// required int64 role_index = 1;
inline bool S2C_Sync_RoleMove::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_RoleMove::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_RoleMove::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_RoleMove::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_RoleMove::role_index() const {
  return role_index_;
}
inline void S2C_Sync_RoleMove::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required float begin_x = 3;
inline bool S2C_Sync_RoleMove::has_begin_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_RoleMove::set_has_begin_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_RoleMove::clear_has_begin_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_RoleMove::clear_begin_x() {
  begin_x_ = 0;
  clear_has_begin_x();
}
inline float S2C_Sync_RoleMove::begin_x() const {
  return begin_x_;
}
inline void S2C_Sync_RoleMove::set_begin_x(float value) {
  set_has_begin_x();
  begin_x_ = value;
}

// required float begin_y = 4;
inline bool S2C_Sync_RoleMove::has_begin_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Sync_RoleMove::set_has_begin_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Sync_RoleMove::clear_has_begin_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Sync_RoleMove::clear_begin_y() {
  begin_y_ = 0;
  clear_has_begin_y();
}
inline float S2C_Sync_RoleMove::begin_y() const {
  return begin_y_;
}
inline void S2C_Sync_RoleMove::set_begin_y(float value) {
  set_has_begin_y();
  begin_y_ = value;
}

// required float end_x = 5;
inline bool S2C_Sync_RoleMove::has_end_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Sync_RoleMove::set_has_end_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Sync_RoleMove::clear_has_end_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Sync_RoleMove::clear_end_x() {
  end_x_ = 0;
  clear_has_end_x();
}
inline float S2C_Sync_RoleMove::end_x() const {
  return end_x_;
}
inline void S2C_Sync_RoleMove::set_end_x(float value) {
  set_has_end_x();
  end_x_ = value;
}

// required float end_y = 6;
inline bool S2C_Sync_RoleMove::has_end_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_Sync_RoleMove::set_has_end_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_Sync_RoleMove::clear_has_end_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_Sync_RoleMove::clear_end_y() {
  end_y_ = 0;
  clear_has_end_y();
}
inline float S2C_Sync_RoleMove::end_y() const {
  return end_y_;
}
inline void S2C_Sync_RoleMove::set_end_y(float value) {
  set_has_end_y();
  end_y_ = value;
}

// required bool is_run = 7;
inline bool S2C_Sync_RoleMove::has_is_run() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_Sync_RoleMove::set_has_is_run() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_Sync_RoleMove::clear_has_is_run() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_Sync_RoleMove::clear_is_run() {
  is_run_ = false;
  clear_has_is_run();
}
inline bool S2C_Sync_RoleMove::is_run() const {
  return is_run_;
}
inline void S2C_Sync_RoleMove::set_is_run(bool value) {
  set_has_is_run();
  is_run_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_RoleStopMove

// required int64 role_index = 1;
inline bool S2C_Sync_RoleStopMove::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_RoleStopMove::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_RoleStopMove::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_RoleStopMove::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_RoleStopMove::role_index() const {
  return role_index_;
}
inline void S2C_Sync_RoleStopMove::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required float end_x = 3;
inline bool S2C_Sync_RoleStopMove::has_end_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_RoleStopMove::set_has_end_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_RoleStopMove::clear_has_end_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_RoleStopMove::clear_end_x() {
  end_x_ = 0;
  clear_has_end_x();
}
inline float S2C_Sync_RoleStopMove::end_x() const {
  return end_x_;
}
inline void S2C_Sync_RoleStopMove::set_end_x(float value) {
  set_has_end_x();
  end_x_ = value;
}

// required float end_y = 4;
inline bool S2C_Sync_RoleStopMove::has_end_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Sync_RoleStopMove::set_has_end_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Sync_RoleStopMove::clear_has_end_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Sync_RoleStopMove::clear_end_y() {
  end_y_ = 0;
  clear_has_end_y();
}
inline float S2C_Sync_RoleStopMove::end_y() const {
  return end_y_;
}
inline void S2C_Sync_RoleStopMove::set_end_y(float value) {
  set_has_end_y();
  end_y_ = value;
}

// -------------------------------------------------------------------

// S2C_Notice_Role_LevelUp

// required int64 role_index = 1;
inline bool S2C_Notice_Role_LevelUp::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Notice_Role_LevelUp::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Notice_Role_LevelUp::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Notice_Role_LevelUp::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Notice_Role_LevelUp::role_index() const {
  return role_index_;
}
inline void S2C_Notice_Role_LevelUp::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .universal_data new_role_attr = 2;
inline bool S2C_Notice_Role_LevelUp::has_new_role_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Notice_Role_LevelUp::set_has_new_role_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Notice_Role_LevelUp::clear_has_new_role_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Notice_Role_LevelUp::clear_new_role_attr() {
  if (new_role_attr_ != nullptr) new_role_attr_->::universal_data::Clear();
  clear_has_new_role_attr();
}
inline const ::universal_data& S2C_Notice_Role_LevelUp::new_role_attr() const {
  return new_role_attr_ != nullptr ? *new_role_attr_ : *default_instance_->new_role_attr_;
}
inline ::universal_data* S2C_Notice_Role_LevelUp::mutable_new_role_attr() {
  set_has_new_role_attr();
  if (new_role_attr_ == nullptr) new_role_attr_ = new ::universal_data;
  return new_role_attr_;
}
inline ::universal_data* S2C_Notice_Role_LevelUp::release_new_role_attr() {
  clear_has_new_role_attr();
  ::universal_data* temp = new_role_attr_;
  new_role_attr_ = nullptr;
  return temp;
}
inline void S2C_Notice_Role_LevelUp::set_allocated_new_role_attr(::universal_data* new_role_attr) {
  delete new_role_attr_;
  new_role_attr_ = new_role_attr;
  if (new_role_attr) {
    set_has_new_role_attr();
  } else {
    clear_has_new_role_attr();
  }
}

// required int64 new_level = 3;
inline bool S2C_Notice_Role_LevelUp::has_new_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Notice_Role_LevelUp::set_has_new_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Notice_Role_LevelUp::clear_has_new_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Notice_Role_LevelUp::clear_new_level() {
  new_level_ = GOOGLE_LONGLONG(0);
  clear_has_new_level();
}
inline ::google::protobuf::int64 S2C_Notice_Role_LevelUp::new_level() const {
  return new_level_;
}
inline void S2C_Notice_Role_LevelUp::set_new_level(::google::protobuf::int64 value) {
  set_has_new_level();
  new_level_ = value;
}

// -------------------------------------------------------------------

// C2S_Ask_Comrade

// required int64 role_index = 1;
inline bool C2S_Ask_Comrade::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_Comrade::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_Comrade::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_Comrade::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_Comrade::role_index() const {
  return role_index_;
}
inline void C2S_Ask_Comrade::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 comrade_role_index = 2;
inline bool C2S_Ask_Comrade::has_comrade_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_Comrade::set_has_comrade_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_Comrade::clear_has_comrade_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_Comrade::clear_comrade_role_index() {
  comrade_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_comrade_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_Comrade::comrade_role_index() const {
  return comrade_role_index_;
}
inline void C2S_Ask_Comrade::set_comrade_role_index(::google::protobuf::int64 value) {
  set_has_comrade_role_index();
  comrade_role_index_ = value;
}

// required sint32 team_pos_index = 3;
inline bool C2S_Ask_Comrade::has_team_pos_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_Comrade::set_has_team_pos_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_Comrade::clear_has_team_pos_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_Comrade::clear_team_pos_index() {
  team_pos_index_ = 0;
  clear_has_team_pos_index();
}
inline ::google::protobuf::int32 C2S_Ask_Comrade::team_pos_index() const {
  return team_pos_index_;
}
inline void C2S_Ask_Comrade::set_team_pos_index(::google::protobuf::int32 value) {
  set_has_team_pos_index();
  team_pos_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_Comrade

// required int64 role_index = 1;
inline bool S2C_Ret_Comrade::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_Comrade::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_Comrade::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_Comrade::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_Comrade::role_index() const {
  return role_index_;
}
inline void S2C_Ret_Comrade::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 team_index = 2;
inline bool S2C_Ret_Comrade::has_team_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_Comrade::set_has_team_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_Comrade::clear_has_team_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_Comrade::clear_team_index() {
  team_index_ = GOOGLE_LONGLONG(0);
  clear_has_team_index();
}
inline ::google::protobuf::int64 S2C_Ret_Comrade::team_index() const {
  return team_index_;
}
inline void S2C_Ret_Comrade::set_team_index(::google::protobuf::int64 value) {
  set_has_team_index();
  team_index_ = value;
}

// required int64 comrade_role_index = 3;
inline bool S2C_Ret_Comrade::has_comrade_role_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_Comrade::set_has_comrade_role_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_Comrade::clear_has_comrade_role_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_Comrade::clear_comrade_role_index() {
  comrade_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_comrade_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_Comrade::comrade_role_index() const {
  return comrade_role_index_;
}
inline void S2C_Ret_Comrade::set_comrade_role_index(::google::protobuf::int64 value) {
  set_has_comrade_role_index();
  comrade_role_index_ = value;
}

// required sint32 team_pos_index = 4;
inline bool S2C_Ret_Comrade::has_team_pos_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Ret_Comrade::set_has_team_pos_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Ret_Comrade::clear_has_team_pos_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Ret_Comrade::clear_team_pos_index() {
  team_pos_index_ = 0;
  clear_has_team_pos_index();
}
inline ::google::protobuf::int32 S2C_Ret_Comrade::team_pos_index() const {
  return team_pos_index_;
}
inline void S2C_Ret_Comrade::set_team_pos_index(::google::protobuf::int32 value) {
  set_has_team_pos_index();
  team_pos_index_ = value;
}

// -------------------------------------------------------------------

// C2S_Ask_Chat

// required int64 role_index = 1;
inline bool C2S_Ask_Chat::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_Chat::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_Chat::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_Chat::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_Chat::role_index() const {
  return role_index_;
}
inline void C2S_Ask_Chat::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .E_CHAT_TYPE chat_type = 2 [default = ECT_CURRENT];
inline bool C2S_Ask_Chat::has_chat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_Chat::set_has_chat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_Chat::clear_has_chat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_Chat::clear_chat_type() {
  chat_type_ = 0;
  clear_has_chat_type();
}
inline ::E_CHAT_TYPE C2S_Ask_Chat::chat_type() const {
  return static_cast< ::E_CHAT_TYPE >(chat_type_);
}
inline void C2S_Ask_Chat::set_chat_type(::E_CHAT_TYPE value) {
  assert(::E_CHAT_TYPE_IsValid(value));
  set_has_chat_type();
  chat_type_ = value;
}

// required bytes msg = 3;
inline bool C2S_Ask_Chat::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_Chat::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_Chat::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_Chat::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& C2S_Ask_Chat::msg() const {
  return *msg_;
}
inline void C2S_Ask_Chat::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void C2S_Ask_Chat::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void C2S_Ask_Chat::set_msg(const void* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_Chat::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* C2S_Ask_Chat::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_Chat::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 backcolor = 4;
inline bool C2S_Ask_Chat::has_backcolor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Ask_Chat::set_has_backcolor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Ask_Chat::clear_has_backcolor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Ask_Chat::clear_backcolor() {
  backcolor_ = 0u;
  clear_has_backcolor();
}
inline ::google::protobuf::uint32 C2S_Ask_Chat::backcolor() const {
  return backcolor_;
}
inline void C2S_Ask_Chat::set_backcolor(::google::protobuf::uint32 value) {
  set_has_backcolor();
  backcolor_ = value;
}

// required uint32 boxcolor = 5;
inline bool C2S_Ask_Chat::has_boxcolor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_Ask_Chat::set_has_boxcolor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_Ask_Chat::clear_has_boxcolor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_Ask_Chat::clear_boxcolor() {
  boxcolor_ = 0u;
  clear_has_boxcolor();
}
inline ::google::protobuf::uint32 C2S_Ask_Chat::boxcolor() const {
  return boxcolor_;
}
inline void C2S_Ask_Chat::set_boxcolor(::google::protobuf::uint32 value) {
  set_has_boxcolor();
  boxcolor_ = value;
}

// required uint32 shadowcolor = 6;
inline bool C2S_Ask_Chat::has_shadowcolor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2S_Ask_Chat::set_has_shadowcolor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2S_Ask_Chat::clear_has_shadowcolor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2S_Ask_Chat::clear_shadowcolor() {
  shadowcolor_ = 0u;
  clear_has_shadowcolor();
}
inline ::google::protobuf::uint32 C2S_Ask_Chat::shadowcolor() const {
  return shadowcolor_;
}
inline void C2S_Ask_Chat::set_shadowcolor(::google::protobuf::uint32 value) {
  set_has_shadowcolor();
  shadowcolor_ = value;
}

// required uint32 msgcolor = 7;
inline bool C2S_Ask_Chat::has_msgcolor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void C2S_Ask_Chat::set_has_msgcolor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void C2S_Ask_Chat::clear_has_msgcolor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void C2S_Ask_Chat::clear_msgcolor() {
  msgcolor_ = 0u;
  clear_has_msgcolor();
}
inline ::google::protobuf::uint32 C2S_Ask_Chat::msgcolor() const {
  return msgcolor_;
}
inline void C2S_Ask_Chat::set_msgcolor(::google::protobuf::uint32 value) {
  set_has_msgcolor();
  msgcolor_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_Chat

// required int64 role_index = 1;
inline bool S2C_Ret_Chat::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_Chat::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_Chat::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_Chat::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_Chat::role_index() const {
  return role_index_;
}
inline void S2C_Ret_Chat::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 scene_instance_id = 2;
inline bool S2C_Ret_Chat::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_Chat::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_Chat::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_Chat::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 S2C_Ret_Chat::scene_instance_id() const {
  return scene_instance_id_;
}
inline void S2C_Ret_Chat::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// required .E_CHAT_TYPE chat_type = 5 [default = ECT_CURRENT];
inline bool S2C_Ret_Chat::has_chat_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_Chat::set_has_chat_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_Chat::clear_has_chat_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_Chat::clear_chat_type() {
  chat_type_ = 0;
  clear_has_chat_type();
}
inline ::E_CHAT_TYPE S2C_Ret_Chat::chat_type() const {
  return static_cast< ::E_CHAT_TYPE >(chat_type_);
}
inline void S2C_Ret_Chat::set_chat_type(::E_CHAT_TYPE value) {
  assert(::E_CHAT_TYPE_IsValid(value));
  set_has_chat_type();
  chat_type_ = value;
}

// required bytes msg = 6;
inline bool S2C_Ret_Chat::has_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Ret_Chat::set_has_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Ret_Chat::clear_has_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Ret_Chat::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& S2C_Ret_Chat::msg() const {
  return *msg_;
}
inline void S2C_Ret_Chat::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void S2C_Ret_Chat::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void S2C_Ret_Chat::set_msg(const void* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_Chat::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* S2C_Ret_Chat::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_Chat::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 backcolor = 7;
inline bool S2C_Ret_Chat::has_backcolor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_Ret_Chat::set_has_backcolor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_Ret_Chat::clear_has_backcolor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_Ret_Chat::clear_backcolor() {
  backcolor_ = 0u;
  clear_has_backcolor();
}
inline ::google::protobuf::uint32 S2C_Ret_Chat::backcolor() const {
  return backcolor_;
}
inline void S2C_Ret_Chat::set_backcolor(::google::protobuf::uint32 value) {
  set_has_backcolor();
  backcolor_ = value;
}

// required uint32 boxcolor = 8;
inline bool S2C_Ret_Chat::has_boxcolor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_Ret_Chat::set_has_boxcolor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_Ret_Chat::clear_has_boxcolor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_Ret_Chat::clear_boxcolor() {
  boxcolor_ = 0u;
  clear_has_boxcolor();
}
inline ::google::protobuf::uint32 S2C_Ret_Chat::boxcolor() const {
  return boxcolor_;
}
inline void S2C_Ret_Chat::set_boxcolor(::google::protobuf::uint32 value) {
  set_has_boxcolor();
  boxcolor_ = value;
}

// required uint32 shadowcolor = 10;
inline bool S2C_Ret_Chat::has_shadowcolor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2C_Ret_Chat::set_has_shadowcolor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2C_Ret_Chat::clear_has_shadowcolor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2C_Ret_Chat::clear_shadowcolor() {
  shadowcolor_ = 0u;
  clear_has_shadowcolor();
}
inline ::google::protobuf::uint32 S2C_Ret_Chat::shadowcolor() const {
  return shadowcolor_;
}
inline void S2C_Ret_Chat::set_shadowcolor(::google::protobuf::uint32 value) {
  set_has_shadowcolor();
  shadowcolor_ = value;
}

// required uint32 msgcolor = 11;
inline bool S2C_Ret_Chat::has_msgcolor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2C_Ret_Chat::set_has_msgcolor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2C_Ret_Chat::clear_has_msgcolor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2C_Ret_Chat::clear_msgcolor() {
  msgcolor_ = 0u;
  clear_has_msgcolor();
}
inline ::google::protobuf::uint32 S2C_Ret_Chat::msgcolor() const {
  return msgcolor_;
}
inline void S2C_Ret_Chat::set_msgcolor(::google::protobuf::uint32 value) {
  set_has_msgcolor();
  msgcolor_ = value;
}

// -------------------------------------------------------------------

// C2S_Change_Scene

// required int64 role_index = 1;
inline bool C2S_Change_Scene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Change_Scene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Change_Scene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Change_Scene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Change_Scene::role_index() const {
  return role_index_;
}
inline void C2S_Change_Scene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required uint32 tar_scene_id = 2;
inline bool C2S_Change_Scene::has_tar_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Change_Scene::set_has_tar_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Change_Scene::clear_has_tar_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Change_Scene::clear_tar_scene_id() {
  tar_scene_id_ = 0u;
  clear_has_tar_scene_id();
}
inline ::google::protobuf::uint32 C2S_Change_Scene::tar_scene_id() const {
  return tar_scene_id_;
}
inline void C2S_Change_Scene::set_tar_scene_id(::google::protobuf::uint32 value) {
  set_has_tar_scene_id();
  tar_scene_id_ = value;
}

// required float pos_x = 3;
inline bool C2S_Change_Scene::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Change_Scene::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Change_Scene::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Change_Scene::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float C2S_Change_Scene::pos_x() const {
  return pos_x_;
}
inline void C2S_Change_Scene::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
}

// required float pos_y = 4;
inline bool C2S_Change_Scene::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Change_Scene::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Change_Scene::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Change_Scene::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float C2S_Change_Scene::pos_y() const {
  return pos_y_;
}
inline void C2S_Change_Scene::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
}

// -------------------------------------------------------------------

// C2S_TransPortChangeScene

// required int64 role_index = 1;
inline bool C2S_TransPortChangeScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_TransPortChangeScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_TransPortChangeScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_TransPortChangeScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_TransPortChangeScene::role_index() const {
  return role_index_;
}
inline void C2S_TransPortChangeScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 transport_id = 2;
inline bool C2S_TransPortChangeScene::has_transport_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_TransPortChangeScene::set_has_transport_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_TransPortChangeScene::clear_has_transport_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_TransPortChangeScene::clear_transport_id() {
  transport_id_ = 0;
  clear_has_transport_id();
}
inline ::google::protobuf::int32 C2S_TransPortChangeScene::transport_id() const {
  return transport_id_;
}
inline void C2S_TransPortChangeScene::set_transport_id(::google::protobuf::int32 value) {
  set_has_transport_id();
  transport_id_ = value;
}

// -------------------------------------------------------------------

// S2C_TransPortChangeScene

// required bytes ret = 1;
inline bool S2C_TransPortChangeScene::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_TransPortChangeScene::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_TransPortChangeScene::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_TransPortChangeScene::clear_ret() {
  if (ret_ != &::google::protobuf::internal::kEmptyString) {
    ret_->clear();
  }
  clear_has_ret();
}
inline const ::std::string& S2C_TransPortChangeScene::ret() const {
  return *ret_;
}
inline void S2C_TransPortChangeScene::set_ret(const ::std::string& value) {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  ret_->assign(value);
}
inline void S2C_TransPortChangeScene::set_ret(const char* value) {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  ret_->assign(value);
}
inline void S2C_TransPortChangeScene::set_ret(const void* value, size_t size) {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  ret_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_TransPortChangeScene::mutable_ret() {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  return ret_;
}
inline ::std::string* S2C_TransPortChangeScene::release_ret() {
  clear_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_;
    ret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_TransPortChangeScene::set_allocated_ret(::std::string* ret) {
  if (ret_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_;
  }
  if (ret) {
    set_has_ret();
    ret_ = ret;
  } else {
    clear_has_ret();
    ret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_TransPortChangeScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_TransPortChangeScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_TransPortChangeScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_TransPortChangeScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_TransPortChangeScene::role_index() const {
  return role_index_;
}
inline void S2C_TransPortChangeScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 transport_id = 3;
inline bool S2C_TransPortChangeScene::has_transport_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_TransPortChangeScene::set_has_transport_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_TransPortChangeScene::clear_has_transport_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_TransPortChangeScene::clear_transport_id() {
  transport_id_ = 0;
  clear_has_transport_id();
}
inline ::google::protobuf::int32 S2C_TransPortChangeScene::transport_id() const {
  return transport_id_;
}
inline void S2C_TransPortChangeScene::set_transport_id(::google::protobuf::int32 value) {
  set_has_transport_id();
  transport_id_ = value;
}

// -------------------------------------------------------------------

// C2S_NPC_ChangeScene

// required int64 role_index = 1;
inline bool C2S_NPC_ChangeScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_NPC_ChangeScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_NPC_ChangeScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_NPC_ChangeScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_NPC_ChangeScene::role_index() const {
  return role_index_;
}
inline void C2S_NPC_ChangeScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 npc_id = 2;
inline bool C2S_NPC_ChangeScene::has_npc_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_NPC_ChangeScene::set_has_npc_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_NPC_ChangeScene::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_NPC_ChangeScene::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 C2S_NPC_ChangeScene::npc_id() const {
  return npc_id_;
}
inline void C2S_NPC_ChangeScene::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// required sint32 scene_type = 3;
inline bool C2S_NPC_ChangeScene::has_scene_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_NPC_ChangeScene::set_has_scene_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_NPC_ChangeScene::clear_has_scene_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_NPC_ChangeScene::clear_scene_type() {
  scene_type_ = 0;
  clear_has_scene_type();
}
inline ::google::protobuf::int32 C2S_NPC_ChangeScene::scene_type() const {
  return scene_type_;
}
inline void C2S_NPC_ChangeScene::set_scene_type(::google::protobuf::int32 value) {
  set_has_scene_type();
  scene_type_ = value;
}

// required sint32 trans_info_id = 4;
inline bool C2S_NPC_ChangeScene::has_trans_info_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_NPC_ChangeScene::set_has_trans_info_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_NPC_ChangeScene::clear_has_trans_info_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_NPC_ChangeScene::clear_trans_info_id() {
  trans_info_id_ = 0;
  clear_has_trans_info_id();
}
inline ::google::protobuf::int32 C2S_NPC_ChangeScene::trans_info_id() const {
  return trans_info_id_;
}
inline void C2S_NPC_ChangeScene::set_trans_info_id(::google::protobuf::int32 value) {
  set_has_trans_info_id();
  trans_info_id_ = value;
}

// -------------------------------------------------------------------

// S2C_NPC_ChangeScene

// required bytes ret = 1;
inline bool S2C_NPC_ChangeScene::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NPC_ChangeScene::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NPC_ChangeScene::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NPC_ChangeScene::clear_ret() {
  if (ret_ != &::google::protobuf::internal::kEmptyString) {
    ret_->clear();
  }
  clear_has_ret();
}
inline const ::std::string& S2C_NPC_ChangeScene::ret() const {
  return *ret_;
}
inline void S2C_NPC_ChangeScene::set_ret(const ::std::string& value) {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  ret_->assign(value);
}
inline void S2C_NPC_ChangeScene::set_ret(const char* value) {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  ret_->assign(value);
}
inline void S2C_NPC_ChangeScene::set_ret(const void* value, size_t size) {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  ret_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_NPC_ChangeScene::mutable_ret() {
  set_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    ret_ = new ::std::string;
  }
  return ret_;
}
inline ::std::string* S2C_NPC_ChangeScene::release_ret() {
  clear_has_ret();
  if (ret_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_;
    ret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_NPC_ChangeScene::set_allocated_ret(::std::string* ret) {
  if (ret_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_;
  }
  if (ret) {
    set_has_ret();
    ret_ = ret;
  } else {
    clear_has_ret();
    ret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_NPC_ChangeScene::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_NPC_ChangeScene::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_NPC_ChangeScene::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_NPC_ChangeScene::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_NPC_ChangeScene::role_index() const {
  return role_index_;
}
inline void S2C_NPC_ChangeScene::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 npc_id = 3;
inline bool S2C_NPC_ChangeScene::has_npc_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_NPC_ChangeScene::set_has_npc_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_NPC_ChangeScene::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_NPC_ChangeScene::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 S2C_NPC_ChangeScene::npc_id() const {
  return npc_id_;
}
inline void S2C_NPC_ChangeScene::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// required sint32 scene_type = 4;
inline bool S2C_NPC_ChangeScene::has_scene_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_NPC_ChangeScene::set_has_scene_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_NPC_ChangeScene::clear_has_scene_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_NPC_ChangeScene::clear_scene_type() {
  scene_type_ = 0;
  clear_has_scene_type();
}
inline ::google::protobuf::int32 S2C_NPC_ChangeScene::scene_type() const {
  return scene_type_;
}
inline void S2C_NPC_ChangeScene::set_scene_type(::google::protobuf::int32 value) {
  set_has_scene_type();
  scene_type_ = value;
}

// -------------------------------------------------------------------

// C2S_Qiecuo_Battle

// required int64 role_index = 1;
inline bool C2S_Qiecuo_Battle::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Qiecuo_Battle::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Qiecuo_Battle::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Qiecuo_Battle::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Qiecuo_Battle::role_index() const {
  return role_index_;
}
inline void C2S_Qiecuo_Battle::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_role_index = 2;
inline bool C2S_Qiecuo_Battle::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Qiecuo_Battle::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Qiecuo_Battle::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Qiecuo_Battle::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 C2S_Qiecuo_Battle::tar_role_index() const {
  return tar_role_index_;
}
inline void C2S_Qiecuo_Battle::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required int64 scene_instance_id = 3;
inline bool C2S_Qiecuo_Battle::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Qiecuo_Battle::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Qiecuo_Battle::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Qiecuo_Battle::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 C2S_Qiecuo_Battle::scene_instance_id() const {
  return scene_instance_id_;
}
inline void C2S_Qiecuo_Battle::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Qiecuo_Battle_Refuse

// required int64 src_role_index = 1;
inline bool S2C_Qiecuo_Battle_Refuse::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Qiecuo_Battle_Refuse::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Qiecuo_Battle_Refuse::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Qiecuo_Battle_Refuse::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Battle_Refuse::src_role_index() const {
  return src_role_index_;
}
inline void S2C_Qiecuo_Battle_Refuse::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required int64 tar_role_index = 2;
inline bool S2C_Qiecuo_Battle_Refuse::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Qiecuo_Battle_Refuse::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Qiecuo_Battle_Refuse::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Qiecuo_Battle_Refuse::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Battle_Refuse::tar_role_index() const {
  return tar_role_index_;
}
inline void S2C_Qiecuo_Battle_Refuse::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Qiecuo_Battle

// required int64 src_role_index = 1;
inline bool S2C_Qiecuo_Battle::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Qiecuo_Battle::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Qiecuo_Battle::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Qiecuo_Battle::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Battle::src_role_index() const {
  return src_role_index_;
}
inline void S2C_Qiecuo_Battle::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required int64 tar_role_index = 2;
inline bool S2C_Qiecuo_Battle::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Qiecuo_Battle::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Qiecuo_Battle::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Qiecuo_Battle::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Battle::tar_role_index() const {
  return tar_role_index_;
}
inline void S2C_Qiecuo_Battle::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required int64 scene_instance_id = 3;
inline bool S2C_Qiecuo_Battle::has_scene_instance_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Qiecuo_Battle::set_has_scene_instance_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Qiecuo_Battle::clear_has_scene_instance_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Qiecuo_Battle::clear_scene_instance_id() {
  scene_instance_id_ = GOOGLE_LONGLONG(0);
  clear_has_scene_instance_id();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Battle::scene_instance_id() const {
  return scene_instance_id_;
}
inline void S2C_Qiecuo_Battle::set_scene_instance_id(::google::protobuf::int64 value) {
  set_has_scene_instance_id();
  scene_instance_id_ = value;
}

// required float new_battle_scene_id = 6;
inline bool S2C_Qiecuo_Battle::has_new_battle_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_Qiecuo_Battle::set_has_new_battle_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_Qiecuo_Battle::clear_has_new_battle_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_Qiecuo_Battle::clear_new_battle_scene_id() {
  new_battle_scene_id_ = 0;
  clear_has_new_battle_scene_id();
}
inline float S2C_Qiecuo_Battle::new_battle_scene_id() const {
  return new_battle_scene_id_;
}
inline void S2C_Qiecuo_Battle::set_new_battle_scene_id(float value) {
  set_has_new_battle_scene_id();
  new_battle_scene_id_ = value;
}

// required sint32 battle_team_id = 7;
inline bool S2C_Qiecuo_Battle::has_battle_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_Qiecuo_Battle::set_has_battle_team_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_Qiecuo_Battle::clear_has_battle_team_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_Qiecuo_Battle::clear_battle_team_id() {
  battle_team_id_ = 0;
  clear_has_battle_team_id();
}
inline ::google::protobuf::int32 S2C_Qiecuo_Battle::battle_team_id() const {
  return battle_team_id_;
}
inline void S2C_Qiecuo_Battle::set_battle_team_id(::google::protobuf::int32 value) {
  set_has_battle_team_id();
  battle_team_id_ = value;
}

// required sint32 battle_pos_id = 8;
inline bool S2C_Qiecuo_Battle::has_battle_pos_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_Qiecuo_Battle::set_has_battle_pos_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_Qiecuo_Battle::clear_has_battle_pos_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_Qiecuo_Battle::clear_battle_pos_id() {
  battle_pos_id_ = 0;
  clear_has_battle_pos_id();
}
inline ::google::protobuf::int32 S2C_Qiecuo_Battle::battle_pos_id() const {
  return battle_pos_id_;
}
inline void S2C_Qiecuo_Battle::set_battle_pos_id(::google::protobuf::int32 value) {
  set_has_battle_pos_id();
  battle_pos_id_ = value;
}

// required int64 battle_index = 9;
inline bool S2C_Qiecuo_Battle::has_battle_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2C_Qiecuo_Battle::set_has_battle_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2C_Qiecuo_Battle::clear_has_battle_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2C_Qiecuo_Battle::clear_battle_index() {
  battle_index_ = GOOGLE_LONGLONG(0);
  clear_has_battle_index();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Battle::battle_index() const {
  return battle_index_;
}
inline void S2C_Qiecuo_Battle::set_battle_index(::google::protobuf::int64 value) {
  set_has_battle_index();
  battle_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Qiecuo_Confirm_Battle

// required int64 src_role_index = 1;
inline bool S2C_Qiecuo_Confirm_Battle::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Qiecuo_Confirm_Battle::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Qiecuo_Confirm_Battle::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Qiecuo_Confirm_Battle::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Confirm_Battle::src_role_index() const {
  return src_role_index_;
}
inline void S2C_Qiecuo_Confirm_Battle::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required int64 tar_role_index = 2;
inline bool S2C_Qiecuo_Confirm_Battle::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Qiecuo_Confirm_Battle::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Qiecuo_Confirm_Battle::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Qiecuo_Confirm_Battle::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2C_Qiecuo_Confirm_Battle::tar_role_index() const {
  return tar_role_index_;
}
inline void S2C_Qiecuo_Confirm_Battle::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// -------------------------------------------------------------------

// C2S_Qiecuo_Confirm_Battle

// required int64 role_index = 1;
inline bool C2S_Qiecuo_Confirm_Battle::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Qiecuo_Confirm_Battle::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Qiecuo_Confirm_Battle::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Qiecuo_Confirm_Battle::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Qiecuo_Confirm_Battle::role_index() const {
  return role_index_;
}
inline void C2S_Qiecuo_Confirm_Battle::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 src_role_index = 2;
inline bool C2S_Qiecuo_Confirm_Battle::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Qiecuo_Confirm_Battle::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Qiecuo_Confirm_Battle::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Qiecuo_Confirm_Battle::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 C2S_Qiecuo_Confirm_Battle::src_role_index() const {
  return src_role_index_;
}
inline void C2S_Qiecuo_Confirm_Battle::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required bool agree = 3;
inline bool C2S_Qiecuo_Confirm_Battle::has_agree() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Qiecuo_Confirm_Battle::set_has_agree() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Qiecuo_Confirm_Battle::clear_has_agree() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Qiecuo_Confirm_Battle::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool C2S_Qiecuo_Confirm_Battle::agree() const {
  return agree_;
}
inline void C2S_Qiecuo_Confirm_Battle::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
}

// -------------------------------------------------------------------

// C2S_Battle_Info

// required int64 role_index = 1;
inline bool C2S_Battle_Info::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Battle_Info::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Battle_Info::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Battle_Info::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Battle_Info::role_index() const {
  return role_index_;
}
inline void C2S_Battle_Info::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 battle_index = 2;
inline bool C2S_Battle_Info::has_battle_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Battle_Info::set_has_battle_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Battle_Info::clear_has_battle_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Battle_Info::clear_battle_index() {
  battle_index_ = GOOGLE_LONGLONG(0);
  clear_has_battle_index();
}
inline ::google::protobuf::int64 C2S_Battle_Info::battle_index() const {
  return battle_index_;
}
inline void C2S_Battle_Info::set_battle_index(::google::protobuf::int64 value) {
  set_has_battle_index();
  battle_index_ = value;
}

// -------------------------------------------------------------------

// Battle_Role_Info

// required int64 role_index = 1;
inline bool Battle_Role_Info::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle_Role_Info::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle_Role_Info::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle_Role_Info::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 Battle_Role_Info::role_index() const {
  return role_index_;
}
inline void Battle_Role_Info::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 battle_pos_id = 2;
inline bool Battle_Role_Info::has_battle_pos_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle_Role_Info::set_has_battle_pos_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle_Role_Info::clear_has_battle_pos_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle_Role_Info::clear_battle_pos_id() {
  battle_pos_id_ = GOOGLE_LONGLONG(0);
  clear_has_battle_pos_id();
}
inline ::google::protobuf::int64 Battle_Role_Info::battle_pos_id() const {
  return battle_pos_id_;
}
inline void Battle_Role_Info::set_battle_pos_id(::google::protobuf::int64 value) {
  set_has_battle_pos_id();
  battle_pos_id_ = value;
}

// required bytes role_type = 3;
inline bool Battle_Role_Info::has_role_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle_Role_Info::set_has_role_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle_Role_Info::clear_has_role_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle_Role_Info::clear_role_type() {
  if (role_type_ != &::google::protobuf::internal::kEmptyString) {
    role_type_->clear();
  }
  clear_has_role_type();
}
inline const ::std::string& Battle_Role_Info::role_type() const {
  return *role_type_;
}
inline void Battle_Role_Info::set_role_type(const ::std::string& value) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(value);
}
inline void Battle_Role_Info::set_role_type(const char* value) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(value);
}
inline void Battle_Role_Info::set_role_type(const void* value, size_t size) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Role_Info::mutable_role_type() {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  return role_type_;
}
inline ::std::string* Battle_Role_Info::release_role_type() {
  clear_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = role_type_;
    role_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Role_Info::set_allocated_role_type(::std::string* role_type) {
  if (role_type_ != &::google::protobuf::internal::kEmptyString) {
    delete role_type_;
  }
  if (role_type) {
    set_has_role_type();
    role_type_ = role_type;
  } else {
    clear_has_role_type();
    role_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes racial = 4;
inline bool Battle_Role_Info::has_racial() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle_Role_Info::set_has_racial() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle_Role_Info::clear_has_racial() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle_Role_Info::clear_racial() {
  if (racial_ != &::google::protobuf::internal::kEmptyString) {
    racial_->clear();
  }
  clear_has_racial();
}
inline const ::std::string& Battle_Role_Info::racial() const {
  return *racial_;
}
inline void Battle_Role_Info::set_racial(const ::std::string& value) {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  racial_->assign(value);
}
inline void Battle_Role_Info::set_racial(const char* value) {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  racial_->assign(value);
}
inline void Battle_Role_Info::set_racial(const void* value, size_t size) {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  racial_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Role_Info::mutable_racial() {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  return racial_;
}
inline ::std::string* Battle_Role_Info::release_racial() {
  clear_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = racial_;
    racial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Role_Info::set_allocated_racial(::std::string* racial) {
  if (racial_ != &::google::protobuf::internal::kEmptyString) {
    delete racial_;
  }
  if (racial) {
    set_has_racial();
    racial_ = racial;
  } else {
    clear_has_racial();
    racial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes nick_name = 5;
inline bool Battle_Role_Info::has_nick_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle_Role_Info::set_has_nick_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle_Role_Info::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle_Role_Info::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Battle_Role_Info::nick_name() const {
  return *nick_name_;
}
inline void Battle_Role_Info::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Battle_Role_Info::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Battle_Role_Info::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Role_Info::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Battle_Role_Info::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Role_Info::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes level = 6;
inline bool Battle_Role_Info::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle_Role_Info::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle_Role_Info::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle_Role_Info::clear_level() {
  if (level_ != &::google::protobuf::internal::kEmptyString) {
    level_->clear();
  }
  clear_has_level();
}
inline const ::std::string& Battle_Role_Info::level() const {
  return *level_;
}
inline void Battle_Role_Info::set_level(const ::std::string& value) {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  level_->assign(value);
}
inline void Battle_Role_Info::set_level(const char* value) {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  level_->assign(value);
}
inline void Battle_Role_Info::set_level(const void* value, size_t size) {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  level_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Role_Info::mutable_level() {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  return level_;
}
inline ::std::string* Battle_Role_Info::release_level() {
  clear_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = level_;
    level_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Role_Info::set_allocated_level(::std::string* level) {
  if (level_ != &::google::protobuf::internal::kEmptyString) {
    delete level_;
  }
  if (level) {
    set_has_level();
    level_ = level;
  } else {
    clear_has_level();
    level_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// S2C_Battle_Info

// required int64 battle_index = 1;
inline bool S2C_Battle_Info::has_battle_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Battle_Info::set_has_battle_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Battle_Info::clear_has_battle_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Battle_Info::clear_battle_index() {
  battle_index_ = GOOGLE_LONGLONG(0);
  clear_has_battle_index();
}
inline ::google::protobuf::int64 S2C_Battle_Info::battle_index() const {
  return battle_index_;
}
inline void S2C_Battle_Info::set_battle_index(::google::protobuf::int64 value) {
  set_has_battle_index();
  battle_index_ = value;
}

// repeated .Battle_Role_Info list_battle_role_infos = 2;
inline int S2C_Battle_Info::list_battle_role_infos_size() const {
  return list_battle_role_infos_.size();
}
inline void S2C_Battle_Info::clear_list_battle_role_infos() {
  list_battle_role_infos_.Clear();
}
inline const ::Battle_Role_Info& S2C_Battle_Info::list_battle_role_infos(int index) const {
  return list_battle_role_infos_.Get(index);
}
inline ::Battle_Role_Info* S2C_Battle_Info::mutable_list_battle_role_infos(int index) {
  return list_battle_role_infos_.Mutable(index);
}
inline ::Battle_Role_Info* S2C_Battle_Info::add_list_battle_role_infos() {
  return list_battle_role_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Battle_Role_Info >&
S2C_Battle_Info::list_battle_role_infos() const {
  return list_battle_role_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Battle_Role_Info >*
S2C_Battle_Info::mutable_list_battle_role_infos() {
  return &list_battle_role_infos_;
}

// -------------------------------------------------------------------

// C2S_Battle_Frame_Info

// required int64 battle_index = 1;
inline bool C2S_Battle_Frame_Info::has_battle_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Battle_Frame_Info::set_has_battle_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Battle_Frame_Info::clear_has_battle_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Battle_Frame_Info::clear_battle_index() {
  battle_index_ = GOOGLE_LONGLONG(0);
  clear_has_battle_index();
}
inline ::google::protobuf::int64 C2S_Battle_Frame_Info::battle_index() const {
  return battle_index_;
}
inline void C2S_Battle_Frame_Info::set_battle_index(::google::protobuf::int64 value) {
  set_has_battle_index();
  battle_index_ = value;
}

// required sint32 battle_frame_index = 2;
inline bool C2S_Battle_Frame_Info::has_battle_frame_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Battle_Frame_Info::set_has_battle_frame_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Battle_Frame_Info::clear_has_battle_frame_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Battle_Frame_Info::clear_battle_frame_index() {
  battle_frame_index_ = 0;
  clear_has_battle_frame_index();
}
inline ::google::protobuf::int32 C2S_Battle_Frame_Info::battle_frame_index() const {
  return battle_frame_index_;
}
inline void C2S_Battle_Frame_Info::set_battle_frame_index(::google::protobuf::int32 value) {
  set_has_battle_frame_index();
  battle_frame_index_ = value;
}

// -------------------------------------------------------------------

// Battle_Frame_Info

// required int64 role_index = 1;
inline bool Battle_Frame_Info::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Battle_Frame_Info::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Battle_Frame_Info::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Battle_Frame_Info::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 Battle_Frame_Info::role_index() const {
  return role_index_;
}
inline void Battle_Frame_Info::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 battle_pos_id = 2;
inline bool Battle_Frame_Info::has_battle_pos_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Battle_Frame_Info::set_has_battle_pos_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Battle_Frame_Info::clear_has_battle_pos_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Battle_Frame_Info::clear_battle_pos_id() {
  battle_pos_id_ = GOOGLE_LONGLONG(0);
  clear_has_battle_pos_id();
}
inline ::google::protobuf::int64 Battle_Frame_Info::battle_pos_id() const {
  return battle_pos_id_;
}
inline void Battle_Frame_Info::set_battle_pos_id(::google::protobuf::int64 value) {
  set_has_battle_pos_id();
  battle_pos_id_ = value;
}

// required bytes role_type = 3;
inline bool Battle_Frame_Info::has_role_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Battle_Frame_Info::set_has_role_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Battle_Frame_Info::clear_has_role_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Battle_Frame_Info::clear_role_type() {
  if (role_type_ != &::google::protobuf::internal::kEmptyString) {
    role_type_->clear();
  }
  clear_has_role_type();
}
inline const ::std::string& Battle_Frame_Info::role_type() const {
  return *role_type_;
}
inline void Battle_Frame_Info::set_role_type(const ::std::string& value) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(value);
}
inline void Battle_Frame_Info::set_role_type(const char* value) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(value);
}
inline void Battle_Frame_Info::set_role_type(const void* value, size_t size) {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  role_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Frame_Info::mutable_role_type() {
  set_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    role_type_ = new ::std::string;
  }
  return role_type_;
}
inline ::std::string* Battle_Frame_Info::release_role_type() {
  clear_has_role_type();
  if (role_type_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = role_type_;
    role_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Frame_Info::set_allocated_role_type(::std::string* role_type) {
  if (role_type_ != &::google::protobuf::internal::kEmptyString) {
    delete role_type_;
  }
  if (role_type) {
    set_has_role_type();
    role_type_ = role_type;
  } else {
    clear_has_role_type();
    role_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes racial = 4;
inline bool Battle_Frame_Info::has_racial() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Battle_Frame_Info::set_has_racial() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Battle_Frame_Info::clear_has_racial() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Battle_Frame_Info::clear_racial() {
  if (racial_ != &::google::protobuf::internal::kEmptyString) {
    racial_->clear();
  }
  clear_has_racial();
}
inline const ::std::string& Battle_Frame_Info::racial() const {
  return *racial_;
}
inline void Battle_Frame_Info::set_racial(const ::std::string& value) {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  racial_->assign(value);
}
inline void Battle_Frame_Info::set_racial(const char* value) {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  racial_->assign(value);
}
inline void Battle_Frame_Info::set_racial(const void* value, size_t size) {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  racial_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Frame_Info::mutable_racial() {
  set_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    racial_ = new ::std::string;
  }
  return racial_;
}
inline ::std::string* Battle_Frame_Info::release_racial() {
  clear_has_racial();
  if (racial_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = racial_;
    racial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Frame_Info::set_allocated_racial(::std::string* racial) {
  if (racial_ != &::google::protobuf::internal::kEmptyString) {
    delete racial_;
  }
  if (racial) {
    set_has_racial();
    racial_ = racial;
  } else {
    clear_has_racial();
    racial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes nick_name = 5;
inline bool Battle_Frame_Info::has_nick_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Battle_Frame_Info::set_has_nick_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Battle_Frame_Info::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Battle_Frame_Info::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& Battle_Frame_Info::nick_name() const {
  return *nick_name_;
}
inline void Battle_Frame_Info::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Battle_Frame_Info::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void Battle_Frame_Info::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Frame_Info::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* Battle_Frame_Info::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Frame_Info::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes level = 6;
inline bool Battle_Frame_Info::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Battle_Frame_Info::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Battle_Frame_Info::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Battle_Frame_Info::clear_level() {
  if (level_ != &::google::protobuf::internal::kEmptyString) {
    level_->clear();
  }
  clear_has_level();
}
inline const ::std::string& Battle_Frame_Info::level() const {
  return *level_;
}
inline void Battle_Frame_Info::set_level(const ::std::string& value) {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  level_->assign(value);
}
inline void Battle_Frame_Info::set_level(const char* value) {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  level_->assign(value);
}
inline void Battle_Frame_Info::set_level(const void* value, size_t size) {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  level_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Battle_Frame_Info::mutable_level() {
  set_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    level_ = new ::std::string;
  }
  return level_;
}
inline ::std::string* Battle_Frame_Info::release_level() {
  clear_has_level();
  if (level_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = level_;
    level_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Battle_Frame_Info::set_allocated_level(::std::string* level) {
  if (level_ != &::google::protobuf::internal::kEmptyString) {
    delete level_;
  }
  if (level) {
    set_has_level();
    level_ = level;
  } else {
    clear_has_level();
    level_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// S2C_Battle_Frame_Info

// required int64 battle_index = 1;
inline bool S2C_Battle_Frame_Info::has_battle_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Battle_Frame_Info::set_has_battle_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Battle_Frame_Info::clear_has_battle_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Battle_Frame_Info::clear_battle_index() {
  battle_index_ = GOOGLE_LONGLONG(0);
  clear_has_battle_index();
}
inline ::google::protobuf::int64 S2C_Battle_Frame_Info::battle_index() const {
  return battle_index_;
}
inline void S2C_Battle_Frame_Info::set_battle_index(::google::protobuf::int64 value) {
  set_has_battle_index();
  battle_index_ = value;
}

// required sint32 battle_frame_index = 2;
inline bool S2C_Battle_Frame_Info::has_battle_frame_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Battle_Frame_Info::set_has_battle_frame_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Battle_Frame_Info::clear_has_battle_frame_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Battle_Frame_Info::clear_battle_frame_index() {
  battle_frame_index_ = 0;
  clear_has_battle_frame_index();
}
inline ::google::protobuf::int32 S2C_Battle_Frame_Info::battle_frame_index() const {
  return battle_frame_index_;
}
inline void S2C_Battle_Frame_Info::set_battle_frame_index(::google::protobuf::int32 value) {
  set_has_battle_frame_index();
  battle_frame_index_ = value;
}

// required .Battle_Frame_Info battle_frame_info = 3;
inline bool S2C_Battle_Frame_Info::has_battle_frame_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Battle_Frame_Info::set_has_battle_frame_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Battle_Frame_Info::clear_has_battle_frame_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Battle_Frame_Info::clear_battle_frame_info() {
  if (battle_frame_info_ != nullptr) battle_frame_info_->::Battle_Frame_Info::Clear();
  clear_has_battle_frame_info();
}
inline const ::Battle_Frame_Info& S2C_Battle_Frame_Info::battle_frame_info() const {
  return battle_frame_info_ != nullptr ? *battle_frame_info_ : *default_instance_->battle_frame_info_;
}
inline ::Battle_Frame_Info* S2C_Battle_Frame_Info::mutable_battle_frame_info() {
  set_has_battle_frame_info();
  if (battle_frame_info_ == nullptr) battle_frame_info_ = new ::Battle_Frame_Info;
  return battle_frame_info_;
}
inline ::Battle_Frame_Info* S2C_Battle_Frame_Info::release_battle_frame_info() {
  clear_has_battle_frame_info();
  ::Battle_Frame_Info* temp = battle_frame_info_;
  battle_frame_info_ = nullptr;
  return temp;
}
inline void S2C_Battle_Frame_Info::set_allocated_battle_frame_info(::Battle_Frame_Info* battle_frame_info) {
  delete battle_frame_info_;
  battle_frame_info_ = battle_frame_info;
  if (battle_frame_info) {
    set_has_battle_frame_info();
  } else {
    clear_has_battle_frame_info();
  }
}

// -------------------------------------------------------------------

// S2C_Avatar_Goods_List

// repeated .GameShopAvatarInfo list_avatar_info = 1;
inline int S2C_Avatar_Goods_List::list_avatar_info_size() const {
  return list_avatar_info_.size();
}
inline void S2C_Avatar_Goods_List::clear_list_avatar_info() {
  list_avatar_info_.Clear();
}
inline const ::GameShopAvatarInfo& S2C_Avatar_Goods_List::list_avatar_info(int index) const {
  return list_avatar_info_.Get(index);
}
inline ::GameShopAvatarInfo* S2C_Avatar_Goods_List::mutable_list_avatar_info(int index) {
  return list_avatar_info_.Mutable(index);
}
inline ::GameShopAvatarInfo* S2C_Avatar_Goods_List::add_list_avatar_info() {
  return list_avatar_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameShopAvatarInfo >&
S2C_Avatar_Goods_List::list_avatar_info() const {
  return list_avatar_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::GameShopAvatarInfo >*
S2C_Avatar_Goods_List::mutable_list_avatar_info() {
  return &list_avatar_info_;
}

// -------------------------------------------------------------------

// C2S_Buy_Avatar_Goods

// required .GameShopAvatarInfo list_avatar_info = 1;
inline bool C2S_Buy_Avatar_Goods::has_list_avatar_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Buy_Avatar_Goods::set_has_list_avatar_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Buy_Avatar_Goods::clear_has_list_avatar_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Buy_Avatar_Goods::clear_list_avatar_info() {
  if (list_avatar_info_ != nullptr) list_avatar_info_->::GameShopAvatarInfo::Clear();
  clear_has_list_avatar_info();
}
inline const ::GameShopAvatarInfo& C2S_Buy_Avatar_Goods::list_avatar_info() const {
  return list_avatar_info_ != nullptr ? *list_avatar_info_ : *default_instance_->list_avatar_info_;
}
inline ::GameShopAvatarInfo* C2S_Buy_Avatar_Goods::mutable_list_avatar_info() {
  set_has_list_avatar_info();
  if (list_avatar_info_ == nullptr) list_avatar_info_ = new ::GameShopAvatarInfo;
  return list_avatar_info_;
}
inline ::GameShopAvatarInfo* C2S_Buy_Avatar_Goods::release_list_avatar_info() {
  clear_has_list_avatar_info();
  ::GameShopAvatarInfo* temp = list_avatar_info_;
  list_avatar_info_ = nullptr;
  return temp;
}
inline void C2S_Buy_Avatar_Goods::set_allocated_list_avatar_info(::GameShopAvatarInfo* list_avatar_info) {
  delete list_avatar_info_;
  list_avatar_info_ = list_avatar_info;
  if (list_avatar_info) {
    set_has_list_avatar_info();
  } else {
    clear_has_list_avatar_info();
  }
}

// -------------------------------------------------------------------

// S2C_Buy_Avatar_Goods

// required bytes ret_code = 1;
inline bool S2C_Buy_Avatar_Goods::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Buy_Avatar_Goods::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Buy_Avatar_Goods::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Buy_Avatar_Goods::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Buy_Avatar_Goods::ret_code() const {
  return *ret_code_;
}
inline void S2C_Buy_Avatar_Goods::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Buy_Avatar_Goods::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Buy_Avatar_Goods::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Buy_Avatar_Goods::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Buy_Avatar_Goods::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Buy_Avatar_Goods::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .GameShopAvatarInfo list_avatar_info = 2;
inline bool S2C_Buy_Avatar_Goods::has_list_avatar_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Buy_Avatar_Goods::set_has_list_avatar_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Buy_Avatar_Goods::clear_has_list_avatar_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Buy_Avatar_Goods::clear_list_avatar_info() {
  if (list_avatar_info_ != nullptr) list_avatar_info_->::GameShopAvatarInfo::Clear();
  clear_has_list_avatar_info();
}
inline const ::GameShopAvatarInfo& S2C_Buy_Avatar_Goods::list_avatar_info() const {
  return list_avatar_info_ != nullptr ? *list_avatar_info_ : *default_instance_->list_avatar_info_;
}
inline ::GameShopAvatarInfo* S2C_Buy_Avatar_Goods::mutable_list_avatar_info() {
  set_has_list_avatar_info();
  if (list_avatar_info_ == nullptr) list_avatar_info_ = new ::GameShopAvatarInfo;
  return list_avatar_info_;
}
inline ::GameShopAvatarInfo* S2C_Buy_Avatar_Goods::release_list_avatar_info() {
  clear_has_list_avatar_info();
  ::GameShopAvatarInfo* temp = list_avatar_info_;
  list_avatar_info_ = nullptr;
  return temp;
}
inline void S2C_Buy_Avatar_Goods::set_allocated_list_avatar_info(::GameShopAvatarInfo* list_avatar_info) {
  delete list_avatar_info_;
  list_avatar_info_ = list_avatar_info;
  if (list_avatar_info) {
    set_has_list_avatar_info();
  } else {
    clear_has_list_avatar_info();
  }
}

// -------------------------------------------------------------------

// C2S_Bag_Item

// required int64 role_index = 1;
inline bool C2S_Bag_Item::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Bag_Item::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Bag_Item::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Bag_Item::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Bag_Item::role_index() const {
  return role_index_;
}
inline void C2S_Bag_Item::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_Role_Bag_Item

// required int64 game_coin = 1;
inline bool S2C_Sync_Role_Bag_Item::has_game_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_Role_Bag_Item::set_has_game_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_Role_Bag_Item::clear_has_game_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_Role_Bag_Item::clear_game_coin() {
  game_coin_ = GOOGLE_LONGLONG(0);
  clear_has_game_coin();
}
inline ::google::protobuf::int64 S2C_Sync_Role_Bag_Item::game_coin() const {
  return game_coin_;
}
inline void S2C_Sync_Role_Bag_Item::set_game_coin(::google::protobuf::int64 value) {
  set_has_game_coin();
  game_coin_ = value;
}

// required int64 game_Deposit = 2;
inline bool S2C_Sync_Role_Bag_Item::has_game_deposit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Sync_Role_Bag_Item::set_has_game_deposit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Sync_Role_Bag_Item::clear_has_game_deposit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Sync_Role_Bag_Item::clear_game_deposit() {
  game_deposit_ = GOOGLE_LONGLONG(0);
  clear_has_game_deposit();
}
inline ::google::protobuf::int64 S2C_Sync_Role_Bag_Item::game_deposit() const {
  return game_deposit_;
}
inline void S2C_Sync_Role_Bag_Item::set_game_deposit(::google::protobuf::int64 value) {
  set_has_game_deposit();
  game_deposit_ = value;
}

// required .universal_data game_bag = 3;
inline bool S2C_Sync_Role_Bag_Item::has_game_bag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Sync_Role_Bag_Item::set_has_game_bag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Sync_Role_Bag_Item::clear_has_game_bag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Sync_Role_Bag_Item::clear_game_bag() {
  if (game_bag_ != nullptr) game_bag_->::universal_data::Clear();
  clear_has_game_bag();
}
inline const ::universal_data& S2C_Sync_Role_Bag_Item::game_bag() const {
  return game_bag_ != nullptr ? *game_bag_ : *default_instance_->game_bag_;
}
inline ::universal_data* S2C_Sync_Role_Bag_Item::mutable_game_bag() {
  set_has_game_bag();
  if (game_bag_ == nullptr) game_bag_ = new ::universal_data;
  return game_bag_;
}
inline ::universal_data* S2C_Sync_Role_Bag_Item::release_game_bag() {
  clear_has_game_bag();
  ::universal_data* temp = game_bag_;
  game_bag_ = nullptr;
  return temp;
}
inline void S2C_Sync_Role_Bag_Item::set_allocated_game_bag(::universal_data* game_bag) {
  delete game_bag_;
  game_bag_ = game_bag;
  if (game_bag) {
    set_has_game_bag();
  } else {
    clear_has_game_bag();
  }
}

// -------------------------------------------------------------------

// C2S_Bag_MoveItem

// required int64 role_index = 1;
inline bool C2S_Bag_MoveItem::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Bag_MoveItem::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Bag_MoveItem::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Bag_MoveItem::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Bag_MoveItem::role_index() const {
  return role_index_;
}
inline void C2S_Bag_MoveItem::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 src_item_index = 2;
inline bool C2S_Bag_MoveItem::has_src_item_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Bag_MoveItem::set_has_src_item_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Bag_MoveItem::clear_has_src_item_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Bag_MoveItem::clear_src_item_index() {
  src_item_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_item_index();
}
inline ::google::protobuf::int64 C2S_Bag_MoveItem::src_item_index() const {
  return src_item_index_;
}
inline void C2S_Bag_MoveItem::set_src_item_index(::google::protobuf::int64 value) {
  set_has_src_item_index();
  src_item_index_ = value;
}

// required sint32 src_item_pos = 3;
inline bool C2S_Bag_MoveItem::has_src_item_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Bag_MoveItem::set_has_src_item_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Bag_MoveItem::clear_has_src_item_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Bag_MoveItem::clear_src_item_pos() {
  src_item_pos_ = 0;
  clear_has_src_item_pos();
}
inline ::google::protobuf::int32 C2S_Bag_MoveItem::src_item_pos() const {
  return src_item_pos_;
}
inline void C2S_Bag_MoveItem::set_src_item_pos(::google::protobuf::int32 value) {
  set_has_src_item_pos();
  src_item_pos_ = value;
}

// required sint32 tar_item_pos = 4;
inline bool C2S_Bag_MoveItem::has_tar_item_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Bag_MoveItem::set_has_tar_item_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Bag_MoveItem::clear_has_tar_item_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Bag_MoveItem::clear_tar_item_pos() {
  tar_item_pos_ = 0;
  clear_has_tar_item_pos();
}
inline ::google::protobuf::int32 C2S_Bag_MoveItem::tar_item_pos() const {
  return tar_item_pos_;
}
inline void C2S_Bag_MoveItem::set_tar_item_pos(::google::protobuf::int32 value) {
  set_has_tar_item_pos();
  tar_item_pos_ = value;
}

// -------------------------------------------------------------------

// C2S_Use_Item

// required int64 role_index = 1;
inline bool C2S_Use_Item::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Use_Item::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Use_Item::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Use_Item::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Use_Item::role_index() const {
  return role_index_;
}
inline void C2S_Use_Item::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 bag_pos = 2;
inline bool C2S_Use_Item::has_bag_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Use_Item::set_has_bag_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Use_Item::clear_has_bag_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Use_Item::clear_bag_pos() {
  bag_pos_ = 0;
  clear_has_bag_pos();
}
inline ::google::protobuf::int32 C2S_Use_Item::bag_pos() const {
  return bag_pos_;
}
inline void C2S_Use_Item::set_bag_pos(::google::protobuf::int32 value) {
  set_has_bag_pos();
  bag_pos_ = value;
}

// required int64 item_index = 3;
inline bool C2S_Use_Item::has_item_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Use_Item::set_has_item_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Use_Item::clear_has_item_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Use_Item::clear_item_index() {
  item_index_ = GOOGLE_LONGLONG(0);
  clear_has_item_index();
}
inline ::google::protobuf::int64 C2S_Use_Item::item_index() const {
  return item_index_;
}
inline void C2S_Use_Item::set_item_index(::google::protobuf::int64 value) {
  set_has_item_index();
  item_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Use_Item

// required bytes ret_code = 1;
inline bool S2C_Use_Item::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Use_Item::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Use_Item::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Use_Item::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Use_Item::ret_code() const {
  return *ret_code_;
}
inline void S2C_Use_Item::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Use_Item::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Use_Item::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Use_Item::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Use_Item::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Use_Item::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint32 bag_pos = 2;
inline bool S2C_Use_Item::has_bag_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Use_Item::set_has_bag_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Use_Item::clear_has_bag_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Use_Item::clear_bag_pos() {
  bag_pos_ = 0;
  clear_has_bag_pos();
}
inline ::google::protobuf::int32 S2C_Use_Item::bag_pos() const {
  return bag_pos_;
}
inline void S2C_Use_Item::set_bag_pos(::google::protobuf::int32 value) {
  set_has_bag_pos();
  bag_pos_ = value;
}

// required int64 item_index = 3;
inline bool S2C_Use_Item::has_item_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Use_Item::set_has_item_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Use_Item::clear_has_item_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Use_Item::clear_item_index() {
  item_index_ = GOOGLE_LONGLONG(0);
  clear_has_item_index();
}
inline ::google::protobuf::int64 S2C_Use_Item::item_index() const {
  return item_index_;
}
inline void S2C_Use_Item::set_item_index(::google::protobuf::int64 value) {
  set_has_item_index();
  item_index_ = value;
}

// -------------------------------------------------------------------

// C2S_Role_Equip

// required int64 role_index = 1;
inline bool C2S_Role_Equip::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Role_Equip::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Role_Equip::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Role_Equip::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Role_Equip::role_index() const {
  return role_index_;
}
inline void C2S_Role_Equip::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Role_Equip

// required int64 role_index = 1;
inline bool S2C_Role_Equip::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Role_Equip::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Role_Equip::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Role_Equip::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Role_Equip::role_index() const {
  return role_index_;
}
inline void S2C_Role_Equip::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .dict_item equips = 2;
inline bool S2C_Role_Equip::has_equips() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Role_Equip::set_has_equips() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Role_Equip::clear_has_equips() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Role_Equip::clear_equips() {
  if (equips_ != nullptr) equips_->::dict_item::Clear();
  clear_has_equips();
}
inline const ::dict_item& S2C_Role_Equip::equips() const {
  return equips_ != nullptr ? *equips_ : *default_instance_->equips_;
}
inline ::dict_item* S2C_Role_Equip::mutable_equips() {
  set_has_equips();
  if (equips_ == nullptr) equips_ = new ::dict_item;
  return equips_;
}
inline ::dict_item* S2C_Role_Equip::release_equips() {
  clear_has_equips();
  ::dict_item* temp = equips_;
  equips_ = nullptr;
  return temp;
}
inline void S2C_Role_Equip::set_allocated_equips(::dict_item* equips) {
  delete equips_;
  equips_ = equips;
  if (equips) {
    set_has_equips();
  } else {
    clear_has_equips();
  }
}

// -------------------------------------------------------------------

// C2S_TakeOff_Equip

// required int64 role_index = 1;
inline bool C2S_TakeOff_Equip::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_TakeOff_Equip::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_TakeOff_Equip::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_TakeOff_Equip::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_TakeOff_Equip::role_index() const {
  return role_index_;
}
inline void C2S_TakeOff_Equip::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 equip_index = 2;
inline bool C2S_TakeOff_Equip::has_equip_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_TakeOff_Equip::set_has_equip_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_TakeOff_Equip::clear_has_equip_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_TakeOff_Equip::clear_equip_index() {
  equip_index_ = GOOGLE_LONGLONG(0);
  clear_has_equip_index();
}
inline ::google::protobuf::int64 C2S_TakeOff_Equip::equip_index() const {
  return equip_index_;
}
inline void C2S_TakeOff_Equip::set_equip_index(::google::protobuf::int64 value) {
  set_has_equip_index();
  equip_index_ = value;
}

// required sint32 equip_pos_type = 3;
inline bool C2S_TakeOff_Equip::has_equip_pos_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_TakeOff_Equip::set_has_equip_pos_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_TakeOff_Equip::clear_has_equip_pos_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_TakeOff_Equip::clear_equip_pos_type() {
  equip_pos_type_ = 0;
  clear_has_equip_pos_type();
}
inline ::google::protobuf::int32 C2S_TakeOff_Equip::equip_pos_type() const {
  return equip_pos_type_;
}
inline void C2S_TakeOff_Equip::set_equip_pos_type(::google::protobuf::int32 value) {
  set_has_equip_pos_type();
  equip_pos_type_ = value;
}

// -------------------------------------------------------------------

// S2C_TakeOff_Equip

// required bytes ret_code = 1;
inline bool S2C_TakeOff_Equip::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_TakeOff_Equip::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_TakeOff_Equip::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_TakeOff_Equip::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_TakeOff_Equip::ret_code() const {
  return *ret_code_;
}
inline void S2C_TakeOff_Equip::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_TakeOff_Equip::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_TakeOff_Equip::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_TakeOff_Equip::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_TakeOff_Equip::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_TakeOff_Equip::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 equip_index = 2;
inline bool S2C_TakeOff_Equip::has_equip_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_TakeOff_Equip::set_has_equip_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_TakeOff_Equip::clear_has_equip_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_TakeOff_Equip::clear_equip_index() {
  equip_index_ = GOOGLE_LONGLONG(0);
  clear_has_equip_index();
}
inline ::google::protobuf::int64 S2C_TakeOff_Equip::equip_index() const {
  return equip_index_;
}
inline void S2C_TakeOff_Equip::set_equip_index(::google::protobuf::int64 value) {
  set_has_equip_index();
  equip_index_ = value;
}

// required sint32 equip_pos_type = 3;
inline bool S2C_TakeOff_Equip::has_equip_pos_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_TakeOff_Equip::set_has_equip_pos_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_TakeOff_Equip::clear_has_equip_pos_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_TakeOff_Equip::clear_equip_pos_type() {
  equip_pos_type_ = 0;
  clear_has_equip_pos_type();
}
inline ::google::protobuf::int32 S2C_TakeOff_Equip::equip_pos_type() const {
  return equip_pos_type_;
}
inline void S2C_TakeOff_Equip::set_equip_pos_type(::google::protobuf::int32 value) {
  set_has_equip_pos_type();
  equip_pos_type_ = value;
}

// -------------------------------------------------------------------

// S2C_Bag_Item_Insert

// required .item item_info = 1;
inline bool S2C_Bag_Item_Insert::has_item_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Bag_Item_Insert::set_has_item_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Bag_Item_Insert::clear_has_item_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Bag_Item_Insert::clear_item_info() {
  if (item_info_ != nullptr) item_info_->::item::Clear();
  clear_has_item_info();
}
inline const ::item& S2C_Bag_Item_Insert::item_info() const {
  return item_info_ != nullptr ? *item_info_ : *default_instance_->item_info_;
}
inline ::item* S2C_Bag_Item_Insert::mutable_item_info() {
  set_has_item_info();
  if (item_info_ == nullptr) item_info_ = new ::item;
  return item_info_;
}
inline ::item* S2C_Bag_Item_Insert::release_item_info() {
  clear_has_item_info();
  ::item* temp = item_info_;
  item_info_ = nullptr;
  return temp;
}
inline void S2C_Bag_Item_Insert::set_allocated_item_info(::item* item_info) {
  delete item_info_;
  item_info_ = item_info;
  if (item_info) {
    set_has_item_info();
  } else {
    clear_has_item_info();
  }
}

// -------------------------------------------------------------------

// S2C_Bag_Item_Remove

// required .item item_info = 1;
inline bool S2C_Bag_Item_Remove::has_item_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Bag_Item_Remove::set_has_item_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Bag_Item_Remove::clear_has_item_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Bag_Item_Remove::clear_item_info() {
  if (item_info_ != nullptr) item_info_->::item::Clear();
  clear_has_item_info();
}
inline const ::item& S2C_Bag_Item_Remove::item_info() const {
  return item_info_ != nullptr ? *item_info_ : *default_instance_->item_info_;
}
inline ::item* S2C_Bag_Item_Remove::mutable_item_info() {
  set_has_item_info();
  if (item_info_ == nullptr) item_info_ = new ::item;
  return item_info_;
}
inline ::item* S2C_Bag_Item_Remove::release_item_info() {
  clear_has_item_info();
  ::item* temp = item_info_;
  item_info_ = nullptr;
  return temp;
}
inline void S2C_Bag_Item_Remove::set_allocated_item_info(::item* item_info) {
  delete item_info_;
  item_info_ = item_info;
  if (item_info) {
    set_has_item_info();
  } else {
    clear_has_item_info();
  }
}

// -------------------------------------------------------------------

// C2S_SuitShopInfo

// required int64 role_index = 1;
inline bool C2S_SuitShopInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_SuitShopInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_SuitShopInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_SuitShopInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_SuitShopInfo::role_index() const {
  return role_index_;
}
inline void C2S_SuitShopInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_SuitShopInfo

// required int64 role_index = 1;
inline bool S2C_SuitShopInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_SuitShopInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_SuitShopInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_SuitShopInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_SuitShopInfo::role_index() const {
  return role_index_;
}
inline void S2C_SuitShopInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// repeated .suit_goods_info list_buy_suit = 2;
inline int S2C_SuitShopInfo::list_buy_suit_size() const {
  return list_buy_suit_.size();
}
inline void S2C_SuitShopInfo::clear_list_buy_suit() {
  list_buy_suit_.Clear();
}
inline const ::suit_goods_info& S2C_SuitShopInfo::list_buy_suit(int index) const {
  return list_buy_suit_.Get(index);
}
inline ::suit_goods_info* S2C_SuitShopInfo::mutable_list_buy_suit(int index) {
  return list_buy_suit_.Mutable(index);
}
inline ::suit_goods_info* S2C_SuitShopInfo::add_list_buy_suit() {
  return list_buy_suit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::suit_goods_info >&
S2C_SuitShopInfo::list_buy_suit() const {
  return list_buy_suit_;
}
inline ::google::protobuf::RepeatedPtrField< ::suit_goods_info >*
S2C_SuitShopInfo::mutable_list_buy_suit() {
  return &list_buy_suit_;
}

// required int64 suit_shop_surplus_update_time = 3;
inline bool S2C_SuitShopInfo::has_suit_shop_surplus_update_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_SuitShopInfo::set_has_suit_shop_surplus_update_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_SuitShopInfo::clear_has_suit_shop_surplus_update_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_SuitShopInfo::clear_suit_shop_surplus_update_time() {
  suit_shop_surplus_update_time_ = GOOGLE_LONGLONG(0);
  clear_has_suit_shop_surplus_update_time();
}
inline ::google::protobuf::int64 S2C_SuitShopInfo::suit_shop_surplus_update_time() const {
  return suit_shop_surplus_update_time_;
}
inline void S2C_SuitShopInfo::set_suit_shop_surplus_update_time(::google::protobuf::int64 value) {
  set_has_suit_shop_surplus_update_time();
  suit_shop_surplus_update_time_ = value;
}

// -------------------------------------------------------------------

// C2S_BuySuitInShop

// required int64 role_index = 1;
inline bool C2S_BuySuitInShop::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BuySuitInShop::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BuySuitInShop::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BuySuitInShop::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_BuySuitInShop::role_index() const {
  return role_index_;
}
inline void C2S_BuySuitInShop::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 suit_shop_id = 2;
inline bool C2S_BuySuitInShop::has_suit_shop_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_BuySuitInShop::set_has_suit_shop_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_BuySuitInShop::clear_has_suit_shop_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_BuySuitInShop::clear_suit_shop_id() {
  suit_shop_id_ = 0;
  clear_has_suit_shop_id();
}
inline ::google::protobuf::int32 C2S_BuySuitInShop::suit_shop_id() const {
  return suit_shop_id_;
}
inline void C2S_BuySuitInShop::set_suit_shop_id(::google::protobuf::int32 value) {
  set_has_suit_shop_id();
  suit_shop_id_ = value;
}

// required sint32 suit_duration = 3;
inline bool C2S_BuySuitInShop::has_suit_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_BuySuitInShop::set_has_suit_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_BuySuitInShop::clear_has_suit_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_BuySuitInShop::clear_suit_duration() {
  suit_duration_ = 0;
  clear_has_suit_duration();
}
inline ::google::protobuf::int32 C2S_BuySuitInShop::suit_duration() const {
  return suit_duration_;
}
inline void C2S_BuySuitInShop::set_suit_duration(::google::protobuf::int32 value) {
  set_has_suit_duration();
  suit_duration_ = value;
}

// -------------------------------------------------------------------

// S2C_BuySuitInShop

// required bytes ret_code = 1;
inline bool S2C_BuySuitInShop::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BuySuitInShop::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BuySuitInShop::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BuySuitInShop::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_BuySuitInShop::ret_code() const {
  return *ret_code_;
}
inline void S2C_BuySuitInShop::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_BuySuitInShop::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_BuySuitInShop::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_BuySuitInShop::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_BuySuitInShop::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_BuySuitInShop::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_BuySuitInShop::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BuySuitInShop::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BuySuitInShop::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BuySuitInShop::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_BuySuitInShop::role_index() const {
  return role_index_;
}
inline void S2C_BuySuitInShop::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 suit_shop_id = 3;
inline bool S2C_BuySuitInShop::has_suit_shop_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_BuySuitInShop::set_has_suit_shop_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_BuySuitInShop::clear_has_suit_shop_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_BuySuitInShop::clear_suit_shop_id() {
  suit_shop_id_ = 0;
  clear_has_suit_shop_id();
}
inline ::google::protobuf::int32 S2C_BuySuitInShop::suit_shop_id() const {
  return suit_shop_id_;
}
inline void S2C_BuySuitInShop::set_suit_shop_id(::google::protobuf::int32 value) {
  set_has_suit_shop_id();
  suit_shop_id_ = value;
}

// required sint32 suit_duration = 4;
inline bool S2C_BuySuitInShop::has_suit_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_BuySuitInShop::set_has_suit_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_BuySuitInShop::clear_has_suit_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_BuySuitInShop::clear_suit_duration() {
  suit_duration_ = 0;
  clear_has_suit_duration();
}
inline ::google::protobuf::int32 S2C_BuySuitInShop::suit_duration() const {
  return suit_duration_;
}
inline void S2C_BuySuitInShop::set_suit_duration(::google::protobuf::int32 value) {
  set_has_suit_duration();
  suit_duration_ = value;
}

// -------------------------------------------------------------------

// C2S_RoleSuitInfo

// required int64 role_index = 1;
inline bool C2S_RoleSuitInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_RoleSuitInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_RoleSuitInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_RoleSuitInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_RoleSuitInfo::role_index() const {
  return role_index_;
}
inline void C2S_RoleSuitInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_RoleSuitInfo

// required int64 role_index = 1;
inline bool S2C_RoleSuitInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_RoleSuitInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_RoleSuitInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_RoleSuitInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_RoleSuitInfo::role_index() const {
  return role_index_;
}
inline void S2C_RoleSuitInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .list_role_suit_info role_suit_info = 3;
inline bool S2C_RoleSuitInfo::has_role_suit_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_RoleSuitInfo::set_has_role_suit_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_RoleSuitInfo::clear_has_role_suit_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_RoleSuitInfo::clear_role_suit_info() {
  if (role_suit_info_ != nullptr) role_suit_info_->::list_role_suit_info::Clear();
  clear_has_role_suit_info();
}
inline const ::list_role_suit_info& S2C_RoleSuitInfo::role_suit_info() const {
  return role_suit_info_ != nullptr ? *role_suit_info_ : *default_instance_->role_suit_info_;
}
inline ::list_role_suit_info* S2C_RoleSuitInfo::mutable_role_suit_info() {
  set_has_role_suit_info();
  if (role_suit_info_ == nullptr) role_suit_info_ = new ::list_role_suit_info;
  return role_suit_info_;
}
inline ::list_role_suit_info* S2C_RoleSuitInfo::release_role_suit_info() {
  clear_has_role_suit_info();
  ::list_role_suit_info* temp = role_suit_info_;
  role_suit_info_ = nullptr;
  return temp;
}
inline void S2C_RoleSuitInfo::set_allocated_role_suit_info(::list_role_suit_info* role_suit_info) {
  delete role_suit_info_;
  role_suit_info_ = role_suit_info;
  if (role_suit_info) {
    set_has_role_suit_info();
  } else {
    clear_has_role_suit_info();
  }
}

// -------------------------------------------------------------------

// C2S_DressSuit

// required int64 role_index = 1;
inline bool C2S_DressSuit::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_DressSuit::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_DressSuit::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_DressSuit::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_DressSuit::role_index() const {
  return role_index_;
}
inline void C2S_DressSuit::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 suit_id = 2;
inline bool C2S_DressSuit::has_suit_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_DressSuit::set_has_suit_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_DressSuit::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_DressSuit::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
inline ::google::protobuf::int32 C2S_DressSuit::suit_id() const {
  return suit_id_;
}
inline void C2S_DressSuit::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// -------------------------------------------------------------------

// S2C_DressSuit

// required bytes ret_code = 1;
inline bool S2C_DressSuit::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_DressSuit::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_DressSuit::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_DressSuit::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_DressSuit::ret_code() const {
  return *ret_code_;
}
inline void S2C_DressSuit::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_DressSuit::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_DressSuit::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_DressSuit::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_DressSuit::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_DressSuit::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_DressSuit::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_DressSuit::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_DressSuit::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_DressSuit::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_DressSuit::role_index() const {
  return role_index_;
}
inline void S2C_DressSuit::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 suit_id = 3;
inline bool S2C_DressSuit::has_suit_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_DressSuit::set_has_suit_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_DressSuit::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_DressSuit::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
inline ::google::protobuf::int32 S2C_DressSuit::suit_id() const {
  return suit_id_;
}
inline void S2C_DressSuit::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// -------------------------------------------------------------------

// C2S_TakeOffSuit

// required int64 role_index = 1;
inline bool C2S_TakeOffSuit::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_TakeOffSuit::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_TakeOffSuit::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_TakeOffSuit::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_TakeOffSuit::role_index() const {
  return role_index_;
}
inline void C2S_TakeOffSuit::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 suit_id = 2;
inline bool C2S_TakeOffSuit::has_suit_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_TakeOffSuit::set_has_suit_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_TakeOffSuit::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_TakeOffSuit::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
inline ::google::protobuf::int32 C2S_TakeOffSuit::suit_id() const {
  return suit_id_;
}
inline void C2S_TakeOffSuit::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// -------------------------------------------------------------------

// S2C_TakeOffSuit

// required bytes ret_code = 1;
inline bool S2C_TakeOffSuit::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_TakeOffSuit::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_TakeOffSuit::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_TakeOffSuit::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_TakeOffSuit::ret_code() const {
  return *ret_code_;
}
inline void S2C_TakeOffSuit::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_TakeOffSuit::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_TakeOffSuit::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_TakeOffSuit::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_TakeOffSuit::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_TakeOffSuit::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_TakeOffSuit::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_TakeOffSuit::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_TakeOffSuit::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_TakeOffSuit::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_TakeOffSuit::role_index() const {
  return role_index_;
}
inline void S2C_TakeOffSuit::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 suit_id = 3;
inline bool S2C_TakeOffSuit::has_suit_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_TakeOffSuit::set_has_suit_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_TakeOffSuit::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_TakeOffSuit::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
inline ::google::protobuf::int32 S2C_TakeOffSuit::suit_id() const {
  return suit_id_;
}
inline void S2C_TakeOffSuit::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// -------------------------------------------------------------------

// C2S_AskRewardList

// required int64 role_index = 1;
inline bool C2S_AskRewardList::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_AskRewardList::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_AskRewardList::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_AskRewardList::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_AskRewardList::role_index() const {
  return role_index_;
}
inline void C2S_AskRewardList::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Sync_Role_RewardList

// required int64 role_index = 1;
inline bool S2C_Sync_Role_RewardList::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Sync_Role_RewardList::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Sync_Role_RewardList::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Sync_Role_RewardList::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Sync_Role_RewardList::role_index() const {
  return role_index_;
}
inline void S2C_Sync_Role_RewardList::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// repeated int64 list_reward_exp = 2;
inline int S2C_Sync_Role_RewardList::list_reward_exp_size() const {
  return list_reward_exp_.size();
}
inline void S2C_Sync_Role_RewardList::clear_list_reward_exp() {
  list_reward_exp_.Clear();
}
inline ::google::protobuf::int64 S2C_Sync_Role_RewardList::list_reward_exp(int index) const {
  return list_reward_exp_.Get(index);
}
inline void S2C_Sync_Role_RewardList::set_list_reward_exp(int index, ::google::protobuf::int64 value) {
  list_reward_exp_.Set(index, value);
}
inline void S2C_Sync_Role_RewardList::add_list_reward_exp(::google::protobuf::int64 value) {
  list_reward_exp_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
S2C_Sync_Role_RewardList::list_reward_exp() const {
  return list_reward_exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
S2C_Sync_Role_RewardList::mutable_list_reward_exp() {
  return &list_reward_exp_;
}

// repeated int64 list_reward_money = 3;
inline int S2C_Sync_Role_RewardList::list_reward_money_size() const {
  return list_reward_money_.size();
}
inline void S2C_Sync_Role_RewardList::clear_list_reward_money() {
  list_reward_money_.Clear();
}
inline ::google::protobuf::int64 S2C_Sync_Role_RewardList::list_reward_money(int index) const {
  return list_reward_money_.Get(index);
}
inline void S2C_Sync_Role_RewardList::set_list_reward_money(int index, ::google::protobuf::int64 value) {
  list_reward_money_.Set(index, value);
}
inline void S2C_Sync_Role_RewardList::add_list_reward_money(::google::protobuf::int64 value) {
  list_reward_money_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
S2C_Sync_Role_RewardList::list_reward_money() const {
  return list_reward_money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
S2C_Sync_Role_RewardList::mutable_list_reward_money() {
  return &list_reward_money_;
}

// repeated .item list_reward_item = 4;
inline int S2C_Sync_Role_RewardList::list_reward_item_size() const {
  return list_reward_item_.size();
}
inline void S2C_Sync_Role_RewardList::clear_list_reward_item() {
  list_reward_item_.Clear();
}
inline const ::item& S2C_Sync_Role_RewardList::list_reward_item(int index) const {
  return list_reward_item_.Get(index);
}
inline ::item* S2C_Sync_Role_RewardList::mutable_list_reward_item(int index) {
  return list_reward_item_.Mutable(index);
}
inline ::item* S2C_Sync_Role_RewardList::add_list_reward_item() {
  return list_reward_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::item >&
S2C_Sync_Role_RewardList::list_reward_item() const {
  return list_reward_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::item >*
S2C_Sync_Role_RewardList::mutable_list_reward_item() {
  return &list_reward_item_;
}

// -------------------------------------------------------------------

// C2S_FaceShopInfo

// required int64 role_index = 1;
inline bool C2S_FaceShopInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_FaceShopInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_FaceShopInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_FaceShopInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_FaceShopInfo::role_index() const {
  return role_index_;
}
inline void C2S_FaceShopInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_FaceShopInfo

// required int64 role_index = 1;
inline bool S2C_FaceShopInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_FaceShopInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_FaceShopInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_FaceShopInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_FaceShopInfo::role_index() const {
  return role_index_;
}
inline void S2C_FaceShopInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// repeated .face_goods_info list_original_buy_face = 2;
inline int S2C_FaceShopInfo::list_original_buy_face_size() const {
  return list_original_buy_face_.size();
}
inline void S2C_FaceShopInfo::clear_list_original_buy_face() {
  list_original_buy_face_.Clear();
}
inline const ::face_goods_info& S2C_FaceShopInfo::list_original_buy_face(int index) const {
  return list_original_buy_face_.Get(index);
}
inline ::face_goods_info* S2C_FaceShopInfo::mutable_list_original_buy_face(int index) {
  return list_original_buy_face_.Mutable(index);
}
inline ::face_goods_info* S2C_FaceShopInfo::add_list_original_buy_face() {
  return list_original_buy_face_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::face_goods_info >&
S2C_FaceShopInfo::list_original_buy_face() const {
  return list_original_buy_face_;
}
inline ::google::protobuf::RepeatedPtrField< ::face_goods_info >*
S2C_FaceShopInfo::mutable_list_original_buy_face() {
  return &list_original_buy_face_;
}

// repeated .face_goods_info list_discount_buy_face = 3;
inline int S2C_FaceShopInfo::list_discount_buy_face_size() const {
  return list_discount_buy_face_.size();
}
inline void S2C_FaceShopInfo::clear_list_discount_buy_face() {
  list_discount_buy_face_.Clear();
}
inline const ::face_goods_info& S2C_FaceShopInfo::list_discount_buy_face(int index) const {
  return list_discount_buy_face_.Get(index);
}
inline ::face_goods_info* S2C_FaceShopInfo::mutable_list_discount_buy_face(int index) {
  return list_discount_buy_face_.Mutable(index);
}
inline ::face_goods_info* S2C_FaceShopInfo::add_list_discount_buy_face() {
  return list_discount_buy_face_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::face_goods_info >&
S2C_FaceShopInfo::list_discount_buy_face() const {
  return list_discount_buy_face_;
}
inline ::google::protobuf::RepeatedPtrField< ::face_goods_info >*
S2C_FaceShopInfo::mutable_list_discount_buy_face() {
  return &list_discount_buy_face_;
}

// required sint32 face_shop_surplus_update_time = 4;
inline bool S2C_FaceShopInfo::has_face_shop_surplus_update_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_FaceShopInfo::set_has_face_shop_surplus_update_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_FaceShopInfo::clear_has_face_shop_surplus_update_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_FaceShopInfo::clear_face_shop_surplus_update_time() {
  face_shop_surplus_update_time_ = 0;
  clear_has_face_shop_surplus_update_time();
}
inline ::google::protobuf::int32 S2C_FaceShopInfo::face_shop_surplus_update_time() const {
  return face_shop_surplus_update_time_;
}
inline void S2C_FaceShopInfo::set_face_shop_surplus_update_time(::google::protobuf::int32 value) {
  set_has_face_shop_surplus_update_time();
  face_shop_surplus_update_time_ = value;
}

// -------------------------------------------------------------------

// C2S_BuyFaceInShop

// required int64 role_index = 1;
inline bool C2S_BuyFaceInShop::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BuyFaceInShop::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BuyFaceInShop::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BuyFaceInShop::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_BuyFaceInShop::role_index() const {
  return role_index_;
}
inline void C2S_BuyFaceInShop::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 face_shop_id = 2;
inline bool C2S_BuyFaceInShop::has_face_shop_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_BuyFaceInShop::set_has_face_shop_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_BuyFaceInShop::clear_has_face_shop_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_BuyFaceInShop::clear_face_shop_id() {
  face_shop_id_ = 0;
  clear_has_face_shop_id();
}
inline ::google::protobuf::int32 C2S_BuyFaceInShop::face_shop_id() const {
  return face_shop_id_;
}
inline void C2S_BuyFaceInShop::set_face_shop_id(::google::protobuf::int32 value) {
  set_has_face_shop_id();
  face_shop_id_ = value;
}

// required sint32 face_duration = 3;
inline bool C2S_BuyFaceInShop::has_face_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_BuyFaceInShop::set_has_face_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_BuyFaceInShop::clear_has_face_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_BuyFaceInShop::clear_face_duration() {
  face_duration_ = 0;
  clear_has_face_duration();
}
inline ::google::protobuf::int32 C2S_BuyFaceInShop::face_duration() const {
  return face_duration_;
}
inline void C2S_BuyFaceInShop::set_face_duration(::google::protobuf::int32 value) {
  set_has_face_duration();
  face_duration_ = value;
}

// required bool face_isdiscount = 4;
inline bool C2S_BuyFaceInShop::has_face_isdiscount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_BuyFaceInShop::set_has_face_isdiscount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_BuyFaceInShop::clear_has_face_isdiscount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_BuyFaceInShop::clear_face_isdiscount() {
  face_isdiscount_ = false;
  clear_has_face_isdiscount();
}
inline bool C2S_BuyFaceInShop::face_isdiscount() const {
  return face_isdiscount_;
}
inline void C2S_BuyFaceInShop::set_face_isdiscount(bool value) {
  set_has_face_isdiscount();
  face_isdiscount_ = value;
}

// -------------------------------------------------------------------

// S2C_BuyFaceInShop

// required bytes ret_code = 1;
inline bool S2C_BuyFaceInShop::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BuyFaceInShop::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BuyFaceInShop::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BuyFaceInShop::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_BuyFaceInShop::ret_code() const {
  return *ret_code_;
}
inline void S2C_BuyFaceInShop::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_BuyFaceInShop::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_BuyFaceInShop::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_BuyFaceInShop::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_BuyFaceInShop::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_BuyFaceInShop::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_BuyFaceInShop::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BuyFaceInShop::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BuyFaceInShop::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BuyFaceInShop::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_BuyFaceInShop::role_index() const {
  return role_index_;
}
inline void S2C_BuyFaceInShop::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 face_shop_id = 3;
inline bool S2C_BuyFaceInShop::has_face_shop_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_BuyFaceInShop::set_has_face_shop_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_BuyFaceInShop::clear_has_face_shop_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_BuyFaceInShop::clear_face_shop_id() {
  face_shop_id_ = 0;
  clear_has_face_shop_id();
}
inline ::google::protobuf::int32 S2C_BuyFaceInShop::face_shop_id() const {
  return face_shop_id_;
}
inline void S2C_BuyFaceInShop::set_face_shop_id(::google::protobuf::int32 value) {
  set_has_face_shop_id();
  face_shop_id_ = value;
}

// required sint32 face_duration = 4;
inline bool S2C_BuyFaceInShop::has_face_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_BuyFaceInShop::set_has_face_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_BuyFaceInShop::clear_has_face_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_BuyFaceInShop::clear_face_duration() {
  face_duration_ = 0;
  clear_has_face_duration();
}
inline ::google::protobuf::int32 S2C_BuyFaceInShop::face_duration() const {
  return face_duration_;
}
inline void S2C_BuyFaceInShop::set_face_duration(::google::protobuf::int32 value) {
  set_has_face_duration();
  face_duration_ = value;
}

// -------------------------------------------------------------------

// C2S_RoleFaceInfo

// required int64 role_index = 1;
inline bool C2S_RoleFaceInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_RoleFaceInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_RoleFaceInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_RoleFaceInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_RoleFaceInfo::role_index() const {
  return role_index_;
}
inline void C2S_RoleFaceInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_RoleFaceInfo

// required int64 role_index = 1;
inline bool S2C_RoleFaceInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_RoleFaceInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_RoleFaceInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_RoleFaceInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_RoleFaceInfo::role_index() const {
  return role_index_;
}
inline void S2C_RoleFaceInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required .list_role_face_info role_face_info = 3;
inline bool S2C_RoleFaceInfo::has_role_face_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_RoleFaceInfo::set_has_role_face_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_RoleFaceInfo::clear_has_role_face_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_RoleFaceInfo::clear_role_face_info() {
  if (role_face_info_ != nullptr) role_face_info_->::list_role_face_info::Clear();
  clear_has_role_face_info();
}
inline const ::list_role_face_info& S2C_RoleFaceInfo::role_face_info() const {
  return role_face_info_ != nullptr ? *role_face_info_ : *default_instance_->role_face_info_;
}
inline ::list_role_face_info* S2C_RoleFaceInfo::mutable_role_face_info() {
  set_has_role_face_info();
  if (role_face_info_ == nullptr) role_face_info_ = new ::list_role_face_info;
  return role_face_info_;
}
inline ::list_role_face_info* S2C_RoleFaceInfo::release_role_face_info() {
  clear_has_role_face_info();
  ::list_role_face_info* temp = role_face_info_;
  role_face_info_ = nullptr;
  return temp;
}
inline void S2C_RoleFaceInfo::set_allocated_role_face_info(::list_role_face_info* role_face_info) {
  delete role_face_info_;
  role_face_info_ = role_face_info;
  if (role_face_info) {
    set_has_role_face_info();
  } else {
    clear_has_role_face_info();
  }
}

// -------------------------------------------------------------------

// C2S_DressFace

// required int64 role_index = 1;
inline bool C2S_DressFace::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_DressFace::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_DressFace::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_DressFace::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_DressFace::role_index() const {
  return role_index_;
}
inline void C2S_DressFace::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 face_id = 2;
inline bool C2S_DressFace::has_face_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_DressFace::set_has_face_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_DressFace::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_DressFace::clear_face_id() {
  face_id_ = 0;
  clear_has_face_id();
}
inline ::google::protobuf::int32 C2S_DressFace::face_id() const {
  return face_id_;
}
inline void C2S_DressFace::set_face_id(::google::protobuf::int32 value) {
  set_has_face_id();
  face_id_ = value;
}

// -------------------------------------------------------------------

// S2C_DressFace

// required bytes ret_code = 1;
inline bool S2C_DressFace::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_DressFace::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_DressFace::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_DressFace::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_DressFace::ret_code() const {
  return *ret_code_;
}
inline void S2C_DressFace::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_DressFace::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_DressFace::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_DressFace::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_DressFace::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_DressFace::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_DressFace::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_DressFace::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_DressFace::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_DressFace::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_DressFace::role_index() const {
  return role_index_;
}
inline void S2C_DressFace::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 face_id = 3;
inline bool S2C_DressFace::has_face_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_DressFace::set_has_face_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_DressFace::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_DressFace::clear_face_id() {
  face_id_ = 0;
  clear_has_face_id();
}
inline ::google::protobuf::int32 S2C_DressFace::face_id() const {
  return face_id_;
}
inline void S2C_DressFace::set_face_id(::google::protobuf::int32 value) {
  set_has_face_id();
  face_id_ = value;
}

// -------------------------------------------------------------------

// C2S_TakeOffFace

// required int64 role_index = 1;
inline bool C2S_TakeOffFace::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_TakeOffFace::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_TakeOffFace::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_TakeOffFace::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_TakeOffFace::role_index() const {
  return role_index_;
}
inline void C2S_TakeOffFace::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 face_id = 2;
inline bool C2S_TakeOffFace::has_face_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_TakeOffFace::set_has_face_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_TakeOffFace::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_TakeOffFace::clear_face_id() {
  face_id_ = 0;
  clear_has_face_id();
}
inline ::google::protobuf::int32 C2S_TakeOffFace::face_id() const {
  return face_id_;
}
inline void C2S_TakeOffFace::set_face_id(::google::protobuf::int32 value) {
  set_has_face_id();
  face_id_ = value;
}

// -------------------------------------------------------------------

// S2C_TakeOffFace

// required bytes ret_code = 1;
inline bool S2C_TakeOffFace::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_TakeOffFace::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_TakeOffFace::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_TakeOffFace::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_TakeOffFace::ret_code() const {
  return *ret_code_;
}
inline void S2C_TakeOffFace::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_TakeOffFace::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_TakeOffFace::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_TakeOffFace::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_TakeOffFace::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_TakeOffFace::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_TakeOffFace::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_TakeOffFace::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_TakeOffFace::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_TakeOffFace::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_TakeOffFace::role_index() const {
  return role_index_;
}
inline void S2C_TakeOffFace::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 face_id = 3;
inline bool S2C_TakeOffFace::has_face_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_TakeOffFace::set_has_face_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_TakeOffFace::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_TakeOffFace::clear_face_id() {
  face_id_ = 0;
  clear_has_face_id();
}
inline ::google::protobuf::int32 S2C_TakeOffFace::face_id() const {
  return face_id_;
}
inline void S2C_TakeOffFace::set_face_id(::google::protobuf::int32 value) {
  set_has_face_id();
  face_id_ = value;
}

// -------------------------------------------------------------------

// C2S_ManualUpdateFaceShop

// required int64 role_index = 1;
inline bool C2S_ManualUpdateFaceShop::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_ManualUpdateFaceShop::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_ManualUpdateFaceShop::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_ManualUpdateFaceShop::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_ManualUpdateFaceShop::role_index() const {
  return role_index_;
}
inline void C2S_ManualUpdateFaceShop::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_ManualUpdateFaceShop

// required bytes ret_code = 1;
inline bool S2C_ManualUpdateFaceShop::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_ManualUpdateFaceShop::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_ManualUpdateFaceShop::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_ManualUpdateFaceShop::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_ManualUpdateFaceShop::ret_code() const {
  return *ret_code_;
}
inline void S2C_ManualUpdateFaceShop::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_ManualUpdateFaceShop::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_ManualUpdateFaceShop::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_ManualUpdateFaceShop::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_ManualUpdateFaceShop::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_ManualUpdateFaceShop::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_ManualUpdateFaceShop::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_ManualUpdateFaceShop::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_ManualUpdateFaceShop::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_ManualUpdateFaceShop::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_ManualUpdateFaceShop::role_index() const {
  return role_index_;
}
inline void S2C_ManualUpdateFaceShop::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// C2S_PassRisk

// required int64 role_index = 1;
inline bool C2S_PassRisk::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_PassRisk::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_PassRisk::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_PassRisk::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_PassRisk::role_index() const {
  return role_index_;
}
inline void C2S_PassRisk::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 passed = 2;
inline bool C2S_PassRisk::has_passed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_PassRisk::set_has_passed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_PassRisk::clear_has_passed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_PassRisk::clear_passed() {
  passed_ = 0;
  clear_has_passed();
}
inline ::google::protobuf::int32 C2S_PassRisk::passed() const {
  return passed_;
}
inline void C2S_PassRisk::set_passed(::google::protobuf::int32 value) {
  set_has_passed();
  passed_ = value;
}

// required sint32 chap_id = 3;
inline bool C2S_PassRisk::has_chap_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_PassRisk::set_has_chap_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_PassRisk::clear_has_chap_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_PassRisk::clear_chap_id() {
  chap_id_ = 0;
  clear_has_chap_id();
}
inline ::google::protobuf::int32 C2S_PassRisk::chap_id() const {
  return chap_id_;
}
inline void C2S_PassRisk::set_chap_id(::google::protobuf::int32 value) {
  set_has_chap_id();
  chap_id_ = value;
}

// required sint32 level_id = 4;
inline bool C2S_PassRisk::has_level_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_PassRisk::set_has_level_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_PassRisk::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_PassRisk::clear_level_id() {
  level_id_ = 0;
  clear_has_level_id();
}
inline ::google::protobuf::int32 C2S_PassRisk::level_id() const {
  return level_id_;
}
inline void C2S_PassRisk::set_level_id(::google::protobuf::int32 value) {
  set_has_level_id();
  level_id_ = value;
}

// -------------------------------------------------------------------

// S2C_PassRisk

// required bytes ret_code = 1;
inline bool S2C_PassRisk::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_PassRisk::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_PassRisk::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_PassRisk::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_PassRisk::ret_code() const {
  return *ret_code_;
}
inline void S2C_PassRisk::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_PassRisk::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_PassRisk::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_PassRisk::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_PassRisk::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_PassRisk::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .reward_info list_reward = 2;
inline int S2C_PassRisk::list_reward_size() const {
  return list_reward_.size();
}
inline void S2C_PassRisk::clear_list_reward() {
  list_reward_.Clear();
}
inline const ::reward_info& S2C_PassRisk::list_reward(int index) const {
  return list_reward_.Get(index);
}
inline ::reward_info* S2C_PassRisk::mutable_list_reward(int index) {
  return list_reward_.Mutable(index);
}
inline ::reward_info* S2C_PassRisk::add_list_reward() {
  return list_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::reward_info >&
S2C_PassRisk::list_reward() const {
  return list_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::reward_info >*
S2C_PassRisk::mutable_list_reward() {
  return &list_reward_;
}

// -------------------------------------------------------------------

// C2S_ReadyEnterRisk

// required int64 role_index = 1;
inline bool C2S_ReadyEnterRisk::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_ReadyEnterRisk::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_ReadyEnterRisk::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_ReadyEnterRisk::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_ReadyEnterRisk::role_index() const {
  return role_index_;
}
inline void C2S_ReadyEnterRisk::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 risk_id = 2;
inline bool C2S_ReadyEnterRisk::has_risk_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_ReadyEnterRisk::set_has_risk_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_ReadyEnterRisk::clear_has_risk_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_ReadyEnterRisk::clear_risk_id() {
  risk_id_ = 0;
  clear_has_risk_id();
}
inline ::google::protobuf::int32 C2S_ReadyEnterRisk::risk_id() const {
  return risk_id_;
}
inline void C2S_ReadyEnterRisk::set_risk_id(::google::protobuf::int32 value) {
  set_has_risk_id();
  risk_id_ = value;
}

// required sint32 npc_id = 3;
inline bool C2S_ReadyEnterRisk::has_npc_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_ReadyEnterRisk::set_has_npc_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_ReadyEnterRisk::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_ReadyEnterRisk::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 C2S_ReadyEnterRisk::npc_id() const {
  return npc_id_;
}
inline void C2S_ReadyEnterRisk::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// required sint32 scene_id = 4;
inline bool C2S_ReadyEnterRisk::has_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_ReadyEnterRisk::set_has_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_ReadyEnterRisk::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_ReadyEnterRisk::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 C2S_ReadyEnterRisk::scene_id() const {
  return scene_id_;
}
inline void C2S_ReadyEnterRisk::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// required sint32 scene_type = 5;
inline bool C2S_ReadyEnterRisk::has_scene_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_ReadyEnterRisk::set_has_scene_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_ReadyEnterRisk::clear_has_scene_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_ReadyEnterRisk::clear_scene_type() {
  scene_type_ = 0;
  clear_has_scene_type();
}
inline ::google::protobuf::int32 C2S_ReadyEnterRisk::scene_type() const {
  return scene_type_;
}
inline void C2S_ReadyEnterRisk::set_scene_type(::google::protobuf::int32 value) {
  set_has_scene_type();
  scene_type_ = value;
}

// required sint32 trans_info_id = 6;
inline bool C2S_ReadyEnterRisk::has_trans_info_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2S_ReadyEnterRisk::set_has_trans_info_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2S_ReadyEnterRisk::clear_has_trans_info_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2S_ReadyEnterRisk::clear_trans_info_id() {
  trans_info_id_ = 0;
  clear_has_trans_info_id();
}
inline ::google::protobuf::int32 C2S_ReadyEnterRisk::trans_info_id() const {
  return trans_info_id_;
}
inline void C2S_ReadyEnterRisk::set_trans_info_id(::google::protobuf::int32 value) {
  set_has_trans_info_id();
  trans_info_id_ = value;
}

// -------------------------------------------------------------------

// S2C_ReadyEnterRisk

// required bytes ret_code = 1;
inline bool S2C_ReadyEnterRisk::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_ReadyEnterRisk::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_ReadyEnterRisk::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_ReadyEnterRisk::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_ReadyEnterRisk::ret_code() const {
  return *ret_code_;
}
inline void S2C_ReadyEnterRisk::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_ReadyEnterRisk::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_ReadyEnterRisk::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_ReadyEnterRisk::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_ReadyEnterRisk::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_ReadyEnterRisk::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 role_index = 2;
inline bool S2C_ReadyEnterRisk::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_ReadyEnterRisk::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_ReadyEnterRisk::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_ReadyEnterRisk::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_ReadyEnterRisk::role_index() const {
  return role_index_;
}
inline void S2C_ReadyEnterRisk::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 risk_id = 3;
inline bool S2C_ReadyEnterRisk::has_risk_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_ReadyEnterRisk::set_has_risk_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_ReadyEnterRisk::clear_has_risk_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_ReadyEnterRisk::clear_risk_id() {
  risk_id_ = 0;
  clear_has_risk_id();
}
inline ::google::protobuf::int32 S2C_ReadyEnterRisk::risk_id() const {
  return risk_id_;
}
inline void S2C_ReadyEnterRisk::set_risk_id(::google::protobuf::int32 value) {
  set_has_risk_id();
  risk_id_ = value;
}

// required sint32 npc_id = 4;
inline bool S2C_ReadyEnterRisk::has_npc_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_ReadyEnterRisk::set_has_npc_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_ReadyEnterRisk::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_ReadyEnterRisk::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 S2C_ReadyEnterRisk::npc_id() const {
  return npc_id_;
}
inline void S2C_ReadyEnterRisk::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// required sint32 scene_id = 5;
inline bool S2C_ReadyEnterRisk::has_scene_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_ReadyEnterRisk::set_has_scene_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_ReadyEnterRisk::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_ReadyEnterRisk::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 S2C_ReadyEnterRisk::scene_id() const {
  return scene_id_;
}
inline void S2C_ReadyEnterRisk::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// required sint32 trans_info_id = 6;
inline bool S2C_ReadyEnterRisk::has_trans_info_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_ReadyEnterRisk::set_has_trans_info_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_ReadyEnterRisk::clear_has_trans_info_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_ReadyEnterRisk::clear_trans_info_id() {
  trans_info_id_ = 0;
  clear_has_trans_info_id();
}
inline ::google::protobuf::int32 S2C_ReadyEnterRisk::trans_info_id() const {
  return trans_info_id_;
}
inline void S2C_ReadyEnterRisk::set_trans_info_id(::google::protobuf::int32 value) {
  set_has_trans_info_id();
  trans_info_id_ = value;
}

// -------------------------------------------------------------------

// S2C_NPC_Add_RecordQueue

// required sint32 npc_id = 1;
inline bool S2C_NPC_Add_RecordQueue::has_npc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NPC_Add_RecordQueue::set_has_npc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NPC_Add_RecordQueue::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NPC_Add_RecordQueue::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 S2C_NPC_Add_RecordQueue::npc_id() const {
  return npc_id_;
}
inline void S2C_NPC_Add_RecordQueue::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// required int64 role_index = 2;
inline bool S2C_NPC_Add_RecordQueue::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_NPC_Add_RecordQueue::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_NPC_Add_RecordQueue::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_NPC_Add_RecordQueue::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_NPC_Add_RecordQueue::role_index() const {
  return role_index_;
}
inline void S2C_NPC_Add_RecordQueue::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 suit_id = 3;
inline bool S2C_NPC_Add_RecordQueue::has_suit_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_NPC_Add_RecordQueue::set_has_suit_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_NPC_Add_RecordQueue::clear_has_suit_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_NPC_Add_RecordQueue::clear_suit_id() {
  suit_id_ = 0;
  clear_has_suit_id();
}
inline ::google::protobuf::int32 S2C_NPC_Add_RecordQueue::suit_id() const {
  return suit_id_;
}
inline void S2C_NPC_Add_RecordQueue::set_suit_id(::google::protobuf::int32 value) {
  set_has_suit_id();
  suit_id_ = value;
}

// required sint32 face_id = 4;
inline bool S2C_NPC_Add_RecordQueue::has_face_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_NPC_Add_RecordQueue::set_has_face_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_NPC_Add_RecordQueue::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_NPC_Add_RecordQueue::clear_face_id() {
  face_id_ = 0;
  clear_has_face_id();
}
inline ::google::protobuf::int32 S2C_NPC_Add_RecordQueue::face_id() const {
  return face_id_;
}
inline void S2C_NPC_Add_RecordQueue::set_face_id(::google::protobuf::int32 value) {
  set_has_face_id();
  face_id_ = value;
}

// required sint32 weapon_id = 5;
inline bool S2C_NPC_Add_RecordQueue::has_weapon_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_NPC_Add_RecordQueue::set_has_weapon_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_NPC_Add_RecordQueue::clear_has_weapon_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_NPC_Add_RecordQueue::clear_weapon_id() {
  weapon_id_ = 0;
  clear_has_weapon_id();
}
inline ::google::protobuf::int32 S2C_NPC_Add_RecordQueue::weapon_id() const {
  return weapon_id_;
}
inline void S2C_NPC_Add_RecordQueue::set_weapon_id(::google::protobuf::int32 value) {
  set_has_weapon_id();
  weapon_id_ = value;
}

// required sint32 helmet_id = 6;
inline bool S2C_NPC_Add_RecordQueue::has_helmet_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_NPC_Add_RecordQueue::set_has_helmet_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_NPC_Add_RecordQueue::clear_has_helmet_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_NPC_Add_RecordQueue::clear_helmet_id() {
  helmet_id_ = 0;
  clear_has_helmet_id();
}
inline ::google::protobuf::int32 S2C_NPC_Add_RecordQueue::helmet_id() const {
  return helmet_id_;
}
inline void S2C_NPC_Add_RecordQueue::set_helmet_id(::google::protobuf::int32 value) {
  set_has_helmet_id();
  helmet_id_ = value;
}

// -------------------------------------------------------------------

// S2C_NPC_Go_RecordQueue

// required sint32 npc_id = 1;
inline bool S2C_NPC_Go_RecordQueue::has_npc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NPC_Go_RecordQueue::set_has_npc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NPC_Go_RecordQueue::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NPC_Go_RecordQueue::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 S2C_NPC_Go_RecordQueue::npc_id() const {
  return npc_id_;
}
inline void S2C_NPC_Go_RecordQueue::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// required int64 role_index = 2;
inline bool S2C_NPC_Go_RecordQueue::has_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_NPC_Go_RecordQueue::set_has_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_NPC_Go_RecordQueue::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_NPC_Go_RecordQueue::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_NPC_Go_RecordQueue::role_index() const {
  return role_index_;
}
inline void S2C_NPC_Go_RecordQueue::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// C2S_Select_Recommend_Friends

// required int64 role_index = 1;
inline bool C2S_Select_Recommend_Friends::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Select_Recommend_Friends::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Select_Recommend_Friends::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Select_Recommend_Friends::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Select_Recommend_Friends::role_index() const {
  return role_index_;
}
inline void C2S_Select_Recommend_Friends::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Select_Recommend_Friends

// repeated .game_friend list_friend_infos = 1;
inline int S2C_Select_Recommend_Friends::list_friend_infos_size() const {
  return list_friend_infos_.size();
}
inline void S2C_Select_Recommend_Friends::clear_list_friend_infos() {
  list_friend_infos_.Clear();
}
inline const ::game_friend& S2C_Select_Recommend_Friends::list_friend_infos(int index) const {
  return list_friend_infos_.Get(index);
}
inline ::game_friend* S2C_Select_Recommend_Friends::mutable_list_friend_infos(int index) {
  return list_friend_infos_.Mutable(index);
}
inline ::game_friend* S2C_Select_Recommend_Friends::add_list_friend_infos() {
  return list_friend_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_friend >&
S2C_Select_Recommend_Friends::list_friend_infos() const {
  return list_friend_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_friend >*
S2C_Select_Recommend_Friends::mutable_list_friend_infos() {
  return &list_friend_infos_;
}

// -------------------------------------------------------------------

// C2S_FindFriend

// required int64 role_index = 1;
inline bool C2S_FindFriend::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_FindFriend::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_FindFriend::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_FindFriend::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_FindFriend::role_index() const {
  return role_index_;
}
inline void C2S_FindFriend::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes nick_name = 2;
inline bool C2S_FindFriend::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_FindFriend::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_FindFriend::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_FindFriend::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& C2S_FindFriend::nick_name() const {
  return *nick_name_;
}
inline void C2S_FindFriend::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void C2S_FindFriend::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void C2S_FindFriend::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_FindFriend::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* C2S_FindFriend::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_FindFriend::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// S2C_FindFriend

// required bytes ret_code = 1;
inline bool S2C_FindFriend::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_FindFriend::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_FindFriend::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_FindFriend::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_FindFriend::ret_code() const {
  return *ret_code_;
}
inline void S2C_FindFriend::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_FindFriend::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_FindFriend::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_FindFriend::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_FindFriend::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_FindFriend::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .game_friend friend_info = 2;
inline bool S2C_FindFriend::has_friend_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_FindFriend::set_has_friend_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_FindFriend::clear_has_friend_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_FindFriend::clear_friend_info() {
  if (friend_info_ != nullptr) friend_info_->::game_friend::Clear();
  clear_has_friend_info();
}
inline const ::game_friend& S2C_FindFriend::friend_info() const {
  return friend_info_ != nullptr ? *friend_info_ : *default_instance_->friend_info_;
}
inline ::game_friend* S2C_FindFriend::mutable_friend_info() {
  set_has_friend_info();
  if (friend_info_ == nullptr) friend_info_ = new ::game_friend;
  return friend_info_;
}
inline ::game_friend* S2C_FindFriend::release_friend_info() {
  clear_has_friend_info();
  ::game_friend* temp = friend_info_;
  friend_info_ = nullptr;
  return temp;
}
inline void S2C_FindFriend::set_allocated_friend_info(::game_friend* friend_info) {
  delete friend_info_;
  friend_info_ = friend_info;
  if (friend_info) {
    set_has_friend_info();
  } else {
    clear_has_friend_info();
  }
}

// -------------------------------------------------------------------

// C2S_Add_Friend

// required int64 role_index = 1;
inline bool C2S_Add_Friend::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Add_Friend::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Add_Friend::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Add_Friend::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Add_Friend::role_index() const {
  return role_index_;
}
inline void C2S_Add_Friend::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_role_index = 2;
inline bool C2S_Add_Friend::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Add_Friend::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Add_Friend::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Add_Friend::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 C2S_Add_Friend::tar_role_index() const {
  return tar_role_index_;
}
inline void C2S_Add_Friend::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Add_Friend

// required int64 tar_role_index = 1;
inline bool S2C_Add_Friend::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Add_Friend::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Add_Friend::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Add_Friend::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2C_Add_Friend::tar_role_index() const {
  return tar_role_index_;
}
inline void S2C_Add_Friend::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Add_Friend::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Add_Friend::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Add_Friend::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Add_Friend::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Add_Friend::ret_code() const {
  return *ret_code_;
}
inline void S2C_Add_Friend::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Add_Friend::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Add_Friend::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Add_Friend::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Add_Friend::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Add_Friend::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .game_friend tar_friend_info = 3;
inline bool S2C_Add_Friend::has_tar_friend_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Add_Friend::set_has_tar_friend_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Add_Friend::clear_has_tar_friend_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Add_Friend::clear_tar_friend_info() {
  if (tar_friend_info_ != nullptr) tar_friend_info_->::game_friend::Clear();
  clear_has_tar_friend_info();
}
inline const ::game_friend& S2C_Add_Friend::tar_friend_info() const {
  return tar_friend_info_ != nullptr ? *tar_friend_info_ : *default_instance_->tar_friend_info_;
}
inline ::game_friend* S2C_Add_Friend::mutable_tar_friend_info() {
  set_has_tar_friend_info();
  if (tar_friend_info_ == nullptr) tar_friend_info_ = new ::game_friend;
  return tar_friend_info_;
}
inline ::game_friend* S2C_Add_Friend::release_tar_friend_info() {
  clear_has_tar_friend_info();
  ::game_friend* temp = tar_friend_info_;
  tar_friend_info_ = nullptr;
  return temp;
}
inline void S2C_Add_Friend::set_allocated_tar_friend_info(::game_friend* tar_friend_info) {
  delete tar_friend_info_;
  tar_friend_info_ = tar_friend_info;
  if (tar_friend_info) {
    set_has_tar_friend_info();
  } else {
    clear_has_tar_friend_info();
  }
}

// -------------------------------------------------------------------

// C2S_Remove_Friend

// required int64 role_index = 1;
inline bool C2S_Remove_Friend::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Remove_Friend::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Remove_Friend::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Remove_Friend::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Remove_Friend::role_index() const {
  return role_index_;
}
inline void C2S_Remove_Friend::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_role_index = 2;
inline bool C2S_Remove_Friend::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Remove_Friend::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Remove_Friend::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Remove_Friend::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 C2S_Remove_Friend::tar_role_index() const {
  return tar_role_index_;
}
inline void C2S_Remove_Friend::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Remove_Friend

// required int64 tar_role_index = 1;
inline bool S2C_Remove_Friend::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Remove_Friend::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Remove_Friend::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Remove_Friend::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2C_Remove_Friend::tar_role_index() const {
  return tar_role_index_;
}
inline void S2C_Remove_Friend::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Remove_Friend::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Remove_Friend::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Remove_Friend::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Remove_Friend::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Remove_Friend::ret_code() const {
  return *ret_code_;
}
inline void S2C_Remove_Friend::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Remove_Friend::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Remove_Friend::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Remove_Friend::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Remove_Friend::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Remove_Friend::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// S2C_Request_Add_Friend

// required int64 src_role_index = 1;
inline bool S2C_Request_Add_Friend::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Request_Add_Friend::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Request_Add_Friend::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Request_Add_Friend::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_Request_Add_Friend::src_role_index() const {
  return src_role_index_;
}
inline void S2C_Request_Add_Friend::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required .game_friend src_friend_info = 2;
inline bool S2C_Request_Add_Friend::has_src_friend_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Request_Add_Friend::set_has_src_friend_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Request_Add_Friend::clear_has_src_friend_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Request_Add_Friend::clear_src_friend_info() {
  if (src_friend_info_ != nullptr) src_friend_info_->::game_friend::Clear();
  clear_has_src_friend_info();
}
inline const ::game_friend& S2C_Request_Add_Friend::src_friend_info() const {
  return src_friend_info_ != nullptr ? *src_friend_info_ : *default_instance_->src_friend_info_;
}
inline ::game_friend* S2C_Request_Add_Friend::mutable_src_friend_info() {
  set_has_src_friend_info();
  if (src_friend_info_ == nullptr) src_friend_info_ = new ::game_friend;
  return src_friend_info_;
}
inline ::game_friend* S2C_Request_Add_Friend::release_src_friend_info() {
  clear_has_src_friend_info();
  ::game_friend* temp = src_friend_info_;
  src_friend_info_ = nullptr;
  return temp;
}
inline void S2C_Request_Add_Friend::set_allocated_src_friend_info(::game_friend* src_friend_info) {
  delete src_friend_info_;
  src_friend_info_ = src_friend_info;
  if (src_friend_info) {
    set_has_src_friend_info();
  } else {
    clear_has_src_friend_info();
  }
}

// -------------------------------------------------------------------

// C2S_Request_Add_Friend

// required int64 role_index = 1;
inline bool C2S_Request_Add_Friend::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Request_Add_Friend::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Request_Add_Friend::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Request_Add_Friend::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Request_Add_Friend::role_index() const {
  return role_index_;
}
inline void C2S_Request_Add_Friend::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 src_role_index = 2;
inline bool C2S_Request_Add_Friend::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Request_Add_Friend::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Request_Add_Friend::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Request_Add_Friend::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 C2S_Request_Add_Friend::src_role_index() const {
  return src_role_index_;
}
inline void C2S_Request_Add_Friend::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required bool is_refuse = 3;
inline bool C2S_Request_Add_Friend::has_is_refuse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Request_Add_Friend::set_has_is_refuse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Request_Add_Friend::clear_has_is_refuse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Request_Add_Friend::clear_is_refuse() {
  is_refuse_ = false;
  clear_has_is_refuse();
}
inline bool C2S_Request_Add_Friend::is_refuse() const {
  return is_refuse_;
}
inline void C2S_Request_Add_Friend::set_is_refuse(bool value) {
  set_has_is_refuse();
  is_refuse_ = value;
}

// -------------------------------------------------------------------

// S2C_Friend_Online

// required int64 friend_role_index = 1;
inline bool S2C_Friend_Online::has_friend_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Friend_Online::set_has_friend_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Friend_Online::clear_has_friend_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Friend_Online::clear_friend_role_index() {
  friend_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_friend_role_index();
}
inline ::google::protobuf::int64 S2C_Friend_Online::friend_role_index() const {
  return friend_role_index_;
}
inline void S2C_Friend_Online::set_friend_role_index(::google::protobuf::int64 value) {
  set_has_friend_role_index();
  friend_role_index_ = value;
}

// required .game_friend src_friend_info = 2;
inline bool S2C_Friend_Online::has_src_friend_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Friend_Online::set_has_src_friend_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Friend_Online::clear_has_src_friend_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Friend_Online::clear_src_friend_info() {
  if (src_friend_info_ != nullptr) src_friend_info_->::game_friend::Clear();
  clear_has_src_friend_info();
}
inline const ::game_friend& S2C_Friend_Online::src_friend_info() const {
  return src_friend_info_ != nullptr ? *src_friend_info_ : *default_instance_->src_friend_info_;
}
inline ::game_friend* S2C_Friend_Online::mutable_src_friend_info() {
  set_has_src_friend_info();
  if (src_friend_info_ == nullptr) src_friend_info_ = new ::game_friend;
  return src_friend_info_;
}
inline ::game_friend* S2C_Friend_Online::release_src_friend_info() {
  clear_has_src_friend_info();
  ::game_friend* temp = src_friend_info_;
  src_friend_info_ = nullptr;
  return temp;
}
inline void S2C_Friend_Online::set_allocated_src_friend_info(::game_friend* src_friend_info) {
  delete src_friend_info_;
  src_friend_info_ = src_friend_info;
  if (src_friend_info) {
    set_has_src_friend_info();
  } else {
    clear_has_src_friend_info();
  }
}

// -------------------------------------------------------------------

// S2C_Friend_Offline

// required int64 friend_role_index = 1;
inline bool S2C_Friend_Offline::has_friend_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Friend_Offline::set_has_friend_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Friend_Offline::clear_has_friend_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Friend_Offline::clear_friend_role_index() {
  friend_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_friend_role_index();
}
inline ::google::protobuf::int64 S2C_Friend_Offline::friend_role_index() const {
  return friend_role_index_;
}
inline void S2C_Friend_Offline::set_friend_role_index(::google::protobuf::int64 value) {
  set_has_friend_role_index();
  friend_role_index_ = value;
}

// -------------------------------------------------------------------

// C2S_Skill_Study

// required int64 role_index = 1;
inline bool C2S_Skill_Study::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Skill_Study::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Skill_Study::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Skill_Study::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Skill_Study::role_index() const {
  return role_index_;
}
inline void C2S_Skill_Study::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool C2S_Skill_Study::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Skill_Study::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Skill_Study::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Skill_Study::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 C2S_Skill_Study::skill_id() const {
  return skill_id_;
}
inline void C2S_Skill_Study::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Skill_Study

// required int64 role_index = 1;
inline bool S2C_Skill_Study::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Skill_Study::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Skill_Study::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Skill_Study::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Skill_Study::role_index() const {
  return role_index_;
}
inline void S2C_Skill_Study::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool S2C_Skill_Study::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Skill_Study::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Skill_Study::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Skill_Study::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 S2C_Skill_Study::skill_id() const {
  return skill_id_;
}
inline void S2C_Skill_Study::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Skill_Study::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Skill_Study::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Skill_Study::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Skill_Study::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Skill_Study::ret_code() const {
  return *ret_code_;
}
inline void S2C_Skill_Study::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_Study::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_Study::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Skill_Study::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Skill_Study::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Skill_Study::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Skill_LevelUp

// required int64 role_index = 1;
inline bool C2S_Skill_LevelUp::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Skill_LevelUp::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Skill_LevelUp::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Skill_LevelUp::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Skill_LevelUp::role_index() const {
  return role_index_;
}
inline void C2S_Skill_LevelUp::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool C2S_Skill_LevelUp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Skill_LevelUp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Skill_LevelUp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Skill_LevelUp::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 C2S_Skill_LevelUp::skill_id() const {
  return skill_id_;
}
inline void C2S_Skill_LevelUp::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Skill_LevelUp

// required int64 role_index = 1;
inline bool S2C_Skill_LevelUp::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Skill_LevelUp::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Skill_LevelUp::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Skill_LevelUp::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Skill_LevelUp::role_index() const {
  return role_index_;
}
inline void S2C_Skill_LevelUp::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool S2C_Skill_LevelUp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Skill_LevelUp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Skill_LevelUp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Skill_LevelUp::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 S2C_Skill_LevelUp::skill_id() const {
  return skill_id_;
}
inline void S2C_Skill_LevelUp::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Skill_LevelUp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Skill_LevelUp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Skill_LevelUp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Skill_LevelUp::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Skill_LevelUp::ret_code() const {
  return *ret_code_;
}
inline void S2C_Skill_LevelUp::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_LevelUp::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_LevelUp::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Skill_LevelUp::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Skill_LevelUp::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Skill_LevelUp::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Skill_DressTalent

// required int64 role_index = 1;
inline bool C2S_Skill_DressTalent::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Skill_DressTalent::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Skill_DressTalent::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Skill_DressTalent::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Skill_DressTalent::role_index() const {
  return role_index_;
}
inline void C2S_Skill_DressTalent::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool C2S_Skill_DressTalent::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Skill_DressTalent::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Skill_DressTalent::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Skill_DressTalent::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 C2S_Skill_DressTalent::skill_id() const {
  return skill_id_;
}
inline void C2S_Skill_DressTalent::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Skill_DressTalent

// required int64 role_index = 1;
inline bool S2C_Skill_DressTalent::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Skill_DressTalent::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Skill_DressTalent::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Skill_DressTalent::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Skill_DressTalent::role_index() const {
  return role_index_;
}
inline void S2C_Skill_DressTalent::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool S2C_Skill_DressTalent::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Skill_DressTalent::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Skill_DressTalent::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Skill_DressTalent::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 S2C_Skill_DressTalent::skill_id() const {
  return skill_id_;
}
inline void S2C_Skill_DressTalent::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Skill_DressTalent::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Skill_DressTalent::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Skill_DressTalent::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Skill_DressTalent::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Skill_DressTalent::ret_code() const {
  return *ret_code_;
}
inline void S2C_Skill_DressTalent::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_DressTalent::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_DressTalent::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Skill_DressTalent::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Skill_DressTalent::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Skill_DressTalent::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Skill_TakeOffTalent

// required int64 role_index = 1;
inline bool C2S_Skill_TakeOffTalent::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Skill_TakeOffTalent::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Skill_TakeOffTalent::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Skill_TakeOffTalent::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Skill_TakeOffTalent::role_index() const {
  return role_index_;
}
inline void C2S_Skill_TakeOffTalent::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool C2S_Skill_TakeOffTalent::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Skill_TakeOffTalent::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Skill_TakeOffTalent::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Skill_TakeOffTalent::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 C2S_Skill_TakeOffTalent::skill_id() const {
  return skill_id_;
}
inline void C2S_Skill_TakeOffTalent::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Skill_TakeOffTalent

// required int64 role_index = 1;
inline bool S2C_Skill_TakeOffTalent::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Skill_TakeOffTalent::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Skill_TakeOffTalent::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Skill_TakeOffTalent::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Skill_TakeOffTalent::role_index() const {
  return role_index_;
}
inline void S2C_Skill_TakeOffTalent::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool S2C_Skill_TakeOffTalent::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Skill_TakeOffTalent::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Skill_TakeOffTalent::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Skill_TakeOffTalent::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 S2C_Skill_TakeOffTalent::skill_id() const {
  return skill_id_;
}
inline void S2C_Skill_TakeOffTalent::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Skill_TakeOffTalent::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Skill_TakeOffTalent::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Skill_TakeOffTalent::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Skill_TakeOffTalent::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Skill_TakeOffTalent::ret_code() const {
  return *ret_code_;
}
inline void S2C_Skill_TakeOffTalent::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_TakeOffTalent::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_TakeOffTalent::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Skill_TakeOffTalent::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Skill_TakeOffTalent::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Skill_TakeOffTalent::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Skill_DressBook

// required int64 role_index = 1;
inline bool C2S_Skill_DressBook::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Skill_DressBook::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Skill_DressBook::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Skill_DressBook::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Skill_DressBook::role_index() const {
  return role_index_;
}
inline void C2S_Skill_DressBook::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool C2S_Skill_DressBook::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Skill_DressBook::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Skill_DressBook::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Skill_DressBook::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 C2S_Skill_DressBook::skill_id() const {
  return skill_id_;
}
inline void C2S_Skill_DressBook::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Skill_DressBook

// required int64 role_index = 1;
inline bool S2C_Skill_DressBook::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Skill_DressBook::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Skill_DressBook::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Skill_DressBook::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Skill_DressBook::role_index() const {
  return role_index_;
}
inline void S2C_Skill_DressBook::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool S2C_Skill_DressBook::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Skill_DressBook::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Skill_DressBook::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Skill_DressBook::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 S2C_Skill_DressBook::skill_id() const {
  return skill_id_;
}
inline void S2C_Skill_DressBook::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Skill_DressBook::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Skill_DressBook::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Skill_DressBook::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Skill_DressBook::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Skill_DressBook::ret_code() const {
  return *ret_code_;
}
inline void S2C_Skill_DressBook::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_DressBook::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_DressBook::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Skill_DressBook::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Skill_DressBook::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Skill_DressBook::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Skill_TakeOffBook

// required int64 role_index = 1;
inline bool C2S_Skill_TakeOffBook::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Skill_TakeOffBook::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Skill_TakeOffBook::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Skill_TakeOffBook::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Skill_TakeOffBook::role_index() const {
  return role_index_;
}
inline void C2S_Skill_TakeOffBook::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool C2S_Skill_TakeOffBook::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Skill_TakeOffBook::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Skill_TakeOffBook::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Skill_TakeOffBook::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 C2S_Skill_TakeOffBook::skill_id() const {
  return skill_id_;
}
inline void C2S_Skill_TakeOffBook::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// -------------------------------------------------------------------

// S2C_Skill_TakeOffBook

// required int64 role_index = 1;
inline bool S2C_Skill_TakeOffBook::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Skill_TakeOffBook::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Skill_TakeOffBook::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Skill_TakeOffBook::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Skill_TakeOffBook::role_index() const {
  return role_index_;
}
inline void S2C_Skill_TakeOffBook::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 skill_id = 2;
inline bool S2C_Skill_TakeOffBook::has_skill_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Skill_TakeOffBook::set_has_skill_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Skill_TakeOffBook::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Skill_TakeOffBook::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 S2C_Skill_TakeOffBook::skill_id() const {
  return skill_id_;
}
inline void S2C_Skill_TakeOffBook::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Skill_TakeOffBook::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Skill_TakeOffBook::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Skill_TakeOffBook::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Skill_TakeOffBook::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Skill_TakeOffBook::ret_code() const {
  return *ret_code_;
}
inline void S2C_Skill_TakeOffBook::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_TakeOffBook::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Skill_TakeOffBook::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Skill_TakeOffBook::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Skill_TakeOffBook::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Skill_TakeOffBook::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_ChangeAttrPoint

// required int64 role_index = 1;
inline bool C2S_Ask_ChangeAttrPoint::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_ChangeAttrPoint::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_ChangeAttrPoint::role_index() const {
  return role_index_;
}
inline void C2S_Ask_ChangeAttrPoint::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int32 hp_point = 2;
inline bool C2S_Ask_ChangeAttrPoint::has_hp_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_ChangeAttrPoint::set_has_hp_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_has_hp_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_hp_point() {
  hp_point_ = 0;
  clear_has_hp_point();
}
inline ::google::protobuf::int32 C2S_Ask_ChangeAttrPoint::hp_point() const {
  return hp_point_;
}
inline void C2S_Ask_ChangeAttrPoint::set_hp_point(::google::protobuf::int32 value) {
  set_has_hp_point();
  hp_point_ = value;
}

// required int32 mp_point = 3;
inline bool C2S_Ask_ChangeAttrPoint::has_mp_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_ChangeAttrPoint::set_has_mp_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_has_mp_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_mp_point() {
  mp_point_ = 0;
  clear_has_mp_point();
}
inline ::google::protobuf::int32 C2S_Ask_ChangeAttrPoint::mp_point() const {
  return mp_point_;
}
inline void C2S_Ask_ChangeAttrPoint::set_mp_point(::google::protobuf::int32 value) {
  set_has_mp_point();
  mp_point_ = value;
}

// required int32 ap_point = 4;
inline bool C2S_Ask_ChangeAttrPoint::has_ap_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Ask_ChangeAttrPoint::set_has_ap_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_has_ap_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_ap_point() {
  ap_point_ = 0;
  clear_has_ap_point();
}
inline ::google::protobuf::int32 C2S_Ask_ChangeAttrPoint::ap_point() const {
  return ap_point_;
}
inline void C2S_Ask_ChangeAttrPoint::set_ap_point(::google::protobuf::int32 value) {
  set_has_ap_point();
  ap_point_ = value;
}

// required int32 sp_point = 5;
inline bool C2S_Ask_ChangeAttrPoint::has_sp_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_Ask_ChangeAttrPoint::set_has_sp_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_has_sp_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_Ask_ChangeAttrPoint::clear_sp_point() {
  sp_point_ = 0;
  clear_has_sp_point();
}
inline ::google::protobuf::int32 C2S_Ask_ChangeAttrPoint::sp_point() const {
  return sp_point_;
}
inline void C2S_Ask_ChangeAttrPoint::set_sp_point(::google::protobuf::int32 value) {
  set_has_sp_point();
  sp_point_ = value;
}

// -------------------------------------------------------------------

// C2S_Ask_SummonpetChangeAttrPoint

// required int64 role_index = 1;
inline bool C2S_Ask_SummonpetChangeAttrPoint::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_SummonpetChangeAttrPoint::role_index() const {
  return role_index_;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 summonpet_role_index = 2;
inline bool C2S_Ask_SummonpetChangeAttrPoint::has_summonpet_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_has_summonpet_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_has_summonpet_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_summonpet_role_index() {
  summonpet_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_summonpet_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_SummonpetChangeAttrPoint::summonpet_role_index() const {
  return summonpet_role_index_;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_summonpet_role_index(::google::protobuf::int64 value) {
  set_has_summonpet_role_index();
  summonpet_role_index_ = value;
}

// required int32 hp_point = 3;
inline bool C2S_Ask_SummonpetChangeAttrPoint::has_hp_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_has_hp_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_has_hp_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_hp_point() {
  hp_point_ = 0;
  clear_has_hp_point();
}
inline ::google::protobuf::int32 C2S_Ask_SummonpetChangeAttrPoint::hp_point() const {
  return hp_point_;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_hp_point(::google::protobuf::int32 value) {
  set_has_hp_point();
  hp_point_ = value;
}

// required int32 mp_point = 4;
inline bool C2S_Ask_SummonpetChangeAttrPoint::has_mp_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_has_mp_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_has_mp_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_mp_point() {
  mp_point_ = 0;
  clear_has_mp_point();
}
inline ::google::protobuf::int32 C2S_Ask_SummonpetChangeAttrPoint::mp_point() const {
  return mp_point_;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_mp_point(::google::protobuf::int32 value) {
  set_has_mp_point();
  mp_point_ = value;
}

// required int32 ap_point = 5;
inline bool C2S_Ask_SummonpetChangeAttrPoint::has_ap_point() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_has_ap_point() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_has_ap_point() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_ap_point() {
  ap_point_ = 0;
  clear_has_ap_point();
}
inline ::google::protobuf::int32 C2S_Ask_SummonpetChangeAttrPoint::ap_point() const {
  return ap_point_;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_ap_point(::google::protobuf::int32 value) {
  set_has_ap_point();
  ap_point_ = value;
}

// required int32 sp_point = 6;
inline bool C2S_Ask_SummonpetChangeAttrPoint::has_sp_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_has_sp_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_has_sp_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::clear_sp_point() {
  sp_point_ = 0;
  clear_has_sp_point();
}
inline ::google::protobuf::int32 C2S_Ask_SummonpetChangeAttrPoint::sp_point() const {
  return sp_point_;
}
inline void C2S_Ask_SummonpetChangeAttrPoint::set_sp_point(::google::protobuf::int32 value) {
  set_has_sp_point();
  sp_point_ = value;
}

// -------------------------------------------------------------------

// C2S_Ask_CreateTeam

// required int64 role_index = 1;
inline bool C2S_Ask_CreateTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_CreateTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_CreateTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_CreateTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_CreateTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_CreateTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_CreateTeam

// required int64 role_index = 1;
inline bool S2C_Ret_CreateTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_CreateTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_CreateTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_CreateTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_CreateTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_CreateTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Ret_CreateTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_CreateTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_CreateTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_CreateTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_CreateTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_CreateTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_CreateTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_CreateTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_CreateTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_CreateTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_CreateTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_DestroyTeam

// required int64 role_index = 1;
inline bool C2S_Ask_DestroyTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_DestroyTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_DestroyTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_DestroyTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_DestroyTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_DestroyTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_DestroyTeam

// required int64 role_index = 1;
inline bool S2C_Ret_DestroyTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_DestroyTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_DestroyTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_DestroyTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_DestroyTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_DestroyTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Ret_DestroyTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_DestroyTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_DestroyTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_DestroyTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_DestroyTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_DestroyTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_DestroyTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_DestroyTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_DestroyTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_DestroyTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_DestroyTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_InviteEnterTeam

// required int64 role_index = 1;
inline bool C2S_Ask_InviteEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_InviteEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_InviteEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_InviteEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_InviteEnterTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_InviteEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_role_index = 2;
inline bool C2S_Ask_InviteEnterTeam::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_InviteEnterTeam::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_InviteEnterTeam::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_InviteEnterTeam::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_InviteEnterTeam::tar_role_index() const {
  return tar_role_index_;
}
inline void C2S_Ask_InviteEnterTeam::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required int64 team_index = 3;
inline bool C2S_Ask_InviteEnterTeam::has_team_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_InviteEnterTeam::set_has_team_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_InviteEnterTeam::clear_has_team_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_InviteEnterTeam::clear_team_index() {
  team_index_ = GOOGLE_LONGLONG(0);
  clear_has_team_index();
}
inline ::google::protobuf::int64 C2S_Ask_InviteEnterTeam::team_index() const {
  return team_index_;
}
inline void C2S_Ask_InviteEnterTeam::set_team_index(::google::protobuf::int64 value) {
  set_has_team_index();
  team_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_InviteEnterTeam

// required int64 role_index = 1;
inline bool S2C_Ret_InviteEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_InviteEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_InviteEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_InviteEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_InviteEnterTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_InviteEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Ret_InviteEnterTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_InviteEnterTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_InviteEnterTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_InviteEnterTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_InviteEnterTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_InviteEnterTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_InviteEnterTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_InviteEnterTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_InviteEnterTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_InviteEnterTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_InviteEnterTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 team_index = 3;
inline bool S2C_Ret_InviteEnterTeam::has_team_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_InviteEnterTeam::set_has_team_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_InviteEnterTeam::clear_has_team_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_InviteEnterTeam::clear_team_index() {
  team_index_ = GOOGLE_LONGLONG(0);
  clear_has_team_index();
}
inline ::google::protobuf::int64 S2C_Ret_InviteEnterTeam::team_index() const {
  return team_index_;
}
inline void S2C_Ret_InviteEnterTeam::set_team_index(::google::protobuf::int64 value) {
  set_has_team_index();
  team_index_ = value;
}

// -------------------------------------------------------------------

// C2S_Ask_ApplyEnterTeam

// required int64 role_index = 1;
inline bool C2S_Ask_ApplyEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_ApplyEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_ApplyEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_ApplyEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_ApplyEnterTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_ApplyEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 team_index = 2;
inline bool C2S_Ask_ApplyEnterTeam::has_team_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_ApplyEnterTeam::set_has_team_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_ApplyEnterTeam::clear_has_team_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_ApplyEnterTeam::clear_team_index() {
  team_index_ = GOOGLE_LONGLONG(0);
  clear_has_team_index();
}
inline ::google::protobuf::int64 C2S_Ask_ApplyEnterTeam::team_index() const {
  return team_index_;
}
inline void C2S_Ask_ApplyEnterTeam::set_team_index(::google::protobuf::int64 value) {
  set_has_team_index();
  team_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_ApplyEnterTeam

// required int64 role_index = 1;
inline bool S2C_Ret_ApplyEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_ApplyEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_ApplyEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_ApplyEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_ApplyEnterTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_ApplyEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Ret_ApplyEnterTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_ApplyEnterTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_ApplyEnterTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_ApplyEnterTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_ApplyEnterTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_ApplyEnterTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_ApplyEnterTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_ApplyEnterTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_ApplyEnterTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_ApplyEnterTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_ApplyEnterTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_ApplyLeaveTeam

// required int64 role_index = 1;
inline bool C2S_Ask_ApplyLeaveTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_ApplyLeaveTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_ApplyLeaveTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_ApplyLeaveTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_ApplyLeaveTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_ApplyLeaveTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_ApplyLeaveTeam

// required int64 role_index = 1;
inline bool S2C_Ret_ApplyLeaveTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_ApplyLeaveTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_ApplyLeaveTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_ApplyLeaveTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_ApplyLeaveTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_ApplyLeaveTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes ret_code = 2;
inline bool S2C_Ret_ApplyLeaveTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_ApplyLeaveTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_ApplyLeaveTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_ApplyLeaveTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_ApplyLeaveTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_ApplyLeaveTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_ApplyLeaveTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_ApplyLeaveTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_ApplyLeaveTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_ApplyLeaveTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_ApplyLeaveTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_AgreeEnterTeam

// required int64 role_index = 1;
inline bool C2S_Ask_AgreeEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_AgreeEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_AgreeEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_AgreeEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_AgreeEnterTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_AgreeEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_index = 2;
inline bool C2S_Ask_AgreeEnterTeam::has_tar_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_AgreeEnterTeam::set_has_tar_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_AgreeEnterTeam::clear_has_tar_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_AgreeEnterTeam::clear_tar_index() {
  tar_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_index();
}
inline ::google::protobuf::int64 C2S_Ask_AgreeEnterTeam::tar_index() const {
  return tar_index_;
}
inline void C2S_Ask_AgreeEnterTeam::set_tar_index(::google::protobuf::int64 value) {
  set_has_tar_index();
  tar_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_AgreeEnterTeam

// required int64 role_index = 1;
inline bool S2C_Ret_AgreeEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_AgreeEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_AgreeEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_AgreeEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_AgreeEnterTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_AgreeEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_index = 2;
inline bool S2C_Ret_AgreeEnterTeam::has_tar_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_AgreeEnterTeam::set_has_tar_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_AgreeEnterTeam::clear_has_tar_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_AgreeEnterTeam::clear_tar_index() {
  tar_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_index();
}
inline ::google::protobuf::int64 S2C_Ret_AgreeEnterTeam::tar_index() const {
  return tar_index_;
}
inline void S2C_Ret_AgreeEnterTeam::set_tar_index(::google::protobuf::int64 value) {
  set_has_tar_index();
  tar_index_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Ret_AgreeEnterTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_AgreeEnterTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_AgreeEnterTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_AgreeEnterTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_AgreeEnterTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_AgreeEnterTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_AgreeEnterTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_AgreeEnterTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_AgreeEnterTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_AgreeEnterTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_AgreeEnterTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_RefuseEnterTeam

// required int64 role_index = 1;
inline bool C2S_Ask_RefuseEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_RefuseEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_RefuseEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_RefuseEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_RefuseEnterTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_RefuseEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_index = 2;
inline bool C2S_Ask_RefuseEnterTeam::has_tar_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_RefuseEnterTeam::set_has_tar_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_RefuseEnterTeam::clear_has_tar_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_RefuseEnterTeam::clear_tar_index() {
  tar_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_index();
}
inline ::google::protobuf::int64 C2S_Ask_RefuseEnterTeam::tar_index() const {
  return tar_index_;
}
inline void C2S_Ask_RefuseEnterTeam::set_tar_index(::google::protobuf::int64 value) {
  set_has_tar_index();
  tar_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_RefuseEnterTeam

// required int64 role_index = 1;
inline bool S2C_Ret_RefuseEnterTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_RefuseEnterTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_RefuseEnterTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_RefuseEnterTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_RefuseEnterTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_RefuseEnterTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_index = 2;
inline bool S2C_Ret_RefuseEnterTeam::has_tar_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_RefuseEnterTeam::set_has_tar_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_RefuseEnterTeam::clear_has_tar_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_RefuseEnterTeam::clear_tar_index() {
  tar_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_index();
}
inline ::google::protobuf::int64 S2C_Ret_RefuseEnterTeam::tar_index() const {
  return tar_index_;
}
inline void S2C_Ret_RefuseEnterTeam::set_tar_index(::google::protobuf::int64 value) {
  set_has_tar_index();
  tar_index_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Ret_RefuseEnterTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_RefuseEnterTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_RefuseEnterTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_RefuseEnterTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_RefuseEnterTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_RefuseEnterTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_RefuseEnterTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_RefuseEnterTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_RefuseEnterTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_RefuseEnterTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_RefuseEnterTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_KickLeaveTeam

// required int64 role_index = 1;
inline bool C2S_Ask_KickLeaveTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_KickLeaveTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_KickLeaveTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_KickLeaveTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_KickLeaveTeam::role_index() const {
  return role_index_;
}
inline void C2S_Ask_KickLeaveTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_index = 2;
inline bool C2S_Ask_KickLeaveTeam::has_tar_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_KickLeaveTeam::set_has_tar_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_KickLeaveTeam::clear_has_tar_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_KickLeaveTeam::clear_tar_index() {
  tar_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_index();
}
inline ::google::protobuf::int64 C2S_Ask_KickLeaveTeam::tar_index() const {
  return tar_index_;
}
inline void C2S_Ask_KickLeaveTeam::set_tar_index(::google::protobuf::int64 value) {
  set_has_tar_index();
  tar_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_KickLeaveTeam

// required int64 role_index = 1;
inline bool S2C_Ret_KickLeaveTeam::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Ret_KickLeaveTeam::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Ret_KickLeaveTeam::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Ret_KickLeaveTeam::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_Ret_KickLeaveTeam::role_index() const {
  return role_index_;
}
inline void S2C_Ret_KickLeaveTeam::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required int64 tar_index = 2;
inline bool S2C_Ret_KickLeaveTeam::has_tar_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Ret_KickLeaveTeam::set_has_tar_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Ret_KickLeaveTeam::clear_has_tar_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Ret_KickLeaveTeam::clear_tar_index() {
  tar_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_index();
}
inline ::google::protobuf::int64 S2C_Ret_KickLeaveTeam::tar_index() const {
  return tar_index_;
}
inline void S2C_Ret_KickLeaveTeam::set_tar_index(::google::protobuf::int64 value) {
  set_has_tar_index();
  tar_index_ = value;
}

// required bytes ret_code = 3;
inline bool S2C_Ret_KickLeaveTeam::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Ret_KickLeaveTeam::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Ret_KickLeaveTeam::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Ret_KickLeaveTeam::clear_ret_code() {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    ret_code_->clear();
  }
  clear_has_ret_code();
}
inline const ::std::string& S2C_Ret_KickLeaveTeam::ret_code() const {
  return *ret_code_;
}
inline void S2C_Ret_KickLeaveTeam::set_ret_code(const ::std::string& value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_KickLeaveTeam::set_ret_code(const char* value) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(value);
}
inline void S2C_Ret_KickLeaveTeam::set_ret_code(const void* value, size_t size) {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  ret_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Ret_KickLeaveTeam::mutable_ret_code() {
  set_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    ret_code_ = new ::std::string;
  }
  return ret_code_;
}
inline ::std::string* S2C_Ret_KickLeaveTeam::release_ret_code() {
  clear_has_ret_code();
  if (ret_code_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = ret_code_;
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Ret_KickLeaveTeam::set_allocated_ret_code(::std::string* ret_code) {
  if (ret_code_ != &::google::protobuf::internal::kEmptyString) {
    delete ret_code_;
  }
  if (ret_code) {
    set_has_ret_code();
    ret_code_ = ret_code;
  } else {
    clear_has_ret_code();
    ret_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Ask_TeamInfo

// required int64 role_index = 1;
inline bool C2S_Ask_TeamInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_TeamInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_TeamInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_TeamInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_TeamInfo::role_index() const {
  return role_index_;
}
inline void C2S_Ask_TeamInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_Ret_TeamInfo

// repeated .universal_data teams = 1;
inline int S2C_Ret_TeamInfo::teams_size() const {
  return teams_.size();
}
inline void S2C_Ret_TeamInfo::clear_teams() {
  teams_.Clear();
}
inline const ::universal_data& S2C_Ret_TeamInfo::teams(int index) const {
  return teams_.Get(index);
}
inline ::universal_data* S2C_Ret_TeamInfo::mutable_teams(int index) {
  return teams_.Mutable(index);
}
inline ::universal_data* S2C_Ret_TeamInfo::add_teams() {
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
S2C_Ret_TeamInfo::teams() const {
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
S2C_Ret_TeamInfo::mutable_teams() {
  return &teams_;
}

// repeated int64 destroy_teams = 2;
inline int S2C_Ret_TeamInfo::destroy_teams_size() const {
  return destroy_teams_.size();
}
inline void S2C_Ret_TeamInfo::clear_destroy_teams() {
  destroy_teams_.Clear();
}
inline ::google::protobuf::int64 S2C_Ret_TeamInfo::destroy_teams(int index) const {
  return destroy_teams_.Get(index);
}
inline void S2C_Ret_TeamInfo::set_destroy_teams(int index, ::google::protobuf::int64 value) {
  destroy_teams_.Set(index, value);
}
inline void S2C_Ret_TeamInfo::add_destroy_teams(::google::protobuf::int64 value) {
  destroy_teams_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
S2C_Ret_TeamInfo::destroy_teams() const {
  return destroy_teams_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
S2C_Ret_TeamInfo::mutable_destroy_teams() {
  return &destroy_teams_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_NetPacket_2eproto__INCLUDED
