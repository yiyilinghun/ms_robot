// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnumDef.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EnumDef.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* E_MSG_VERSION_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_OBJECT_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_ITEM_DEF_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_EQUIP_SITE_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_GOODS_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_ROLE_STATE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_SCENE_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_SYUC_RET_CODE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_CHAT_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* FACE_SHOP_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_BATTLE_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_BATTLE_FIGHT_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_BATTLE_PLAY_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_BATTLE_MODE_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_BATTLE_RESULT_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_BATTLE_LOG_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_BATTLE_CAMP_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* E_ONLINE_UNIT_RET_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* EQUIP_POS_TYPE_descriptor_ = nullptr;
const ::google::protobuf::EnumDescriptor* EQUIP_TYPE_descriptor_ = nullptr;

}  // namespace


void protobuf_AssignDesc_EnumDef_2eproto() {
  protobuf_AddDesc_EnumDef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EnumDef.proto");
  GOOGLE_CHECK(file != nullptr);
  E_MSG_VERSION_descriptor_ = file->enum_type(0);
  E_OBJECT_TYPE_descriptor_ = file->enum_type(1);
  E_ITEM_DEF_descriptor_ = file->enum_type(2);
  E_EQUIP_SITE_TYPE_descriptor_ = file->enum_type(3);
  E_GOODS_TYPE_descriptor_ = file->enum_type(4);
  E_ROLE_STATE_descriptor_ = file->enum_type(5);
  E_SCENE_TYPE_descriptor_ = file->enum_type(6);
  E_SYUC_RET_CODE_descriptor_ = file->enum_type(7);
  E_CHAT_TYPE_descriptor_ = file->enum_type(8);
  FACE_SHOP_TYPE_descriptor_ = file->enum_type(9);
  E_BATTLE_TYPE_descriptor_ = file->enum_type(10);
  E_BATTLE_FIGHT_TYPE_descriptor_ = file->enum_type(11);
  E_BATTLE_PLAY_TYPE_descriptor_ = file->enum_type(12);
  E_BATTLE_MODE_TYPE_descriptor_ = file->enum_type(13);
  E_BATTLE_RESULT_TYPE_descriptor_ = file->enum_type(14);
  E_BATTLE_LOG_TYPE_descriptor_ = file->enum_type(15);
  E_BATTLE_CAMP_TYPE_descriptor_ = file->enum_type(16);
  E_ONLINE_UNIT_RET_descriptor_ = file->enum_type(17);
  EQUIP_POS_TYPE_descriptor_ = file->enum_type(18);
  EQUIP_TYPE_descriptor_ = file->enum_type(19);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EnumDef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_EnumDef_2eproto() {
}

void protobuf_AddDesc_EnumDef_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rEnumDef.proto*<\n\rE_MSG_VERSION\022\027\n\023MSG_"
    "VERSION_INVALID\020\000\022\022\n\016MSG_VERSION_ID\020\001*y\n"
    "\rE_OBJECT_TYPE\022\017\n\013EOT_INVALID\020\000\022\016\n\nEOT_P"
    "LAYER\020\001\022\021\n\rEOT_SUMMONPET\020\002\022\013\n\007EOT_NPC\020\003\022"
    "\017\n\013EOT_MONSTER\020\004\022\026\n\022EOT_TRANSFER_POINT\020\005"
    "*\355\001\n\nE_ITEM_DEF\022\017\n\013EID_INVALID\020\000\022\013\n\007GOLD"
    "_ID\020\001\022\020\n\014ENDURANCE_ID\020\002\022\023\n\017DIAMOND_COIN_"
    "ID\020\003\022\n\n\006EXP_ID\020\004\022\021\n\rSKILL_POIN_ID\020\005\022\023\n\016P"
    "ACKAGE_MIN_ID\020\221N\022\024\n\016PACKAGE_MAX_ID\020\237\234\001\022\022"
    "\n\013ITEM_MIN_ID\020\200\255\342\004\022\022\n\013ITEM_MAX_ID\020\377\331\304\t\022\023"
    "\n\014EQUIP_MIN_ID\020\200\332\304\t\022\023\n\014EQUIP_MAX_ID\020\377\206\247\016"
    "*\220\001\n\021E_EQUIP_SITE_TYPE\022\020\n\014EEST_INVALID\020\000"
    "\022\017\n\013EEST_HELMET\020\001\022\020\n\014EEST_CLOTHES\020\002\022\016\n\nE"
    "EST_SHOES\020\003\022\022\n\016EEST_ORNAMENTS\020\004\022\020\n\014EEST_"
    "WEAPONS\020\005\022\020\n\014EEST_VEHICLE\020\006*\244\001\n\014E_GOODS_"
    "TYPE\022\017\n\013EGT_INVALID\020\000\022\014\n\010EGT_GOLD\020\001\022\017\n\013E"
    "GT_STAMINA\020\002\022\024\n\020EGT_DIAMOND_COIN\020\003\022\013\n\007EG"
    "T_EXP\020\004\022\023\n\017EGT_SKILL_POINT\020\005\022\017\n\013EGT_PACK"
    "AGE\020e\022\014\n\010EGT_ITEM\020f\022\r\n\tEGT_EQUIP\020g*A\n\014E_"
    "ROLE_STATE\022\r\n\tERS_IN_DB\020\000\022\020\n\014ERS_IN_LOGI"
    "N\020\001\022\020\n\014ERS_IN_SCENE\020\002*I\n\014E_SCENE_TYPE\022\017\n"
    "\013EST_INVALID\020\000\022\022\n\016EST_GAME_SCENE\020\001\022\024\n\020ES"
    "T_BATTLE_SCENE\020\002*3\n\017E_SYUC_RET_CODE\022\t\n\005R"
    "C_OK\020\000\022\n\n\006RC_YES\020\001\022\t\n\005RC_NO\020\002*,\n\013E_CHAT_"
    "TYPE\022\017\n\013ECT_CURRENT\020\000\022\014\n\010ECT_TEAM\020\001*C\n\016F"
    "ACE_SHOP_TYPE\022\017\n\013FST_INVALID\020\000\022\016\n\nFST_NO"
    "RMAL\020\001\022\020\n\014FST_DISCOUNT\020\002*:\n\rE_BATTLE_TYP"
    "E\022\017\n\013EBT_INVALID\020\000\022\013\n\007EBT_PVE\020\001\022\013\n\007EBT_P"
    "VP\020\002*F\n\023E_BATTLE_FIGHT_TYPE\022\020\n\014EBFT_INVA"
    "LID\020\000\022\r\n\tEBFT_RISK\020\001\022\016\n\nEBFT_ARENA\020\002*G\n\022"
    "E_BATTLE_PLAY_TYPE\022\020\n\014EBPT_INVALID\020\000\022\016\n\n"
    "EBPT_NOMAL\020\001\022\017\n\013EBPT_REPLAY\020\002*L\n\022E_BATTL"
    "E_MODE_TYPE\022\020\n\014EBMT_INVALID\020\000\022\017\n\013EBMT_NO"
    "RMAL\020\001\022\023\n\017EBMT_MODE_VIDEO\020\002*W\n\024E_BATTLE_"
    "RESULT_TYPE\022\020\n\014EBRT_INVALID\020\000\022\014\n\010EBRT_WI"
    "N\020\001\022\r\n\tEBRT_LOSE\020\002\022\020\n\014EBRT_DOGFULL\020\003*O\n\021"
    "E_BATTLE_LOG_TYPE\022\020\n\014LOGT_INVALID\020\000\022\022\n\016L"
    "OGT_USER_CARD\020\001\022\024\n\020LOGT_COLLECT_BOX\020\002*N\n"
    "\022E_BATTLE_CAMP_TYPE\022\020\n\014CAMP_INVALID\020\000\022\021\n"
    "\rCAMP_TYPE_OWN\020\001\022\023\n\017CAMP_TYPE_ENEMY\020\002*\212\001"
    "\n\021E_ONLINE_UNIT_RET\022\013\n\007EOUR_OK\020\000\022\017\n\013EOUR"
    "_FAILED\020\001\022\022\n\016EOUR_NOT_EXIST\020\002\022\016\n\nEOUR_EX"
    "IST\020\003\022\024\n\020EOUR_COUNT_LIMIT\020\004\022\035\n\031EOUR_CENT"
    "ER_CAN_NOT_REACH\020\005*\270\001\n\016EQUIP_POS_TYPE\022\017\n"
    "\013EPT_PI_FENG\020\000\022\016\n\nEPT_MAO_ZI\020\001\022\r\n\tEPT_WU"
    "_QI\020\002\022\r\n\tEPT_YI_FU\020\003\022\020\n\014EPT_GUA_JIAN\020\004\022\016"
    "\n\nEPT_XIE_ZI\020\005\022\017\n\013EPT_MIAN_JU\020\006\022\022\n\016EPT_X"
    "IANG_LIAN\020\007\022\017\n\013EPT_JIE_ZHI\020\010\022\017\n\013EPT_YAO_"
    "DAI\020\t*\241\004\n\nEQUIP_TYPE\022\016\n\nET_INVALID\020\000\022\022\n\016"
    "ET_PI_FENG_NAN\020\001\022\021\n\rET_PI_FENG_NV\020\002\022\021\n\rE"
    "T_MAO_ZI_NAN\020\003\022\020\n\014ET_MAO_ZI_NV\020\004\022\020\n\014ET_Y"
    "I_FU_NAN\020\005\022\017\n\013ET_YI_FU_NV\020\006\022\023\n\017ET_GUA_JI"
    "AN_NAN\020\007\022\022\n\016ET_GUA_JIAN_NV\020\010\022\022\n\016ET_MIAN_"
    "JU_NAN\020\t\022\021\n\rET_MIAN_JU_NV\020\n\022\021\n\rET_WU_QI_"
    "JIAN\020\020\022\020\n\014ET_WU_QI_DAO\020\021\022\021\n\rET_WU_QI_BIA"
    "N\020\022\022\021\n\rET_WU_QI_CHUI\020\023\022\020\n\014ET_WU_QI_GUN\020\024"
    "\022\021\n\rET_WU_QI_ZHUA\020\025\022\022\n\016ET_WU_QI_QIANG\020\026\022"
    "\017\n\013ET_WU_QI_FU\020\027\022\021\n\rET_WU_QI_SHAN\020\030\022\020\n\014E"
    "T_WU_QI_GOU\020\031\022\021\n\rET_WU_QI_QUAN\020\032\022\021\n\rET_W"
    "U_QI_CHEN\020\033\022\020\n\014ET_WU_QI_FAN\020\034\022\020\n\014ET_WU_Q"
    "I_DAI\020\035\022\021\n\rET_XIANG_LIAN\020 \022\r\n\tET_XIE_ZI\020"
    "!\022\016\n\nET_JIE_ZHI\020\"\022\016\n\nET_YAO_DAI\020#", 2473);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EnumDef.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EnumDef_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EnumDef_2eproto {
  StaticDescriptorInitializer_EnumDef_2eproto() {
    protobuf_AddDesc_EnumDef_2eproto();
  }
} static_descriptor_initializer_EnumDef_2eproto_;
const ::google::protobuf::EnumDescriptor* E_MSG_VERSION_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_MSG_VERSION_descriptor_;
}
bool E_MSG_VERSION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_OBJECT_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_OBJECT_TYPE_descriptor_;
}
bool E_OBJECT_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ITEM_DEF_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ITEM_DEF_descriptor_;
}
bool E_ITEM_DEF_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10001:
    case 19999:
    case 10000000:
    case 19999999:
    case 20000000:
    case 29999999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_EQUIP_SITE_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_EQUIP_SITE_TYPE_descriptor_;
}
bool E_EQUIP_SITE_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_GOODS_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_GOODS_TYPE_descriptor_;
}
bool E_GOODS_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 101:
    case 102:
    case 103:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ROLE_STATE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ROLE_STATE_descriptor_;
}
bool E_ROLE_STATE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_SCENE_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SCENE_TYPE_descriptor_;
}
bool E_SCENE_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_SYUC_RET_CODE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_SYUC_RET_CODE_descriptor_;
}
bool E_SYUC_RET_CODE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_CHAT_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_CHAT_TYPE_descriptor_;
}
bool E_CHAT_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FACE_SHOP_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FACE_SHOP_TYPE_descriptor_;
}
bool FACE_SHOP_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_BATTLE_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BATTLE_TYPE_descriptor_;
}
bool E_BATTLE_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_BATTLE_FIGHT_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BATTLE_FIGHT_TYPE_descriptor_;
}
bool E_BATTLE_FIGHT_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_BATTLE_PLAY_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BATTLE_PLAY_TYPE_descriptor_;
}
bool E_BATTLE_PLAY_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_BATTLE_MODE_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BATTLE_MODE_TYPE_descriptor_;
}
bool E_BATTLE_MODE_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_BATTLE_RESULT_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BATTLE_RESULT_TYPE_descriptor_;
}
bool E_BATTLE_RESULT_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_BATTLE_LOG_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BATTLE_LOG_TYPE_descriptor_;
}
bool E_BATTLE_LOG_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_BATTLE_CAMP_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_BATTLE_CAMP_TYPE_descriptor_;
}
bool E_BATTLE_CAMP_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_ONLINE_UNIT_RET_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_ONLINE_UNIT_RET_descriptor_;
}
bool E_ONLINE_UNIT_RET_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EQUIP_POS_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EQUIP_POS_TYPE_descriptor_;
}
bool EQUIP_POS_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EQUIP_TYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EQUIP_TYPE_descriptor_;
}
bool EQUIP_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 32:
    case 33:
    case 34:
    case 35:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
