// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

#ifndef PROTOBUF_Common_2eproto__INCLUDED
#define PROTOBUF_Common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EnumDef.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Common_2eproto();
void protobuf_AssignDesc_Common_2eproto();
void protobuf_ShutdownFile_Common_2eproto();

class universal_data;
class item_config;
class Sql_Result_Login;
class GameSkillActionInfos;
class GameShopAvatarInfo;
class reward_info;
class BattleHeroAttribute;
class BattleHeroData;
class BattleHeroGroup;
class BattleFightData;
class BattleData;
class BattleEventData;
class proto_BattleEvent;
class BattleLog;
class BattleResultData;
class FindWayPath;
class FindWayInfo;
class FindWayData;

// ===================================================================

class universal_data : public ::google::protobuf::Message {
 public:
  universal_data();
  virtual ~universal_data();

  universal_data(const universal_data& from);

  inline universal_data& operator=(const universal_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const universal_data& default_instance();

  void Swap(universal_data* other);

  // implements Message ----------------------------------------------

  universal_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const universal_data& from);
  void MergeFrom(const universal_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);

  // optional bytes type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const void* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 code = 4;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 4;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // repeated bool b = 10;
  inline int b_size() const;
  inline void clear_b();
  static const int kBFieldNumber = 10;
  inline bool b(int index) const;
  inline void set_b(int index, bool value);
  inline void add_b(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      b() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_b();

  // repeated float f = 11;
  inline int f_size() const;
  inline void clear_f();
  static const int kFFieldNumber = 11;
  inline float f(int index) const;
  inline void set_f(int index, float value);
  inline void add_f(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      f() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_f();

  // repeated double d = 12;
  inline int d_size() const;
  inline void clear_d();
  static const int kDFieldNumber = 12;
  inline double d(int index) const;
  inline void set_d(int index, double value);
  inline void add_d(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      d() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_d();

  // repeated sint32 e = 13;
  inline int e_size() const;
  inline void clear_e();
  static const int kEFieldNumber = 13;
  inline ::google::protobuf::int32 e(int index) const;
  inline void set_e(int index, ::google::protobuf::int32 value);
  inline void add_e(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      e() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_e();

  // repeated sint32 i32 = 14;
  inline int i32_size() const;
  inline void clear_i32();
  static const int kI32FieldNumber = 14;
  inline ::google::protobuf::int32 i32(int index) const;
  inline void set_i32(int index, ::google::protobuf::int32 value);
  inline void add_i32(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      i32() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_i32();

  // repeated sint64 i64 = 15;
  inline int i64_size() const;
  inline void clear_i64();
  static const int kI64FieldNumber = 15;
  inline ::google::protobuf::int64 i64(int index) const;
  inline void set_i64(int index, ::google::protobuf::int64 value);
  inline void add_i64(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      i64() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_i64();

  // repeated uint32 u32 = 16;
  inline int u32_size() const;
  inline void clear_u32();
  static const int kU32FieldNumber = 16;
  inline ::google::protobuf::uint32 u32(int index) const;
  inline void set_u32(int index, ::google::protobuf::uint32 value);
  inline void add_u32(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      u32() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_u32();

  // repeated uint64 u64 = 17;
  inline int u64_size() const;
  inline void clear_u64();
  static const int kU64FieldNumber = 17;
  inline ::google::protobuf::uint64 u64(int index) const;
  inline void set_u64(int index, ::google::protobuf::uint64 value);
  inline void add_u64(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      u64() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_u64();

  // repeated bytes str = 18;
  inline int str_size() const;
  inline void clear_str();
  static const int kStrFieldNumber = 18;
  inline const ::std::string& str(int index) const;
  inline ::std::string* mutable_str(int index);
  inline void set_str(int index, const ::std::string& value);
  inline void set_str(int index, const char* value);
  inline void set_str(int index, const void* value, size_t size);
  inline ::std::string* add_str();
  inline void add_str(const ::std::string& value);
  inline void add_str(const char* value);
  inline void add_str(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& str() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_str();

  // repeated .universal_data sub = 100;
  inline int sub_size() const;
  inline void clear_sub();
  static const int kSubFieldNumber = 100;
  inline const ::universal_data& sub(int index) const;
  inline ::universal_data* mutable_sub(int index);
  inline ::universal_data* add_sub();
  inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
      sub() const;
  inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
      mutable_sub();

  // @@protoc_insertion_point(class_scope:universal_data)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 key_;
  ::std::string* type_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< bool > b_;
  ::google::protobuf::RepeatedField< float > f_;
  ::google::protobuf::RepeatedField< double > d_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > e_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > i32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > i64_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > u32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > u64_;
  ::google::protobuf::RepeatedPtrField< ::std::string> str_;
  ::google::protobuf::RepeatedPtrField< ::universal_data > sub_;
  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static universal_data* default_instance_;
};
// -------------------------------------------------------------------

class item_config : public ::google::protobuf::Message {
 public:
  item_config();
  virtual ~item_config();

  item_config(const item_config& from);

  inline item_config& operator=(const item_config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const item_config& default_instance();

  void Swap(item_config* other);

  // implements Message ----------------------------------------------

  item_config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const item_config& from);
  void MergeFrom(const item_config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 item_count = 2;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 2;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:item_config)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static item_config* default_instance_;
};
// -------------------------------------------------------------------

class Sql_Result_Login : public ::google::protobuf::Message {
 public:
  Sql_Result_Login();
  virtual ~Sql_Result_Login();

  Sql_Result_Login(const Sql_Result_Login& from);

  inline Sql_Result_Login& operator=(const Sql_Result_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sql_Result_Login& default_instance();

  void Swap(Sql_Result_Login* other);

  // implements Message ----------------------------------------------

  Sql_Result_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sql_Result_Login& from);
  void MergeFrom(const Sql_Result_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required bytes username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const void* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required bytes password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const void* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // required int64 createtime = 4;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 4;
  inline ::google::protobuf::int64 createtime() const;
  inline void set_createtime(::google::protobuf::int64 value);

  // required int64 logintime = 5;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLogintimeFieldNumber = 5;
  inline ::google::protobuf::int64 logintime() const;
  inline void set_logintime(::google::protobuf::int64 value);

  // required uint64 phone = 6;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 6;
  inline ::google::protobuf::uint64 phone() const;
  inline void set_phone(::google::protobuf::uint64 value);

  // required int64 email = 7;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 7;
  inline ::google::protobuf::int64 email() const;
  inline void set_email(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Sql_Result_Login)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_email();
  inline void clear_has_email();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* username_;
  ::std::string* password_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int64 logintime_;
  ::google::protobuf::uint64 phone_;
  ::google::protobuf::int64 email_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static Sql_Result_Login* default_instance_;
};
// -------------------------------------------------------------------

class GameSkillActionInfos : public ::google::protobuf::Message {
 public:
  GameSkillActionInfos();
  virtual ~GameSkillActionInfos();

  GameSkillActionInfos(const GameSkillActionInfos& from);

  inline GameSkillActionInfos& operator=(const GameSkillActionInfos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameSkillActionInfos& default_instance();

  void Swap(GameSkillActionInfos* other);

  // implements Message ----------------------------------------------

  GameSkillActionInfos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameSkillActionInfos& from);
  void MergeFrom(const GameSkillActionInfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes res_file_name = 1;
  inline bool has_res_file_name() const;
  inline void clear_res_file_name();
  static const int kResFileNameFieldNumber = 1;
  inline const ::std::string& res_file_name() const;
  inline void set_res_file_name(const ::std::string& value);
  inline void set_res_file_name(const char* value);
  inline void set_res_file_name(const void* value, size_t size);
  inline ::std::string* mutable_res_file_name();
  inline ::std::string* release_res_file_name();
  inline void set_allocated_res_file_name(::std::string* res_file_name);

  // required sint32 action_key = 2;
  inline bool has_action_key() const;
  inline void clear_action_key();
  static const int kActionKeyFieldNumber = 2;
  inline ::google::protobuf::int32 action_key() const;
  inline void set_action_key(::google::protobuf::int32 value);

  // required sint32 action_wav = 3;
  inline bool has_action_wav() const;
  inline void clear_action_wav();
  static const int kActionWavFieldNumber = 3;
  inline ::google::protobuf::int32 action_wav() const;
  inline void set_action_wav(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameSkillActionInfos)
 private:
  inline void set_has_res_file_name();
  inline void clear_has_res_file_name();
  inline void set_has_action_key();
  inline void clear_has_action_key();
  inline void set_has_action_wav();
  inline void clear_has_action_wav();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* res_file_name_;
  ::google::protobuf::int32 action_key_;
  ::google::protobuf::int32 action_wav_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static GameSkillActionInfos* default_instance_;
};
// -------------------------------------------------------------------

class GameShopAvatarInfo : public ::google::protobuf::Message {
 public:
  GameShopAvatarInfo();
  virtual ~GameShopAvatarInfo();

  GameShopAvatarInfo(const GameShopAvatarInfo& from);

  inline GameShopAvatarInfo& operator=(const GameShopAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameShopAvatarInfo& default_instance();

  void Swap(GameShopAvatarInfo* other);

  // implements Message ----------------------------------------------

  GameShopAvatarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameShopAvatarInfo& from);
  void MergeFrom(const GameShopAvatarInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .FACE_SHOP_TYPE face_shop_type = 1 [default = FST_NORMAL];
  inline bool has_face_shop_type() const;
  inline void clear_face_shop_type();
  static const int kFaceShopTypeFieldNumber = 1;
  inline ::FACE_SHOP_TYPE face_shop_type() const;
  inline void set_face_shop_type(::FACE_SHOP_TYPE value);

  // required sint32 goods_index = 2;
  inline bool has_goods_index() const;
  inline void clear_goods_index();
  static const int kGoodsIndexFieldNumber = 2;
  inline ::google::protobuf::int32 goods_index() const;
  inline void set_goods_index(::google::protobuf::int32 value);

  // required sint32 face_id = 3;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 3;
  inline ::google::protobuf::int32 face_id() const;
  inline void set_face_id(::google::protobuf::int32 value);

  // required bool already_buy = 4;
  inline bool has_already_buy() const;
  inline void clear_already_buy();
  static const int kAlreadyBuyFieldNumber = 4;
  inline bool already_buy() const;
  inline void set_already_buy(bool value);

  // @@protoc_insertion_point(class_scope:GameShopAvatarInfo)
 private:
  inline void set_has_face_shop_type();
  inline void clear_has_face_shop_type();
  inline void set_has_goods_index();
  inline void clear_has_goods_index();
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_already_buy();
  inline void clear_has_already_buy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int face_shop_type_;
  ::google::protobuf::int32 goods_index_;
  ::google::protobuf::int32 face_id_;
  bool already_buy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static GameShopAvatarInfo* default_instance_;
};
// -------------------------------------------------------------------

class reward_info : public ::google::protobuf::Message {
 public:
  reward_info();
  virtual ~reward_info();

  reward_info(const reward_info& from);

  inline reward_info& operator=(const reward_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const reward_info& default_instance();

  void Swap(reward_info* other);

  // implements Message ----------------------------------------------

  reward_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const reward_info& from);
  void MergeFrom(const reward_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required sint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:reward_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static reward_info* default_instance_;
};
// -------------------------------------------------------------------

class BattleHeroAttribute : public ::google::protobuf::Message {
 public:
  BattleHeroAttribute();
  virtual ~BattleHeroAttribute();

  BattleHeroAttribute(const BattleHeroAttribute& from);

  inline BattleHeroAttribute& operator=(const BattleHeroAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleHeroAttribute& default_instance();

  void Swap(BattleHeroAttribute* other);

  // implements Message ----------------------------------------------

  BattleHeroAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleHeroAttribute& from);
  void MergeFrom(const BattleHeroAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 max_hp = 1;
  inline bool has_max_hp() const;
  inline void clear_max_hp();
  static const int kMaxHpFieldNumber = 1;
  inline ::google::protobuf::int32 max_hp() const;
  inline void set_max_hp(::google::protobuf::int32 value);

  // required sint32 atk = 2;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 2;
  inline ::google::protobuf::int32 atk() const;
  inline void set_atk(::google::protobuf::int32 value);

  // required sint32 def = 3;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 3;
  inline ::google::protobuf::int32 def() const;
  inline void set_def(::google::protobuf::int32 value);

  // required sint32 speed = 4;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 4;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // required sint32 crit = 5;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 5;
  inline ::google::protobuf::int32 crit() const;
  inline void set_crit(::google::protobuf::int32 value);

  // required sint32 block = 6;
  inline bool has_block() const;
  inline void clear_block();
  static const int kBlockFieldNumber = 6;
  inline ::google::protobuf::int32 block() const;
  inline void set_block(::google::protobuf::int32 value);

  // required sint32 act = 7;
  inline bool has_act() const;
  inline void clear_act();
  static const int kActFieldNumber = 7;
  inline ::google::protobuf::int32 act() const;
  inline void set_act(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BattleHeroAttribute)
 private:
  inline void set_has_max_hp();
  inline void clear_has_max_hp();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_crit();
  inline void clear_has_crit();
  inline void set_has_block();
  inline void clear_has_block();
  inline void set_has_act();
  inline void clear_has_act();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 atk_;
  ::google::protobuf::int32 def_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 crit_;
  ::google::protobuf::int32 block_;
  ::google::protobuf::int32 act_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleHeroAttribute* default_instance_;
};
// -------------------------------------------------------------------

class BattleHeroData : public ::google::protobuf::Message {
 public:
  BattleHeroData();
  virtual ~BattleHeroData();

  BattleHeroData(const BattleHeroData& from);

  inline BattleHeroData& operator=(const BattleHeroData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleHeroData& default_instance();

  void Swap(BattleHeroData* other);

  // implements Message ----------------------------------------------

  BattleHeroData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleHeroData& from);
  void MergeFrom(const BattleHeroData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required sint32 position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // required .BattleHeroAttribute fight_attr = 4;
  inline bool has_fight_attr() const;
  inline void clear_fight_attr();
  static const int kFightAttrFieldNumber = 4;
  inline const ::BattleHeroAttribute& fight_attr() const;
  inline ::BattleHeroAttribute* mutable_fight_attr();
  inline ::BattleHeroAttribute* release_fight_attr();
  inline void set_allocated_fight_attr(::BattleHeroAttribute* fight_attr);

  // @@protoc_insertion_point(class_scope:BattleHeroData)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_fight_attr();
  inline void clear_has_fight_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 position_;
  ::BattleHeroAttribute* fight_attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleHeroData* default_instance_;
};
// -------------------------------------------------------------------

class BattleHeroGroup : public ::google::protobuf::Message {
 public:
  BattleHeroGroup();
  virtual ~BattleHeroGroup();

  BattleHeroGroup(const BattleHeroGroup& from);

  inline BattleHeroGroup& operator=(const BattleHeroGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleHeroGroup& default_instance();

  void Swap(BattleHeroGroup* other);

  // implements Message ----------------------------------------------

  BattleHeroGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleHeroGroup& from);
  void MergeFrom(const BattleHeroGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BattleHeroData list_players = 1;
  inline int list_players_size() const;
  inline void clear_list_players();
  static const int kListPlayersFieldNumber = 1;
  inline const ::BattleHeroData& list_players(int index) const;
  inline ::BattleHeroData* mutable_list_players(int index);
  inline ::BattleHeroData* add_list_players();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleHeroData >&
      list_players() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleHeroData >*
      mutable_list_players();

  // @@protoc_insertion_point(class_scope:BattleHeroGroup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BattleHeroData > list_players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleHeroGroup* default_instance_;
};
// -------------------------------------------------------------------

class BattleFightData : public ::google::protobuf::Message {
 public:
  BattleFightData();
  virtual ~BattleFightData();

  BattleFightData(const BattleFightData& from);

  inline BattleFightData& operator=(const BattleFightData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFightData& default_instance();

  void Swap(BattleFightData* other);

  // implements Message ----------------------------------------------

  BattleFightData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFightData& from);
  void MergeFrom(const BattleFightData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BattleHeroGroup list_groups = 1;
  inline int list_groups_size() const;
  inline void clear_list_groups();
  static const int kListGroupsFieldNumber = 1;
  inline const ::BattleHeroGroup& list_groups(int index) const;
  inline ::BattleHeroGroup* mutable_list_groups(int index);
  inline ::BattleHeroGroup* add_list_groups();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleHeroGroup >&
      list_groups() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleHeroGroup >*
      mutable_list_groups();

  // @@protoc_insertion_point(class_scope:BattleFightData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BattleHeroGroup > list_groups_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleFightData* default_instance_;
};
// -------------------------------------------------------------------

class BattleData : public ::google::protobuf::Message {
 public:
  BattleData();
  virtual ~BattleData();

  BattleData(const BattleData& from);

  inline BattleData& operator=(const BattleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleData& default_instance();

  void Swap(BattleData* other);

  // implements Message ----------------------------------------------

  BattleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleData& from);
  void MergeFrom(const BattleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .BattleFightData attacker = 1;
  inline bool has_attacker() const;
  inline void clear_attacker();
  static const int kAttackerFieldNumber = 1;
  inline const ::BattleFightData& attacker() const;
  inline ::BattleFightData* mutable_attacker();
  inline ::BattleFightData* release_attacker();
  inline void set_allocated_attacker(::BattleFightData* attacker);

  // required .BattleFightData defender = 2;
  inline bool has_defender() const;
  inline void clear_defender();
  static const int kDefenderFieldNumber = 2;
  inline const ::BattleFightData& defender() const;
  inline ::BattleFightData* mutable_defender();
  inline ::BattleFightData* release_defender();
  inline void set_allocated_defender(::BattleFightData* defender);

  // @@protoc_insertion_point(class_scope:BattleData)
 private:
  inline void set_has_attacker();
  inline void clear_has_attacker();
  inline void set_has_defender();
  inline void clear_has_defender();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BattleFightData* attacker_;
  ::BattleFightData* defender_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleData* default_instance_;
};
// -------------------------------------------------------------------

class BattleEventData : public ::google::protobuf::Message {
 public:
  BattleEventData();
  virtual ~BattleEventData();

  BattleEventData(const BattleEventData& from);

  inline BattleEventData& operator=(const BattleEventData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleEventData& default_instance();

  void Swap(BattleEventData* other);

  // implements Message ----------------------------------------------

  BattleEventData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleEventData& from);
  void MergeFrom(const BattleEventData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // optional sint32 box_id = 2;
  inline bool has_box_id() const;
  inline void clear_box_id();
  static const int kBoxIdFieldNumber = 2;
  inline ::google::protobuf::int32 box_id() const;
  inline void set_box_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BattleEventData)
 private:
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_box_id();
  inline void clear_has_box_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 box_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleEventData* default_instance_;
};
// -------------------------------------------------------------------

class proto_BattleEvent : public ::google::protobuf::Message {
 public:
  proto_BattleEvent();
  virtual ~proto_BattleEvent();

  proto_BattleEvent(const proto_BattleEvent& from);

  inline proto_BattleEvent& operator=(const proto_BattleEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const proto_BattleEvent& default_instance();

  void Swap(proto_BattleEvent* other);

  // implements Message ----------------------------------------------

  proto_BattleEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const proto_BattleEvent& from);
  void MergeFrom(const proto_BattleEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .E_BATTLE_LOG_TYPE log_type = 1 [default = LOGT_USER_CARD];
  inline bool has_log_type() const;
  inline void clear_log_type();
  static const int kLogTypeFieldNumber = 1;
  inline ::E_BATTLE_LOG_TYPE log_type() const;
  inline void set_log_type(::E_BATTLE_LOG_TYPE value);

  // required .E_BATTLE_CAMP_TYPE camp_type = 2 [default = CAMP_TYPE_OWN];
  inline bool has_camp_type() const;
  inline void clear_camp_type();
  static const int kCampTypeFieldNumber = 2;
  inline ::E_BATTLE_CAMP_TYPE camp_type() const;
  inline void set_camp_type(::E_BATTLE_CAMP_TYPE value);

  // required float time_tick = 3;
  inline bool has_time_tick() const;
  inline void clear_time_tick();
  static const int kTimeTickFieldNumber = 3;
  inline float time_tick() const;
  inline void set_time_tick(float value);

  // optional .BattleEventData data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::BattleEventData& data() const;
  inline ::BattleEventData* mutable_data();
  inline ::BattleEventData* release_data();
  inline void set_allocated_data(::BattleEventData* data);

  // @@protoc_insertion_point(class_scope:proto_BattleEvent)
 private:
  inline void set_has_log_type();
  inline void clear_has_log_type();
  inline void set_has_camp_type();
  inline void clear_has_camp_type();
  inline void set_has_time_tick();
  inline void clear_has_time_tick();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int log_type_;
  int camp_type_;
  ::BattleEventData* data_;
  float time_tick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static proto_BattleEvent* default_instance_;
};
// -------------------------------------------------------------------

class BattleLog : public ::google::protobuf::Message {
 public:
  BattleLog();
  virtual ~BattleLog();

  BattleLog(const BattleLog& from);

  inline BattleLog& operator=(const BattleLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleLog& default_instance();

  void Swap(BattleLog* other);

  // implements Message ----------------------------------------------

  BattleLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleLog& from);
  void MergeFrom(const BattleLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .E_BATTLE_TYPE battle_type = 1 [default = EBT_PVE];
  inline bool has_battle_type() const;
  inline void clear_battle_type();
  static const int kBattleTypeFieldNumber = 1;
  inline ::E_BATTLE_TYPE battle_type() const;
  inline void set_battle_type(::E_BATTLE_TYPE value);

  // required sint32 random_seed = 2;
  inline bool has_random_seed() const;
  inline void clear_random_seed();
  static const int kRandomSeedFieldNumber = 2;
  inline ::google::protobuf::int32 random_seed() const;
  inline void set_random_seed(::google::protobuf::int32 value);

  // optional sint32 chapter_id = 3;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 3;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional sint32 level_id = 4;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 4;
  inline ::google::protobuf::int32 level_id() const;
  inline void set_level_id(::google::protobuf::int32 value);

  // repeated .proto_BattleEvent list_events = 5;
  inline int list_events_size() const;
  inline void clear_list_events();
  static const int kListEventsFieldNumber = 5;
  inline const ::proto_BattleEvent& list_events(int index) const;
  inline ::proto_BattleEvent* mutable_list_events(int index);
  inline ::proto_BattleEvent* add_list_events();
  inline const ::google::protobuf::RepeatedPtrField< ::proto_BattleEvent >&
      list_events() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto_BattleEvent >*
      mutable_list_events();

  // @@protoc_insertion_point(class_scope:BattleLog)
 private:
  inline void set_has_battle_type();
  inline void clear_has_battle_type();
  inline void set_has_random_seed();
  inline void clear_has_random_seed();
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_level_id();
  inline void clear_has_level_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int battle_type_;
  ::google::protobuf::int32 random_seed_;
  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 level_id_;
  ::google::protobuf::RepeatedPtrField< ::proto_BattleEvent > list_events_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleLog* default_instance_;
};
// -------------------------------------------------------------------

class BattleResultData : public ::google::protobuf::Message {
 public:
  BattleResultData();
  virtual ~BattleResultData();

  BattleResultData(const BattleResultData& from);

  inline BattleResultData& operator=(const BattleResultData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleResultData& default_instance();

  void Swap(BattleResultData* other);

  // implements Message ----------------------------------------------

  BattleResultData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleResultData& from);
  void MergeFrom(const BattleResultData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .E_BATTLE_RESULT_TYPE result = 1 [default = EBRT_DOGFULL];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::E_BATTLE_RESULT_TYPE result() const;
  inline void set_result(::E_BATTLE_RESULT_TYPE value);

  // repeated sint32 list_atk_hp = 2;
  inline int list_atk_hp_size() const;
  inline void clear_list_atk_hp();
  static const int kListAtkHpFieldNumber = 2;
  inline ::google::protobuf::int32 list_atk_hp(int index) const;
  inline void set_list_atk_hp(int index, ::google::protobuf::int32 value);
  inline void add_list_atk_hp(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      list_atk_hp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_list_atk_hp();

  // required sint32 def_hp = 3;
  inline bool has_def_hp() const;
  inline void clear_def_hp();
  static const int kDefHpFieldNumber = 3;
  inline ::google::protobuf::int32 def_hp() const;
  inline void set_def_hp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BattleResultData)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_def_hp();
  inline void clear_has_def_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > list_atk_hp_;
  int result_;
  ::google::protobuf::int32 def_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static BattleResultData* default_instance_;
};
// -------------------------------------------------------------------

class FindWayPath : public ::google::protobuf::Message {
 public:
  FindWayPath();
  virtual ~FindWayPath();

  FindWayPath(const FindWayPath& from);

  inline FindWayPath& operator=(const FindWayPath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindWayPath& default_instance();

  void Swap(FindWayPath* other);

  // implements Message ----------------------------------------------

  FindWayPath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindWayPath& from);
  void MergeFrom(const FindWayPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tar = 1;
  inline bool has_tar() const;
  inline void clear_tar();
  static const int kTarFieldNumber = 1;
  inline ::google::protobuf::uint32 tar() const;
  inline void set_tar(::google::protobuf::uint32 value);

  // repeated uint32 pos = 2;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos(int index) const;
  inline void set_pos(int index, ::google::protobuf::uint32 value);
  inline void add_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:FindWayPath)
 private:
  inline void set_has_tar();
  inline void clear_has_tar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pos_;
  ::google::protobuf::uint32 tar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static FindWayPath* default_instance_;
};
// -------------------------------------------------------------------

class FindWayInfo : public ::google::protobuf::Message {
 public:
  FindWayInfo();
  virtual ~FindWayInfo();

  FindWayInfo(const FindWayInfo& from);

  inline FindWayInfo& operator=(const FindWayInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindWayInfo& default_instance();

  void Swap(FindWayInfo* other);

  // implements Message ----------------------------------------------

  FindWayInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindWayInfo& from);
  void MergeFrom(const FindWayInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline ::google::protobuf::uint32 src() const;
  inline void set_src(::google::protobuf::uint32 value);

  // repeated .FindWayPath path = 2;
  inline int path_size() const;
  inline void clear_path();
  static const int kPathFieldNumber = 2;
  inline const ::FindWayPath& path(int index) const;
  inline ::FindWayPath* mutable_path(int index);
  inline ::FindWayPath* add_path();
  inline const ::google::protobuf::RepeatedPtrField< ::FindWayPath >&
      path() const;
  inline ::google::protobuf::RepeatedPtrField< ::FindWayPath >*
      mutable_path();

  // @@protoc_insertion_point(class_scope:FindWayInfo)
 private:
  inline void set_has_src();
  inline void clear_has_src();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FindWayPath > path_;
  ::google::protobuf::uint32 src_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static FindWayInfo* default_instance_;
};
// -------------------------------------------------------------------

class FindWayData : public ::google::protobuf::Message {
 public:
  FindWayData();
  virtual ~FindWayData();

  FindWayData(const FindWayData& from);

  inline FindWayData& operator=(const FindWayData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindWayData& default_instance();

  void Swap(FindWayData* other);

  // implements Message ----------------------------------------------

  FindWayData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindWayData& from);
  void MergeFrom(const FindWayData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FindWayInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::FindWayInfo& data(int index) const;
  inline ::FindWayInfo* mutable_data(int index);
  inline ::FindWayInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::FindWayInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::FindWayInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:FindWayData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FindWayInfo > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Common_2eproto();
  friend void protobuf_AssignDesc_Common_2eproto();
  friend void protobuf_ShutdownFile_Common_2eproto();

  void InitAsDefaultInstance();
  static FindWayData* default_instance_;
};
// ===================================================================


// ===================================================================

// universal_data

// optional int64 key = 1;
inline bool universal_data::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void universal_data::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void universal_data::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void universal_data::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 universal_data::key() const {
  return key_;
}
inline void universal_data::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
}

// optional bytes type = 2;
inline bool universal_data::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void universal_data::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void universal_data::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void universal_data::clear_type() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& universal_data::type() const {
  return *type_;
}
inline void universal_data::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void universal_data::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void universal_data::set_type(const void* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* universal_data::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  return type_;
}
inline ::std::string* universal_data::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void universal_data::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes name = 3;
inline bool universal_data::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void universal_data::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void universal_data::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void universal_data::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& universal_data::name() const {
  return *name_;
}
inline void universal_data::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void universal_data::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void universal_data::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* universal_data::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* universal_data::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void universal_data::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 code = 4;
inline bool universal_data::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void universal_data::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void universal_data::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void universal_data::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 universal_data::code() const {
  return code_;
}
inline void universal_data::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// repeated bool b = 10;
inline int universal_data::b_size() const {
  return b_.size();
}
inline void universal_data::clear_b() {
  b_.Clear();
}
inline bool universal_data::b(int index) const {
  return b_.Get(index);
}
inline void universal_data::set_b(int index, bool value) {
  b_.Set(index, value);
}
inline void universal_data::add_b(bool value) {
  b_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
universal_data::b() const {
  return b_;
}
inline ::google::protobuf::RepeatedField< bool >*
universal_data::mutable_b() {
  return &b_;
}

// repeated float f = 11;
inline int universal_data::f_size() const {
  return f_.size();
}
inline void universal_data::clear_f() {
  f_.Clear();
}
inline float universal_data::f(int index) const {
  return f_.Get(index);
}
inline void universal_data::set_f(int index, float value) {
  f_.Set(index, value);
}
inline void universal_data::add_f(float value) {
  f_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
universal_data::f() const {
  return f_;
}
inline ::google::protobuf::RepeatedField< float >*
universal_data::mutable_f() {
  return &f_;
}

// repeated double d = 12;
inline int universal_data::d_size() const {
  return d_.size();
}
inline void universal_data::clear_d() {
  d_.Clear();
}
inline double universal_data::d(int index) const {
  return d_.Get(index);
}
inline void universal_data::set_d(int index, double value) {
  d_.Set(index, value);
}
inline void universal_data::add_d(double value) {
  d_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
universal_data::d() const {
  return d_;
}
inline ::google::protobuf::RepeatedField< double >*
universal_data::mutable_d() {
  return &d_;
}

// repeated sint32 e = 13;
inline int universal_data::e_size() const {
  return e_.size();
}
inline void universal_data::clear_e() {
  e_.Clear();
}
inline ::google::protobuf::int32 universal_data::e(int index) const {
  return e_.Get(index);
}
inline void universal_data::set_e(int index, ::google::protobuf::int32 value) {
  e_.Set(index, value);
}
inline void universal_data::add_e(::google::protobuf::int32 value) {
  e_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
universal_data::e() const {
  return e_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
universal_data::mutable_e() {
  return &e_;
}

// repeated sint32 i32 = 14;
inline int universal_data::i32_size() const {
  return i32_.size();
}
inline void universal_data::clear_i32() {
  i32_.Clear();
}
inline ::google::protobuf::int32 universal_data::i32(int index) const {
  return i32_.Get(index);
}
inline void universal_data::set_i32(int index, ::google::protobuf::int32 value) {
  i32_.Set(index, value);
}
inline void universal_data::add_i32(::google::protobuf::int32 value) {
  i32_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
universal_data::i32() const {
  return i32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
universal_data::mutable_i32() {
  return &i32_;
}

// repeated sint64 i64 = 15;
inline int universal_data::i64_size() const {
  return i64_.size();
}
inline void universal_data::clear_i64() {
  i64_.Clear();
}
inline ::google::protobuf::int64 universal_data::i64(int index) const {
  return i64_.Get(index);
}
inline void universal_data::set_i64(int index, ::google::protobuf::int64 value) {
  i64_.Set(index, value);
}
inline void universal_data::add_i64(::google::protobuf::int64 value) {
  i64_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
universal_data::i64() const {
  return i64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
universal_data::mutable_i64() {
  return &i64_;
}

// repeated uint32 u32 = 16;
inline int universal_data::u32_size() const {
  return u32_.size();
}
inline void universal_data::clear_u32() {
  u32_.Clear();
}
inline ::google::protobuf::uint32 universal_data::u32(int index) const {
  return u32_.Get(index);
}
inline void universal_data::set_u32(int index, ::google::protobuf::uint32 value) {
  u32_.Set(index, value);
}
inline void universal_data::add_u32(::google::protobuf::uint32 value) {
  u32_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
universal_data::u32() const {
  return u32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
universal_data::mutable_u32() {
  return &u32_;
}

// repeated uint64 u64 = 17;
inline int universal_data::u64_size() const {
  return u64_.size();
}
inline void universal_data::clear_u64() {
  u64_.Clear();
}
inline ::google::protobuf::uint64 universal_data::u64(int index) const {
  return u64_.Get(index);
}
inline void universal_data::set_u64(int index, ::google::protobuf::uint64 value) {
  u64_.Set(index, value);
}
inline void universal_data::add_u64(::google::protobuf::uint64 value) {
  u64_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
universal_data::u64() const {
  return u64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
universal_data::mutable_u64() {
  return &u64_;
}

// repeated bytes str = 18;
inline int universal_data::str_size() const {
  return str_.size();
}
inline void universal_data::clear_str() {
  str_.Clear();
}
inline const ::std::string& universal_data::str(int index) const {
  return str_.Get(index);
}
inline ::std::string* universal_data::mutable_str(int index) {
  return str_.Mutable(index);
}
inline void universal_data::set_str(int index, const ::std::string& value) {
  str_.Mutable(index)->assign(value);
}
inline void universal_data::set_str(int index, const char* value) {
  str_.Mutable(index)->assign(value);
}
inline void universal_data::set_str(int index, const void* value, size_t size) {
  str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* universal_data::add_str() {
  return str_.Add();
}
inline void universal_data::add_str(const ::std::string& value) {
  str_.Add()->assign(value);
}
inline void universal_data::add_str(const char* value) {
  str_.Add()->assign(value);
}
inline void universal_data::add_str(const void* value, size_t size) {
  str_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
universal_data::str() const {
  return str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
universal_data::mutable_str() {
  return &str_;
}

// repeated .universal_data sub = 100;
inline int universal_data::sub_size() const {
  return sub_.size();
}
inline void universal_data::clear_sub() {
  sub_.Clear();
}
inline const ::universal_data& universal_data::sub(int index) const {
  return sub_.Get(index);
}
inline ::universal_data* universal_data::mutable_sub(int index) {
  return sub_.Mutable(index);
}
inline ::universal_data* universal_data::add_sub() {
  return sub_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
universal_data::sub() const {
  return sub_;
}
inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
universal_data::mutable_sub() {
  return &sub_;
}

// -------------------------------------------------------------------

// item_config

// required uint32 item_id = 1;
inline bool item_config::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void item_config::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void item_config::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void item_config::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 item_config::item_id() const {
  return item_id_;
}
inline void item_config::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_count = 2;
inline bool item_config::has_item_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void item_config::set_has_item_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void item_config::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void item_config::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 item_config::item_count() const {
  return item_count_;
}
inline void item_config::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// -------------------------------------------------------------------

// Sql_Result_Login

// required int64 id = 1;
inline bool Sql_Result_Login::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sql_Result_Login::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sql_Result_Login::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sql_Result_Login::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Sql_Result_Login::id() const {
  return id_;
}
inline void Sql_Result_Login::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required bytes username = 2;
inline bool Sql_Result_Login::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sql_Result_Login::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sql_Result_Login::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sql_Result_Login::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& Sql_Result_Login::username() const {
  return *username_;
}
inline void Sql_Result_Login::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void Sql_Result_Login::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void Sql_Result_Login::set_username(const void* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Sql_Result_Login::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* Sql_Result_Login::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Sql_Result_Login::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes password = 3;
inline bool Sql_Result_Login::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Sql_Result_Login::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Sql_Result_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Sql_Result_Login::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Sql_Result_Login::password() const {
  return *password_;
}
inline void Sql_Result_Login::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Sql_Result_Login::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void Sql_Result_Login::set_password(const void* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Sql_Result_Login::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* Sql_Result_Login::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Sql_Result_Login::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 createtime = 4;
inline bool Sql_Result_Login::has_createtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Sql_Result_Login::set_has_createtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Sql_Result_Login::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Sql_Result_Login::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::int64 Sql_Result_Login::createtime() const {
  return createtime_;
}
inline void Sql_Result_Login::set_createtime(::google::protobuf::int64 value) {
  set_has_createtime();
  createtime_ = value;
}

// required int64 logintime = 5;
inline bool Sql_Result_Login::has_logintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Sql_Result_Login::set_has_logintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Sql_Result_Login::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Sql_Result_Login::clear_logintime() {
  logintime_ = GOOGLE_LONGLONG(0);
  clear_has_logintime();
}
inline ::google::protobuf::int64 Sql_Result_Login::logintime() const {
  return logintime_;
}
inline void Sql_Result_Login::set_logintime(::google::protobuf::int64 value) {
  set_has_logintime();
  logintime_ = value;
}

// required uint64 phone = 6;
inline bool Sql_Result_Login::has_phone() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Sql_Result_Login::set_has_phone() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Sql_Result_Login::clear_has_phone() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Sql_Result_Login::clear_phone() {
  phone_ = GOOGLE_ULONGLONG(0);
  clear_has_phone();
}
inline ::google::protobuf::uint64 Sql_Result_Login::phone() const {
  return phone_;
}
inline void Sql_Result_Login::set_phone(::google::protobuf::uint64 value) {
  set_has_phone();
  phone_ = value;
}

// required int64 email = 7;
inline bool Sql_Result_Login::has_email() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Sql_Result_Login::set_has_email() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Sql_Result_Login::clear_has_email() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Sql_Result_Login::clear_email() {
  email_ = GOOGLE_LONGLONG(0);
  clear_has_email();
}
inline ::google::protobuf::int64 Sql_Result_Login::email() const {
  return email_;
}
inline void Sql_Result_Login::set_email(::google::protobuf::int64 value) {
  set_has_email();
  email_ = value;
}

// -------------------------------------------------------------------

// GameSkillActionInfos

// required bytes res_file_name = 1;
inline bool GameSkillActionInfos::has_res_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameSkillActionInfos::set_has_res_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameSkillActionInfos::clear_has_res_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameSkillActionInfos::clear_res_file_name() {
  if (res_file_name_ != &::google::protobuf::internal::kEmptyString) {
    res_file_name_->clear();
  }
  clear_has_res_file_name();
}
inline const ::std::string& GameSkillActionInfos::res_file_name() const {
  return *res_file_name_;
}
inline void GameSkillActionInfos::set_res_file_name(const ::std::string& value) {
  set_has_res_file_name();
  if (res_file_name_ == &::google::protobuf::internal::kEmptyString) {
    res_file_name_ = new ::std::string;
  }
  res_file_name_->assign(value);
}
inline void GameSkillActionInfos::set_res_file_name(const char* value) {
  set_has_res_file_name();
  if (res_file_name_ == &::google::protobuf::internal::kEmptyString) {
    res_file_name_ = new ::std::string;
  }
  res_file_name_->assign(value);
}
inline void GameSkillActionInfos::set_res_file_name(const void* value, size_t size) {
  set_has_res_file_name();
  if (res_file_name_ == &::google::protobuf::internal::kEmptyString) {
    res_file_name_ = new ::std::string;
  }
  res_file_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameSkillActionInfos::mutable_res_file_name() {
  set_has_res_file_name();
  if (res_file_name_ == &::google::protobuf::internal::kEmptyString) {
    res_file_name_ = new ::std::string;
  }
  return res_file_name_;
}
inline ::std::string* GameSkillActionInfos::release_res_file_name() {
  clear_has_res_file_name();
  if (res_file_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = res_file_name_;
    res_file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameSkillActionInfos::set_allocated_res_file_name(::std::string* res_file_name) {
  if (res_file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete res_file_name_;
  }
  if (res_file_name) {
    set_has_res_file_name();
    res_file_name_ = res_file_name;
  } else {
    clear_has_res_file_name();
    res_file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint32 action_key = 2;
inline bool GameSkillActionInfos::has_action_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameSkillActionInfos::set_has_action_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameSkillActionInfos::clear_has_action_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameSkillActionInfos::clear_action_key() {
  action_key_ = 0;
  clear_has_action_key();
}
inline ::google::protobuf::int32 GameSkillActionInfos::action_key() const {
  return action_key_;
}
inline void GameSkillActionInfos::set_action_key(::google::protobuf::int32 value) {
  set_has_action_key();
  action_key_ = value;
}

// required sint32 action_wav = 3;
inline bool GameSkillActionInfos::has_action_wav() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameSkillActionInfos::set_has_action_wav() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameSkillActionInfos::clear_has_action_wav() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameSkillActionInfos::clear_action_wav() {
  action_wav_ = 0;
  clear_has_action_wav();
}
inline ::google::protobuf::int32 GameSkillActionInfos::action_wav() const {
  return action_wav_;
}
inline void GameSkillActionInfos::set_action_wav(::google::protobuf::int32 value) {
  set_has_action_wav();
  action_wav_ = value;
}

// -------------------------------------------------------------------

// GameShopAvatarInfo

// required .FACE_SHOP_TYPE face_shop_type = 1 [default = FST_NORMAL];
inline bool GameShopAvatarInfo::has_face_shop_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameShopAvatarInfo::set_has_face_shop_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameShopAvatarInfo::clear_has_face_shop_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameShopAvatarInfo::clear_face_shop_type() {
  face_shop_type_ = 1;
  clear_has_face_shop_type();
}
inline ::FACE_SHOP_TYPE GameShopAvatarInfo::face_shop_type() const {
  return static_cast< ::FACE_SHOP_TYPE >(face_shop_type_);
}
inline void GameShopAvatarInfo::set_face_shop_type(::FACE_SHOP_TYPE value) {
  assert(::FACE_SHOP_TYPE_IsValid(value));
  set_has_face_shop_type();
  face_shop_type_ = value;
}

// required sint32 goods_index = 2;
inline bool GameShopAvatarInfo::has_goods_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameShopAvatarInfo::set_has_goods_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameShopAvatarInfo::clear_has_goods_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameShopAvatarInfo::clear_goods_index() {
  goods_index_ = 0;
  clear_has_goods_index();
}
inline ::google::protobuf::int32 GameShopAvatarInfo::goods_index() const {
  return goods_index_;
}
inline void GameShopAvatarInfo::set_goods_index(::google::protobuf::int32 value) {
  set_has_goods_index();
  goods_index_ = value;
}

// required sint32 face_id = 3;
inline bool GameShopAvatarInfo::has_face_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameShopAvatarInfo::set_has_face_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameShopAvatarInfo::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameShopAvatarInfo::clear_face_id() {
  face_id_ = 0;
  clear_has_face_id();
}
inline ::google::protobuf::int32 GameShopAvatarInfo::face_id() const {
  return face_id_;
}
inline void GameShopAvatarInfo::set_face_id(::google::protobuf::int32 value) {
  set_has_face_id();
  face_id_ = value;
}

// required bool already_buy = 4;
inline bool GameShopAvatarInfo::has_already_buy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameShopAvatarInfo::set_has_already_buy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameShopAvatarInfo::clear_has_already_buy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameShopAvatarInfo::clear_already_buy() {
  already_buy_ = false;
  clear_has_already_buy();
}
inline bool GameShopAvatarInfo::already_buy() const {
  return already_buy_;
}
inline void GameShopAvatarInfo::set_already_buy(bool value) {
  set_has_already_buy();
  already_buy_ = value;
}

// -------------------------------------------------------------------

// reward_info

// required sint32 id = 1;
inline bool reward_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void reward_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void reward_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void reward_info::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 reward_info::id() const {
  return id_;
}
inline void reward_info::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required sint32 count = 2;
inline bool reward_info::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void reward_info::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void reward_info::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void reward_info::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 reward_info::count() const {
  return count_;
}
inline void reward_info::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// BattleHeroAttribute

// required sint32 max_hp = 1;
inline bool BattleHeroAttribute::has_max_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleHeroAttribute::set_has_max_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleHeroAttribute::clear_has_max_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleHeroAttribute::clear_max_hp() {
  max_hp_ = 0;
  clear_has_max_hp();
}
inline ::google::protobuf::int32 BattleHeroAttribute::max_hp() const {
  return max_hp_;
}
inline void BattleHeroAttribute::set_max_hp(::google::protobuf::int32 value) {
  set_has_max_hp();
  max_hp_ = value;
}

// required sint32 atk = 2;
inline bool BattleHeroAttribute::has_atk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleHeroAttribute::set_has_atk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleHeroAttribute::clear_has_atk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleHeroAttribute::clear_atk() {
  atk_ = 0;
  clear_has_atk();
}
inline ::google::protobuf::int32 BattleHeroAttribute::atk() const {
  return atk_;
}
inline void BattleHeroAttribute::set_atk(::google::protobuf::int32 value) {
  set_has_atk();
  atk_ = value;
}

// required sint32 def = 3;
inline bool BattleHeroAttribute::has_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleHeroAttribute::set_has_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleHeroAttribute::clear_has_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleHeroAttribute::clear_def() {
  def_ = 0;
  clear_has_def();
}
inline ::google::protobuf::int32 BattleHeroAttribute::def() const {
  return def_;
}
inline void BattleHeroAttribute::set_def(::google::protobuf::int32 value) {
  set_has_def();
  def_ = value;
}

// required sint32 speed = 4;
inline bool BattleHeroAttribute::has_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleHeroAttribute::set_has_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleHeroAttribute::clear_has_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleHeroAttribute::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 BattleHeroAttribute::speed() const {
  return speed_;
}
inline void BattleHeroAttribute::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
}

// required sint32 crit = 5;
inline bool BattleHeroAttribute::has_crit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleHeroAttribute::set_has_crit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleHeroAttribute::clear_has_crit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleHeroAttribute::clear_crit() {
  crit_ = 0;
  clear_has_crit();
}
inline ::google::protobuf::int32 BattleHeroAttribute::crit() const {
  return crit_;
}
inline void BattleHeroAttribute::set_crit(::google::protobuf::int32 value) {
  set_has_crit();
  crit_ = value;
}

// required sint32 block = 6;
inline bool BattleHeroAttribute::has_block() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleHeroAttribute::set_has_block() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleHeroAttribute::clear_has_block() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleHeroAttribute::clear_block() {
  block_ = 0;
  clear_has_block();
}
inline ::google::protobuf::int32 BattleHeroAttribute::block() const {
  return block_;
}
inline void BattleHeroAttribute::set_block(::google::protobuf::int32 value) {
  set_has_block();
  block_ = value;
}

// required sint32 act = 7;
inline bool BattleHeroAttribute::has_act() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleHeroAttribute::set_has_act() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleHeroAttribute::clear_has_act() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleHeroAttribute::clear_act() {
  act_ = 0;
  clear_has_act();
}
inline ::google::protobuf::int32 BattleHeroAttribute::act() const {
  return act_;
}
inline void BattleHeroAttribute::set_act(::google::protobuf::int32 value) {
  set_has_act();
  act_ = value;
}

// -------------------------------------------------------------------

// BattleHeroData

// required sint32 level = 1;
inline bool BattleHeroData::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleHeroData::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleHeroData::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleHeroData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 BattleHeroData::level() const {
  return level_;
}
inline void BattleHeroData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required bytes name = 2;
inline bool BattleHeroData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleHeroData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleHeroData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleHeroData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BattleHeroData::name() const {
  return *name_;
}
inline void BattleHeroData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BattleHeroData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BattleHeroData::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleHeroData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BattleHeroData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleHeroData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint32 position = 3;
inline bool BattleHeroData::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleHeroData::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleHeroData::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleHeroData::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 BattleHeroData::position() const {
  return position_;
}
inline void BattleHeroData::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// required .BattleHeroAttribute fight_attr = 4;
inline bool BattleHeroData::has_fight_attr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleHeroData::set_has_fight_attr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleHeroData::clear_has_fight_attr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleHeroData::clear_fight_attr() {
  if (fight_attr_ != nullptr) fight_attr_->::BattleHeroAttribute::Clear();
  clear_has_fight_attr();
}
inline const ::BattleHeroAttribute& BattleHeroData::fight_attr() const {
  return fight_attr_ != nullptr ? *fight_attr_ : *default_instance_->fight_attr_;
}
inline ::BattleHeroAttribute* BattleHeroData::mutable_fight_attr() {
  set_has_fight_attr();
  if (fight_attr_ == nullptr) fight_attr_ = new ::BattleHeroAttribute;
  return fight_attr_;
}
inline ::BattleHeroAttribute* BattleHeroData::release_fight_attr() {
  clear_has_fight_attr();
  ::BattleHeroAttribute* temp = fight_attr_;
  fight_attr_ = nullptr;
  return temp;
}
inline void BattleHeroData::set_allocated_fight_attr(::BattleHeroAttribute* fight_attr) {
  delete fight_attr_;
  fight_attr_ = fight_attr;
  if (fight_attr) {
    set_has_fight_attr();
  } else {
    clear_has_fight_attr();
  }
}

// -------------------------------------------------------------------

// BattleHeroGroup

// repeated .BattleHeroData list_players = 1;
inline int BattleHeroGroup::list_players_size() const {
  return list_players_.size();
}
inline void BattleHeroGroup::clear_list_players() {
  list_players_.Clear();
}
inline const ::BattleHeroData& BattleHeroGroup::list_players(int index) const {
  return list_players_.Get(index);
}
inline ::BattleHeroData* BattleHeroGroup::mutable_list_players(int index) {
  return list_players_.Mutable(index);
}
inline ::BattleHeroData* BattleHeroGroup::add_list_players() {
  return list_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleHeroData >&
BattleHeroGroup::list_players() const {
  return list_players_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleHeroData >*
BattleHeroGroup::mutable_list_players() {
  return &list_players_;
}

// -------------------------------------------------------------------

// BattleFightData

// repeated .BattleHeroGroup list_groups = 1;
inline int BattleFightData::list_groups_size() const {
  return list_groups_.size();
}
inline void BattleFightData::clear_list_groups() {
  list_groups_.Clear();
}
inline const ::BattleHeroGroup& BattleFightData::list_groups(int index) const {
  return list_groups_.Get(index);
}
inline ::BattleHeroGroup* BattleFightData::mutable_list_groups(int index) {
  return list_groups_.Mutable(index);
}
inline ::BattleHeroGroup* BattleFightData::add_list_groups() {
  return list_groups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleHeroGroup >&
BattleFightData::list_groups() const {
  return list_groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleHeroGroup >*
BattleFightData::mutable_list_groups() {
  return &list_groups_;
}

// -------------------------------------------------------------------

// BattleData

// required .BattleFightData attacker = 1;
inline bool BattleData::has_attacker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleData::set_has_attacker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleData::clear_has_attacker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleData::clear_attacker() {
  if (attacker_ != nullptr) attacker_->::BattleFightData::Clear();
  clear_has_attacker();
}
inline const ::BattleFightData& BattleData::attacker() const {
  return attacker_ != nullptr ? *attacker_ : *default_instance_->attacker_;
}
inline ::BattleFightData* BattleData::mutable_attacker() {
  set_has_attacker();
  if (attacker_ == nullptr) attacker_ = new ::BattleFightData;
  return attacker_;
}
inline ::BattleFightData* BattleData::release_attacker() {
  clear_has_attacker();
  ::BattleFightData* temp = attacker_;
  attacker_ = nullptr;
  return temp;
}
inline void BattleData::set_allocated_attacker(::BattleFightData* attacker) {
  delete attacker_;
  attacker_ = attacker;
  if (attacker) {
    set_has_attacker();
  } else {
    clear_has_attacker();
  }
}

// required .BattleFightData defender = 2;
inline bool BattleData::has_defender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleData::set_has_defender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleData::clear_has_defender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleData::clear_defender() {
  if (defender_ != nullptr) defender_->::BattleFightData::Clear();
  clear_has_defender();
}
inline const ::BattleFightData& BattleData::defender() const {
  return defender_ != nullptr ? *defender_ : *default_instance_->defender_;
}
inline ::BattleFightData* BattleData::mutable_defender() {
  set_has_defender();
  if (defender_ == nullptr) defender_ = new ::BattleFightData;
  return defender_;
}
inline ::BattleFightData* BattleData::release_defender() {
  clear_has_defender();
  ::BattleFightData* temp = defender_;
  defender_ = nullptr;
  return temp;
}
inline void BattleData::set_allocated_defender(::BattleFightData* defender) {
  delete defender_;
  defender_ = defender;
  if (defender) {
    set_has_defender();
  } else {
    clear_has_defender();
  }
}

// -------------------------------------------------------------------

// BattleEventData

// optional sint32 position = 1;
inline bool BattleEventData::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleEventData::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleEventData::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleEventData::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 BattleEventData::position() const {
  return position_;
}
inline void BattleEventData::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
}

// optional sint32 box_id = 2;
inline bool BattleEventData::has_box_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleEventData::set_has_box_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleEventData::clear_has_box_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleEventData::clear_box_id() {
  box_id_ = 0;
  clear_has_box_id();
}
inline ::google::protobuf::int32 BattleEventData::box_id() const {
  return box_id_;
}
inline void BattleEventData::set_box_id(::google::protobuf::int32 value) {
  set_has_box_id();
  box_id_ = value;
}

// -------------------------------------------------------------------

// proto_BattleEvent

// required .E_BATTLE_LOG_TYPE log_type = 1 [default = LOGT_USER_CARD];
inline bool proto_BattleEvent::has_log_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void proto_BattleEvent::set_has_log_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void proto_BattleEvent::clear_has_log_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void proto_BattleEvent::clear_log_type() {
  log_type_ = 1;
  clear_has_log_type();
}
inline ::E_BATTLE_LOG_TYPE proto_BattleEvent::log_type() const {
  return static_cast< ::E_BATTLE_LOG_TYPE >(log_type_);
}
inline void proto_BattleEvent::set_log_type(::E_BATTLE_LOG_TYPE value) {
  assert(::E_BATTLE_LOG_TYPE_IsValid(value));
  set_has_log_type();
  log_type_ = value;
}

// required .E_BATTLE_CAMP_TYPE camp_type = 2 [default = CAMP_TYPE_OWN];
inline bool proto_BattleEvent::has_camp_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void proto_BattleEvent::set_has_camp_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void proto_BattleEvent::clear_has_camp_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void proto_BattleEvent::clear_camp_type() {
  camp_type_ = 1;
  clear_has_camp_type();
}
inline ::E_BATTLE_CAMP_TYPE proto_BattleEvent::camp_type() const {
  return static_cast< ::E_BATTLE_CAMP_TYPE >(camp_type_);
}
inline void proto_BattleEvent::set_camp_type(::E_BATTLE_CAMP_TYPE value) {
  assert(::E_BATTLE_CAMP_TYPE_IsValid(value));
  set_has_camp_type();
  camp_type_ = value;
}

// required float time_tick = 3;
inline bool proto_BattleEvent::has_time_tick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void proto_BattleEvent::set_has_time_tick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void proto_BattleEvent::clear_has_time_tick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void proto_BattleEvent::clear_time_tick() {
  time_tick_ = 0;
  clear_has_time_tick();
}
inline float proto_BattleEvent::time_tick() const {
  return time_tick_;
}
inline void proto_BattleEvent::set_time_tick(float value) {
  set_has_time_tick();
  time_tick_ = value;
}

// optional .BattleEventData data = 4;
inline bool proto_BattleEvent::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void proto_BattleEvent::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void proto_BattleEvent::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void proto_BattleEvent::clear_data() {
  if (data_ != nullptr) data_->::BattleEventData::Clear();
  clear_has_data();
}
inline const ::BattleEventData& proto_BattleEvent::data() const {
  return data_ != nullptr ? *data_ : *default_instance_->data_;
}
inline ::BattleEventData* proto_BattleEvent::mutable_data() {
  set_has_data();
  if (data_ == nullptr) data_ = new ::BattleEventData;
  return data_;
}
inline ::BattleEventData* proto_BattleEvent::release_data() {
  clear_has_data();
  ::BattleEventData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline void proto_BattleEvent::set_allocated_data(::BattleEventData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// BattleLog

// required .E_BATTLE_TYPE battle_type = 1 [default = EBT_PVE];
inline bool BattleLog::has_battle_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleLog::set_has_battle_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleLog::clear_has_battle_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleLog::clear_battle_type() {
  battle_type_ = 1;
  clear_has_battle_type();
}
inline ::E_BATTLE_TYPE BattleLog::battle_type() const {
  return static_cast< ::E_BATTLE_TYPE >(battle_type_);
}
inline void BattleLog::set_battle_type(::E_BATTLE_TYPE value) {
  assert(::E_BATTLE_TYPE_IsValid(value));
  set_has_battle_type();
  battle_type_ = value;
}

// required sint32 random_seed = 2;
inline bool BattleLog::has_random_seed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleLog::set_has_random_seed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleLog::clear_has_random_seed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleLog::clear_random_seed() {
  random_seed_ = 0;
  clear_has_random_seed();
}
inline ::google::protobuf::int32 BattleLog::random_seed() const {
  return random_seed_;
}
inline void BattleLog::set_random_seed(::google::protobuf::int32 value) {
  set_has_random_seed();
  random_seed_ = value;
}

// optional sint32 chapter_id = 3;
inline bool BattleLog::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleLog::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleLog::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleLog::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 BattleLog::chapter_id() const {
  return chapter_id_;
}
inline void BattleLog::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional sint32 level_id = 4;
inline bool BattleLog::has_level_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleLog::set_has_level_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleLog::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleLog::clear_level_id() {
  level_id_ = 0;
  clear_has_level_id();
}
inline ::google::protobuf::int32 BattleLog::level_id() const {
  return level_id_;
}
inline void BattleLog::set_level_id(::google::protobuf::int32 value) {
  set_has_level_id();
  level_id_ = value;
}

// repeated .proto_BattleEvent list_events = 5;
inline int BattleLog::list_events_size() const {
  return list_events_.size();
}
inline void BattleLog::clear_list_events() {
  list_events_.Clear();
}
inline const ::proto_BattleEvent& BattleLog::list_events(int index) const {
  return list_events_.Get(index);
}
inline ::proto_BattleEvent* BattleLog::mutable_list_events(int index) {
  return list_events_.Mutable(index);
}
inline ::proto_BattleEvent* BattleLog::add_list_events() {
  return list_events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto_BattleEvent >&
BattleLog::list_events() const {
  return list_events_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto_BattleEvent >*
BattleLog::mutable_list_events() {
  return &list_events_;
}

// -------------------------------------------------------------------

// BattleResultData

// required .E_BATTLE_RESULT_TYPE result = 1 [default = EBRT_DOGFULL];
inline bool BattleResultData::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleResultData::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleResultData::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleResultData::clear_result() {
  result_ = 3;
  clear_has_result();
}
inline ::E_BATTLE_RESULT_TYPE BattleResultData::result() const {
  return static_cast< ::E_BATTLE_RESULT_TYPE >(result_);
}
inline void BattleResultData::set_result(::E_BATTLE_RESULT_TYPE value) {
  assert(::E_BATTLE_RESULT_TYPE_IsValid(value));
  set_has_result();
  result_ = value;
}

// repeated sint32 list_atk_hp = 2;
inline int BattleResultData::list_atk_hp_size() const {
  return list_atk_hp_.size();
}
inline void BattleResultData::clear_list_atk_hp() {
  list_atk_hp_.Clear();
}
inline ::google::protobuf::int32 BattleResultData::list_atk_hp(int index) const {
  return list_atk_hp_.Get(index);
}
inline void BattleResultData::set_list_atk_hp(int index, ::google::protobuf::int32 value) {
  list_atk_hp_.Set(index, value);
}
inline void BattleResultData::add_list_atk_hp(::google::protobuf::int32 value) {
  list_atk_hp_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BattleResultData::list_atk_hp() const {
  return list_atk_hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BattleResultData::mutable_list_atk_hp() {
  return &list_atk_hp_;
}

// required sint32 def_hp = 3;
inline bool BattleResultData::has_def_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleResultData::set_has_def_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleResultData::clear_has_def_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleResultData::clear_def_hp() {
  def_hp_ = 0;
  clear_has_def_hp();
}
inline ::google::protobuf::int32 BattleResultData::def_hp() const {
  return def_hp_;
}
inline void BattleResultData::set_def_hp(::google::protobuf::int32 value) {
  set_has_def_hp();
  def_hp_ = value;
}

// -------------------------------------------------------------------

// FindWayPath

// required uint32 tar = 1;
inline bool FindWayPath::has_tar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindWayPath::set_has_tar() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindWayPath::clear_has_tar() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindWayPath::clear_tar() {
  tar_ = 0u;
  clear_has_tar();
}
inline ::google::protobuf::uint32 FindWayPath::tar() const {
  return tar_;
}
inline void FindWayPath::set_tar(::google::protobuf::uint32 value) {
  set_has_tar();
  tar_ = value;
}

// repeated uint32 pos = 2;
inline int FindWayPath::pos_size() const {
  return pos_.size();
}
inline void FindWayPath::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::uint32 FindWayPath::pos(int index) const {
  return pos_.Get(index);
}
inline void FindWayPath::set_pos(int index, ::google::protobuf::uint32 value) {
  pos_.Set(index, value);
}
inline void FindWayPath::add_pos(::google::protobuf::uint32 value) {
  pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FindWayPath::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FindWayPath::mutable_pos() {
  return &pos_;
}

// -------------------------------------------------------------------

// FindWayInfo

// required uint32 src = 1;
inline bool FindWayInfo::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindWayInfo::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindWayInfo::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindWayInfo::clear_src() {
  src_ = 0u;
  clear_has_src();
}
inline ::google::protobuf::uint32 FindWayInfo::src() const {
  return src_;
}
inline void FindWayInfo::set_src(::google::protobuf::uint32 value) {
  set_has_src();
  src_ = value;
}

// repeated .FindWayPath path = 2;
inline int FindWayInfo::path_size() const {
  return path_.size();
}
inline void FindWayInfo::clear_path() {
  path_.Clear();
}
inline const ::FindWayPath& FindWayInfo::path(int index) const {
  return path_.Get(index);
}
inline ::FindWayPath* FindWayInfo::mutable_path(int index) {
  return path_.Mutable(index);
}
inline ::FindWayPath* FindWayInfo::add_path() {
  return path_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FindWayPath >&
FindWayInfo::path() const {
  return path_;
}
inline ::google::protobuf::RepeatedPtrField< ::FindWayPath >*
FindWayInfo::mutable_path() {
  return &path_;
}

// -------------------------------------------------------------------

// FindWayData

// repeated .FindWayInfo data = 1;
inline int FindWayData::data_size() const {
  return data_.size();
}
inline void FindWayData::clear_data() {
  data_.Clear();
}
inline const ::FindWayInfo& FindWayData::data(int index) const {
  return data_.Get(index);
}
inline ::FindWayInfo* FindWayData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::FindWayInfo* FindWayData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FindWayInfo >&
FindWayData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::FindWayInfo >*
FindWayData::mutable_data() {
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Common_2eproto__INCLUDED
