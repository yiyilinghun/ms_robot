// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Battle.proto

#ifndef PROTOBUF_Battle_2eproto__INCLUDED
#define PROTOBUF_Battle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "EnumDef.pb.h"
#include "Common.pb.h"
#include "Database.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Battle_2eproto();
void protobuf_AssignDesc_Battle_2eproto();
void protobuf_ShutdownFile_Battle_2eproto();

class BattleUnitBaseInfo;
class BattleUnitInfo;
class ServerBattleUnitInfo;
class S2C_EnterBattleScene;
class S2C_BattleFrameTick;
class S2C_BattleActionForce;
class S2C_BattleUpdateMP;
class S2C_BattleWaitAction;
class C2S_BattleCommandDefend;
class S2C_BattleCommandDefend;
class S2C_BattleCommandDamage;
class BattleSkillBuffInfo;
class C2S_Ask_SetDefaultSkillType;
class C2S_BattleCommandAttack;
class BattleCommandAttackInfo;
class S2C_BattleCommandAttack;
class C2S_BattleCommandUseSkill;
class BattleCommandSkillInfo;
class S2C_BattleCommandUseSkill;
class S2C_BattleCommandTriggerBuff;
class S2C_BattleCommandRemoveBuff;
class C2S_BattleCommandCallSummon;
class C2S_BattleCommandActionDone;

// ===================================================================

class BattleUnitBaseInfo : public ::google::protobuf::Message {
 public:
  BattleUnitBaseInfo();
  virtual ~BattleUnitBaseInfo();

  BattleUnitBaseInfo(const BattleUnitBaseInfo& from);

  inline BattleUnitBaseInfo& operator=(const BattleUnitBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleUnitBaseInfo& default_instance();

  void Swap(BattleUnitBaseInfo* other);

  // implements Message ----------------------------------------------

  BattleUnitBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleUnitBaseInfo& from);
  void MergeFrom(const BattleUnitBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required bytes object_name = 2;
  inline bool has_object_name() const;
  inline void clear_object_name();
  static const int kObjectNameFieldNumber = 2;
  inline const ::std::string& object_name() const;
  inline void set_object_name(const ::std::string& value);
  inline void set_object_name(const char* value);
  inline void set_object_name(const void* value, size_t size);
  inline ::std::string* mutable_object_name();
  inline ::std::string* release_object_name();
  inline void set_allocated_object_name(::std::string* object_name);

  // required bytes display_name = 3;
  inline bool has_display_name() const;
  inline void clear_display_name();
  static const int kDisplayNameFieldNumber = 3;
  inline const ::std::string& display_name() const;
  inline void set_display_name(const ::std::string& value);
  inline void set_display_name(const char* value);
  inline void set_display_name(const void* value, size_t size);
  inline ::std::string* mutable_display_name();
  inline ::std::string* release_display_name();
  inline void set_allocated_display_name(::std::string* display_name);

  // required sint64 team_index = 4;
  inline bool has_team_index() const;
  inline void clear_team_index();
  static const int kTeamIndexFieldNumber = 4;
  inline ::google::protobuf::int64 team_index() const;
  inline void set_team_index(::google::protobuf::int64 value);

  // required sint32 team_pos = 5;
  inline bool has_team_pos() const;
  inline void clear_team_pos();
  static const int kTeamPosFieldNumber = 5;
  inline ::google::protobuf::int32 team_pos() const;
  inline void set_team_pos(::google::protobuf::int32 value);

  // required bool is_master = 6;
  inline bool has_is_master() const;
  inline void clear_is_master();
  static const int kIsMasterFieldNumber = 6;
  inline bool is_master() const;
  inline void set_is_master(bool value);

  // required sint32 reborn_sum = 7;
  inline bool has_reborn_sum() const;
  inline void clear_reborn_sum();
  static const int kRebornSumFieldNumber = 7;
  inline ::google::protobuf::int32 reborn_sum() const;
  inline void set_reborn_sum(::google::protobuf::int32 value);

  // required .E_OBJECT_TYPE object_type = 8 [default = EOT_INVALID];
  inline bool has_object_type() const;
  inline void clear_object_type();
  static const int kObjectTypeFieldNumber = 8;
  inline ::E_OBJECT_TYPE object_type() const;
  inline void set_object_type(::E_OBJECT_TYPE value);

  // @@protoc_insertion_point(class_scope:BattleUnitBaseInfo)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_object_name();
  inline void clear_has_object_name();
  inline void set_has_display_name();
  inline void clear_has_display_name();
  inline void set_has_team_index();
  inline void clear_has_team_index();
  inline void set_has_team_pos();
  inline void clear_has_team_pos();
  inline void set_has_is_master();
  inline void clear_has_is_master();
  inline void set_has_reborn_sum();
  inline void clear_has_reborn_sum();
  inline void set_has_object_type();
  inline void clear_has_object_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::std::string* object_name_;
  ::std::string* display_name_;
  ::google::protobuf::int64 team_index_;
  ::google::protobuf::int32 team_pos_;
  bool is_master_;
  ::google::protobuf::int32 reborn_sum_;
  int object_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static BattleUnitBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class BattleUnitInfo : public ::google::protobuf::Message {
 public:
  BattleUnitInfo();
  virtual ~BattleUnitInfo();

  BattleUnitInfo(const BattleUnitInfo& from);

  inline BattleUnitInfo& operator=(const BattleUnitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleUnitInfo& default_instance();

  void Swap(BattleUnitInfo* other);

  // implements Message ----------------------------------------------

  BattleUnitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleUnitInfo& from);
  void MergeFrom(const BattleUnitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .BattleUnitBaseInfo base_info = 1;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::BattleUnitBaseInfo& base_info() const;
  inline ::BattleUnitBaseInfo* mutable_base_info();
  inline ::BattleUnitBaseInfo* release_base_info();
  inline void set_allocated_base_info(::BattleUnitBaseInfo* base_info);

  // required .universal_data attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::universal_data& attr() const;
  inline ::universal_data* mutable_attr();
  inline ::universal_data* release_attr();
  inline void set_allocated_attr(::universal_data* attr);

  // @@protoc_insertion_point(class_scope:BattleUnitInfo)
 private:
  inline void set_has_base_info();
  inline void clear_has_base_info();
  inline void set_has_attr();
  inline void clear_has_attr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BattleUnitBaseInfo* base_info_;
  ::universal_data* attr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static BattleUnitInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServerBattleUnitInfo : public ::google::protobuf::Message {
 public:
  ServerBattleUnitInfo();
  virtual ~ServerBattleUnitInfo();

  ServerBattleUnitInfo(const ServerBattleUnitInfo& from);

  inline ServerBattleUnitInfo& operator=(const ServerBattleUnitInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBattleUnitInfo& default_instance();

  void Swap(ServerBattleUnitInfo* other);

  // implements Message ----------------------------------------------

  ServerBattleUnitInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerBattleUnitInfo& from);
  void MergeFrom(const ServerBattleUnitInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .BattleUnitBaseInfo base_info = 1;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::BattleUnitBaseInfo& base_info() const;
  inline ::BattleUnitBaseInfo* mutable_base_info();
  inline ::BattleUnitBaseInfo* release_base_info();
  inline void set_allocated_base_info(::BattleUnitBaseInfo* base_info);

  // required .universal_data attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline const ::universal_data& attr() const;
  inline ::universal_data* mutable_attr();
  inline ::universal_data* release_attr();
  inline void set_allocated_attr(::universal_data* attr);

  // required sint32 defaule_skill_type = 3;
  inline bool has_defaule_skill_type() const;
  inline void clear_defaule_skill_type();
  static const int kDefauleSkillTypeFieldNumber = 3;
  inline ::google::protobuf::int32 defaule_skill_type() const;
  inline void set_defaule_skill_type(::google::protobuf::int32 value);

  // required .universal_data skill_info = 4;
  inline bool has_skill_info() const;
  inline void clear_skill_info();
  static const int kSkillInfoFieldNumber = 4;
  inline const ::universal_data& skill_info() const;
  inline ::universal_data* mutable_skill_info();
  inline ::universal_data* release_skill_info();
  inline void set_allocated_skill_info(::universal_data* skill_info);

  // @@protoc_insertion_point(class_scope:ServerBattleUnitInfo)
 private:
  inline void set_has_base_info();
  inline void clear_has_base_info();
  inline void set_has_attr();
  inline void clear_has_attr();
  inline void set_has_defaule_skill_type();
  inline void clear_has_defaule_skill_type();
  inline void set_has_skill_info();
  inline void clear_has_skill_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BattleUnitBaseInfo* base_info_;
  ::universal_data* attr_;
  ::universal_data* skill_info_;
  ::google::protobuf::int32 defaule_skill_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static ServerBattleUnitInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_EnterBattleScene : public ::google::protobuf::Message {
 public:
  S2C_EnterBattleScene();
  virtual ~S2C_EnterBattleScene();

  S2C_EnterBattleScene(const S2C_EnterBattleScene& from);

  inline S2C_EnterBattleScene& operator=(const S2C_EnterBattleScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_EnterBattleScene& default_instance();

  void Swap(S2C_EnterBattleScene* other);

  // implements Message ----------------------------------------------

  S2C_EnterBattleScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_EnterBattleScene& from);
  void MergeFrom(const S2C_EnterBattleScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 self_team_index = 1;
  inline bool has_self_team_index() const;
  inline void clear_self_team_index();
  static const int kSelfTeamIndexFieldNumber = 1;
  inline ::google::protobuf::int64 self_team_index() const;
  inline void set_self_team_index(::google::protobuf::int64 value);

  // repeated .universal_data list_public_info = 2;
  inline int list_public_info_size() const;
  inline void clear_list_public_info();
  static const int kListPublicInfoFieldNumber = 2;
  inline const ::universal_data& list_public_info(int index) const;
  inline ::universal_data* mutable_list_public_info(int index);
  inline ::universal_data* add_list_public_info();
  inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
      list_public_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
      mutable_list_public_info();

  // repeated .universal_data list_memory_info = 3;
  inline int list_memory_info_size() const;
  inline void clear_list_memory_info();
  static const int kListMemoryInfoFieldNumber = 3;
  inline const ::universal_data& list_memory_info(int index) const;
  inline ::universal_data* mutable_list_memory_info(int index);
  inline ::universal_data* add_list_memory_info();
  inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
      list_memory_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
      mutable_list_memory_info();

  // repeated .BattleUnitInfo list_battle_unit_info = 4;
  inline int list_battle_unit_info_size() const;
  inline void clear_list_battle_unit_info();
  static const int kListBattleUnitInfoFieldNumber = 4;
  inline const ::BattleUnitInfo& list_battle_unit_info(int index) const;
  inline ::BattleUnitInfo* mutable_list_battle_unit_info(int index);
  inline ::BattleUnitInfo* add_list_battle_unit_info();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleUnitInfo >&
      list_battle_unit_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleUnitInfo >*
      mutable_list_battle_unit_info();

  // @@protoc_insertion_point(class_scope:S2C_EnterBattleScene)
 private:
  inline void set_has_self_team_index();
  inline void clear_has_self_team_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 self_team_index_;
  ::google::protobuf::RepeatedPtrField< ::universal_data > list_public_info_;
  ::google::protobuf::RepeatedPtrField< ::universal_data > list_memory_info_;
  ::google::protobuf::RepeatedPtrField< ::BattleUnitInfo > list_battle_unit_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_EnterBattleScene* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleFrameTick : public ::google::protobuf::Message {
 public:
  S2C_BattleFrameTick();
  virtual ~S2C_BattleFrameTick();

  S2C_BattleFrameTick(const S2C_BattleFrameTick& from);

  inline S2C_BattleFrameTick& operator=(const S2C_BattleFrameTick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleFrameTick& default_instance();

  void Swap(S2C_BattleFrameTick* other);

  // implements Message ----------------------------------------------

  S2C_BattleFrameTick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleFrameTick& from);
  void MergeFrom(const S2C_BattleFrameTick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 new_tick_num = 1;
  inline bool has_new_tick_num() const;
  inline void clear_new_tick_num();
  static const int kNewTickNumFieldNumber = 1;
  inline ::google::protobuf::int64 new_tick_num() const;
  inline void set_new_tick_num(::google::protobuf::int64 value);

  // required sint64 sum_tick_num = 2;
  inline bool has_sum_tick_num() const;
  inline void clear_sum_tick_num();
  static const int kSumTickNumFieldNumber = 2;
  inline ::google::protobuf::int64 sum_tick_num() const;
  inline void set_sum_tick_num(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:S2C_BattleFrameTick)
 private:
  inline void set_has_new_tick_num();
  inline void clear_has_new_tick_num();
  inline void set_has_sum_tick_num();
  inline void clear_has_sum_tick_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 new_tick_num_;
  ::google::protobuf::int64 sum_tick_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleFrameTick* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleActionForce : public ::google::protobuf::Message {
 public:
  S2C_BattleActionForce();
  virtual ~S2C_BattleActionForce();

  S2C_BattleActionForce(const S2C_BattleActionForce& from);

  inline S2C_BattleActionForce& operator=(const S2C_BattleActionForce& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleActionForce& default_instance();

  void Swap(S2C_BattleActionForce* other);

  // implements Message ----------------------------------------------

  S2C_BattleActionForce* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleActionForce& from);
  void MergeFrom(const S2C_BattleActionForce& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required sint32 action_force = 2;
  inline bool has_action_force() const;
  inline void clear_action_force();
  static const int kActionForceFieldNumber = 2;
  inline ::google::protobuf::int32 action_force() const;
  inline void set_action_force(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_BattleActionForce)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_action_force();
  inline void clear_has_action_force();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int32 action_force_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleActionForce* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleUpdateMP : public ::google::protobuf::Message {
 public:
  S2C_BattleUpdateMP();
  virtual ~S2C_BattleUpdateMP();

  S2C_BattleUpdateMP(const S2C_BattleUpdateMP& from);

  inline S2C_BattleUpdateMP& operator=(const S2C_BattleUpdateMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleUpdateMP& default_instance();

  void Swap(S2C_BattleUpdateMP* other);

  // implements Message ----------------------------------------------

  S2C_BattleUpdateMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleUpdateMP& from);
  void MergeFrom(const S2C_BattleUpdateMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required sint32 new_mp = 2;
  inline bool has_new_mp() const;
  inline void clear_new_mp();
  static const int kNewMpFieldNumber = 2;
  inline ::google::protobuf::int32 new_mp() const;
  inline void set_new_mp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_BattleUpdateMP)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_new_mp();
  inline void clear_has_new_mp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int32 new_mp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleUpdateMP* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleWaitAction : public ::google::protobuf::Message {
 public:
  S2C_BattleWaitAction();
  virtual ~S2C_BattleWaitAction();

  S2C_BattleWaitAction(const S2C_BattleWaitAction& from);

  inline S2C_BattleWaitAction& operator=(const S2C_BattleWaitAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleWaitAction& default_instance();

  void Swap(S2C_BattleWaitAction* other);

  // implements Message ----------------------------------------------

  S2C_BattleWaitAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleWaitAction& from);
  void MergeFrom(const S2C_BattleWaitAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required sint32 surplus_operation_second = 2;
  inline bool has_surplus_operation_second() const;
  inline void clear_surplus_operation_second();
  static const int kSurplusOperationSecondFieldNumber = 2;
  inline ::google::protobuf::int32 surplus_operation_second() const;
  inline void set_surplus_operation_second(::google::protobuf::int32 value);

  // required bool can_action = 3;
  inline bool has_can_action() const;
  inline void clear_can_action();
  static const int kCanActionFieldNumber = 3;
  inline bool can_action() const;
  inline void set_can_action(bool value);

  // @@protoc_insertion_point(class_scope:S2C_BattleWaitAction)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_surplus_operation_second();
  inline void clear_has_surplus_operation_second();
  inline void set_has_can_action();
  inline void clear_has_can_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int32 surplus_operation_second_;
  bool can_action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleWaitAction* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BattleCommandDefend : public ::google::protobuf::Message {
 public:
  C2S_BattleCommandDefend();
  virtual ~C2S_BattleCommandDefend();

  C2S_BattleCommandDefend(const C2S_BattleCommandDefend& from);

  inline C2S_BattleCommandDefend& operator=(const C2S_BattleCommandDefend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BattleCommandDefend& default_instance();

  void Swap(C2S_BattleCommandDefend* other);

  // implements Message ----------------------------------------------

  C2S_BattleCommandDefend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BattleCommandDefend& from);
  void MergeFrom(const C2S_BattleCommandDefend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_BattleCommandDefend)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static C2S_BattleCommandDefend* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleCommandDefend : public ::google::protobuf::Message {
 public:
  S2C_BattleCommandDefend();
  virtual ~S2C_BattleCommandDefend();

  S2C_BattleCommandDefend(const S2C_BattleCommandDefend& from);

  inline S2C_BattleCommandDefend& operator=(const S2C_BattleCommandDefend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleCommandDefend& default_instance();

  void Swap(S2C_BattleCommandDefend* other);

  // implements Message ----------------------------------------------

  S2C_BattleCommandDefend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleCommandDefend& from);
  void MergeFrom(const S2C_BattleCommandDefend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 recovery_hp = 2;
  inline bool has_recovery_hp() const;
  inline void clear_recovery_hp();
  static const int kRecoveryHpFieldNumber = 2;
  inline ::google::protobuf::int32 recovery_hp() const;
  inline void set_recovery_hp(::google::protobuf::int32 value);

  // required sint32 recovery_mp = 3;
  inline bool has_recovery_mp() const;
  inline void clear_recovery_mp();
  static const int kRecoveryMpFieldNumber = 3;
  inline ::google::protobuf::int32 recovery_mp() const;
  inline void set_recovery_mp(::google::protobuf::int32 value);

  // required sint32 recovery_action = 4;
  inline bool has_recovery_action() const;
  inline void clear_recovery_action();
  static const int kRecoveryActionFieldNumber = 4;
  inline ::google::protobuf::int32 recovery_action() const;
  inline void set_recovery_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_BattleCommandDefend)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_recovery_hp();
  inline void clear_has_recovery_hp();
  inline void set_has_recovery_mp();
  inline void clear_has_recovery_mp();
  inline void set_has_recovery_action();
  inline void clear_has_recovery_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 recovery_hp_;
  ::google::protobuf::int32 recovery_mp_;
  ::google::protobuf::int32 recovery_action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleCommandDefend* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleCommandDamage : public ::google::protobuf::Message {
 public:
  S2C_BattleCommandDamage();
  virtual ~S2C_BattleCommandDamage();

  S2C_BattleCommandDamage(const S2C_BattleCommandDamage& from);

  inline S2C_BattleCommandDamage& operator=(const S2C_BattleCommandDamage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleCommandDamage& default_instance();

  void Swap(S2C_BattleCommandDamage* other);

  // implements Message ----------------------------------------------

  S2C_BattleCommandDamage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleCommandDamage& from);
  void MergeFrom(const S2C_BattleCommandDamage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint32 damage_hp = 2;
  inline bool has_damage_hp() const;
  inline void clear_damage_hp();
  static const int kDamageHpFieldNumber = 2;
  inline ::google::protobuf::int32 damage_hp() const;
  inline void set_damage_hp(::google::protobuf::int32 value);

  // required sint32 damage_mp = 3;
  inline bool has_damage_mp() const;
  inline void clear_damage_mp();
  static const int kDamageMpFieldNumber = 3;
  inline ::google::protobuf::int32 damage_mp() const;
  inline void set_damage_mp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_BattleCommandDamage)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_damage_hp();
  inline void clear_has_damage_hp();
  inline void set_has_damage_mp();
  inline void clear_has_damage_mp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int32 damage_hp_;
  ::google::protobuf::int32 damage_mp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleCommandDamage* default_instance_;
};
// -------------------------------------------------------------------

class BattleSkillBuffInfo : public ::google::protobuf::Message {
 public:
  BattleSkillBuffInfo();
  virtual ~BattleSkillBuffInfo();

  BattleSkillBuffInfo(const BattleSkillBuffInfo& from);

  inline BattleSkillBuffInfo& operator=(const BattleSkillBuffInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleSkillBuffInfo& default_instance();

  void Swap(BattleSkillBuffInfo* other);

  // implements Message ----------------------------------------------

  BattleSkillBuffInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleSkillBuffInfo& from);
  void MergeFrom(const BattleSkillBuffInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 buff_id = 1;
  inline bool has_buff_id() const;
  inline void clear_buff_id();
  static const int kBuffIdFieldNumber = 1;
  inline ::google::protobuf::int32 buff_id() const;
  inline void set_buff_id(::google::protobuf::int32 value);

  // required sint32 surplus_frames = 2;
  inline bool has_surplus_frames() const;
  inline void clear_surplus_frames();
  static const int kSurplusFramesFieldNumber = 2;
  inline ::google::protobuf::int32 surplus_frames() const;
  inline void set_surplus_frames(::google::protobuf::int32 value);

  // repeated sint32 list_param_int32 = 5;
  inline int list_param_int32_size() const;
  inline void clear_list_param_int32();
  static const int kListParamInt32FieldNumber = 5;
  inline ::google::protobuf::int32 list_param_int32(int index) const;
  inline void set_list_param_int32(int index, ::google::protobuf::int32 value);
  inline void add_list_param_int32(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      list_param_int32() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_list_param_int32();

  // repeated float list_param_float = 6;
  inline int list_param_float_size() const;
  inline void clear_list_param_float();
  static const int kListParamFloatFieldNumber = 6;
  inline float list_param_float(int index) const;
  inline void set_list_param_float(int index, float value);
  inline void add_list_param_float(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      list_param_float() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_list_param_float();

  // repeated bytes list_param_string = 7;
  inline int list_param_string_size() const;
  inline void clear_list_param_string();
  static const int kListParamStringFieldNumber = 7;
  inline const ::std::string& list_param_string(int index) const;
  inline ::std::string* mutable_list_param_string(int index);
  inline void set_list_param_string(int index, const ::std::string& value);
  inline void set_list_param_string(int index, const char* value);
  inline void set_list_param_string(int index, const void* value, size_t size);
  inline ::std::string* add_list_param_string();
  inline void add_list_param_string(const ::std::string& value);
  inline void add_list_param_string(const char* value);
  inline void add_list_param_string(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& list_param_string() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_list_param_string();

  // @@protoc_insertion_point(class_scope:BattleSkillBuffInfo)
 private:
  inline void set_has_buff_id();
  inline void clear_has_buff_id();
  inline void set_has_surplus_frames();
  inline void clear_has_surplus_frames();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buff_id_;
  ::google::protobuf::int32 surplus_frames_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > list_param_int32_;
  ::google::protobuf::RepeatedField< float > list_param_float_;
  ::google::protobuf::RepeatedPtrField< ::std::string> list_param_string_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static BattleSkillBuffInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Ask_SetDefaultSkillType : public ::google::protobuf::Message {
 public:
  C2S_Ask_SetDefaultSkillType();
  virtual ~C2S_Ask_SetDefaultSkillType();

  C2S_Ask_SetDefaultSkillType(const C2S_Ask_SetDefaultSkillType& from);

  inline C2S_Ask_SetDefaultSkillType& operator=(const C2S_Ask_SetDefaultSkillType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Ask_SetDefaultSkillType& default_instance();

  void Swap(C2S_Ask_SetDefaultSkillType* other);

  // implements Message ----------------------------------------------

  C2S_Ask_SetDefaultSkillType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Ask_SetDefaultSkillType& from);
  void MergeFrom(const C2S_Ask_SetDefaultSkillType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required bytes default_skill_name = 3;
  inline bool has_default_skill_name() const;
  inline void clear_default_skill_name();
  static const int kDefaultSkillNameFieldNumber = 3;
  inline const ::std::string& default_skill_name() const;
  inline void set_default_skill_name(const ::std::string& value);
  inline void set_default_skill_name(const char* value);
  inline void set_default_skill_name(const void* value, size_t size);
  inline ::std::string* mutable_default_skill_name();
  inline ::std::string* release_default_skill_name();
  inline void set_allocated_default_skill_name(::std::string* default_skill_name);

  // @@protoc_insertion_point(class_scope:C2S_Ask_SetDefaultSkillType)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_default_skill_name();
  inline void clear_has_default_skill_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_role_index_;
  ::std::string* default_skill_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static C2S_Ask_SetDefaultSkillType* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BattleCommandAttack : public ::google::protobuf::Message {
 public:
  C2S_BattleCommandAttack();
  virtual ~C2S_BattleCommandAttack();

  C2S_BattleCommandAttack(const C2S_BattleCommandAttack& from);

  inline C2S_BattleCommandAttack& operator=(const C2S_BattleCommandAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BattleCommandAttack& default_instance();

  void Swap(C2S_BattleCommandAttack* other);

  // implements Message ----------------------------------------------

  C2S_BattleCommandAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BattleCommandAttack& from);
  void MergeFrom(const C2S_BattleCommandAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_BattleCommandAttack)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static C2S_BattleCommandAttack* default_instance_;
};
// -------------------------------------------------------------------

class BattleCommandAttackInfo : public ::google::protobuf::Message {
 public:
  BattleCommandAttackInfo();
  virtual ~BattleCommandAttackInfo();

  BattleCommandAttackInfo(const BattleCommandAttackInfo& from);

  inline BattleCommandAttackInfo& operator=(const BattleCommandAttackInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleCommandAttackInfo& default_instance();

  void Swap(BattleCommandAttackInfo* other);

  // implements Message ----------------------------------------------

  BattleCommandAttackInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleCommandAttackInfo& from);
  void MergeFrom(const BattleCommandAttackInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 tar_role_index = 1;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required sint32 damage = 2;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // required bool crit = 3;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 3;
  inline bool crit() const;
  inline void set_crit(bool value);

  // required bool deadly = 4;
  inline bool has_deadly() const;
  inline void clear_deadly();
  static const int kDeadlyFieldNumber = 4;
  inline bool deadly() const;
  inline void set_deadly(bool value);

  // required bool miss = 5;
  inline bool has_miss() const;
  inline void clear_miss();
  static const int kMissFieldNumber = 5;
  inline bool miss() const;
  inline void set_miss(bool value);

  // repeated .BattleSkillBuffInfo list_buff = 6;
  inline int list_buff_size() const;
  inline void clear_list_buff();
  static const int kListBuffFieldNumber = 6;
  inline const ::BattleSkillBuffInfo& list_buff(int index) const;
  inline ::BattleSkillBuffInfo* mutable_list_buff(int index);
  inline ::BattleSkillBuffInfo* add_list_buff();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >&
      list_buff() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >*
      mutable_list_buff();

  // @@protoc_insertion_point(class_scope:BattleCommandAttackInfo)
 private:
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_crit();
  inline void clear_has_crit();
  inline void set_has_deadly();
  inline void clear_has_deadly();
  inline void set_has_miss();
  inline void clear_has_miss();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tar_role_index_;
  ::google::protobuf::int32 damage_;
  bool crit_;
  bool deadly_;
  bool miss_;
  ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo > list_buff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static BattleCommandAttackInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleCommandAttack : public ::google::protobuf::Message {
 public:
  S2C_BattleCommandAttack();
  virtual ~S2C_BattleCommandAttack();

  S2C_BattleCommandAttack(const S2C_BattleCommandAttack& from);

  inline S2C_BattleCommandAttack& operator=(const S2C_BattleCommandAttack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleCommandAttack& default_instance();

  void Swap(S2C_BattleCommandAttack* other);

  // implements Message ----------------------------------------------

  S2C_BattleCommandAttack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleCommandAttack& from);
  void MergeFrom(const S2C_BattleCommandAttack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // repeated .BattleCommandAttackInfo list_tar = 2;
  inline int list_tar_size() const;
  inline void clear_list_tar();
  static const int kListTarFieldNumber = 2;
  inline const ::BattleCommandAttackInfo& list_tar(int index) const;
  inline ::BattleCommandAttackInfo* mutable_list_tar(int index);
  inline ::BattleCommandAttackInfo* add_list_tar();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleCommandAttackInfo >&
      list_tar() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleCommandAttackInfo >*
      mutable_list_tar();

  // @@protoc_insertion_point(class_scope:S2C_BattleCommandAttack)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::RepeatedPtrField< ::BattleCommandAttackInfo > list_tar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleCommandAttack* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BattleCommandUseSkill : public ::google::protobuf::Message {
 public:
  C2S_BattleCommandUseSkill();
  virtual ~C2S_BattleCommandUseSkill();

  C2S_BattleCommandUseSkill(const C2S_BattleCommandUseSkill& from);

  inline C2S_BattleCommandUseSkill& operator=(const C2S_BattleCommandUseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BattleCommandUseSkill& default_instance();

  void Swap(C2S_BattleCommandUseSkill* other);

  // implements Message ----------------------------------------------

  C2S_BattleCommandUseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BattleCommandUseSkill& from);
  void MergeFrom(const C2S_BattleCommandUseSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint64 tar_role_index = 2;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required bytes skill_name = 3;
  inline bool has_skill_name() const;
  inline void clear_skill_name();
  static const int kSkillNameFieldNumber = 3;
  inline const ::std::string& skill_name() const;
  inline void set_skill_name(const ::std::string& value);
  inline void set_skill_name(const char* value);
  inline void set_skill_name(const void* value, size_t size);
  inline ::std::string* mutable_skill_name();
  inline ::std::string* release_skill_name();
  inline void set_allocated_skill_name(::std::string* skill_name);

  // @@protoc_insertion_point(class_scope:C2S_BattleCommandUseSkill)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_skill_name();
  inline void clear_has_skill_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 tar_role_index_;
  ::std::string* skill_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static C2S_BattleCommandUseSkill* default_instance_;
};
// -------------------------------------------------------------------

class BattleCommandSkillInfo : public ::google::protobuf::Message {
 public:
  BattleCommandSkillInfo();
  virtual ~BattleCommandSkillInfo();

  BattleCommandSkillInfo(const BattleCommandSkillInfo& from);

  inline BattleCommandSkillInfo& operator=(const BattleCommandSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleCommandSkillInfo& default_instance();

  void Swap(BattleCommandSkillInfo* other);

  // implements Message ----------------------------------------------

  BattleCommandSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleCommandSkillInfo& from);
  void MergeFrom(const BattleCommandSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 tar_role_index = 1;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required bool crit = 2;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 2;
  inline bool crit() const;
  inline void set_crit(bool value);

  // repeated sint32 list_power = 3;
  inline int list_power_size() const;
  inline void clear_list_power();
  static const int kListPowerFieldNumber = 3;
  inline ::google::protobuf::int32 list_power(int index) const;
  inline void set_list_power(int index, ::google::protobuf::int32 value);
  inline void add_list_power(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      list_power() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_list_power();

  // repeated .BattleSkillBuffInfo list_buff = 4;
  inline int list_buff_size() const;
  inline void clear_list_buff();
  static const int kListBuffFieldNumber = 4;
  inline const ::BattleSkillBuffInfo& list_buff(int index) const;
  inline ::BattleSkillBuffInfo* mutable_list_buff(int index);
  inline ::BattleSkillBuffInfo* add_list_buff();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >&
      list_buff() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >*
      mutable_list_buff();

  // @@protoc_insertion_point(class_scope:BattleCommandSkillInfo)
 private:
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_crit();
  inline void clear_has_crit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tar_role_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > list_power_;
  ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo > list_buff_;
  bool crit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static BattleCommandSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleCommandUseSkill : public ::google::protobuf::Message {
 public:
  S2C_BattleCommandUseSkill();
  virtual ~S2C_BattleCommandUseSkill();

  S2C_BattleCommandUseSkill(const S2C_BattleCommandUseSkill& from);

  inline S2C_BattleCommandUseSkill& operator=(const S2C_BattleCommandUseSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleCommandUseSkill& default_instance();

  void Swap(S2C_BattleCommandUseSkill* other);

  // implements Message ----------------------------------------------

  S2C_BattleCommandUseSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleCommandUseSkill& from);
  void MergeFrom(const S2C_BattleCommandUseSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 src_role_index = 1;
  inline bool has_src_role_index() const;
  inline void clear_src_role_index();
  static const int kSrcRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 src_role_index() const;
  inline void set_src_role_index(::google::protobuf::int64 value);

  // required sint32 src_role_new_hp = 2;
  inline bool has_src_role_new_hp() const;
  inline void clear_src_role_new_hp();
  static const int kSrcRoleNewHpFieldNumber = 2;
  inline ::google::protobuf::int32 src_role_new_hp() const;
  inline void set_src_role_new_hp(::google::protobuf::int32 value);

  // required sint32 src_role_new_mp = 3;
  inline bool has_src_role_new_mp() const;
  inline void clear_src_role_new_mp();
  static const int kSrcRoleNewMpFieldNumber = 3;
  inline ::google::protobuf::int32 src_role_new_mp() const;
  inline void set_src_role_new_mp(::google::protobuf::int32 value);

  // required bytes skill_name = 4;
  inline bool has_skill_name() const;
  inline void clear_skill_name();
  static const int kSkillNameFieldNumber = 4;
  inline const ::std::string& skill_name() const;
  inline void set_skill_name(const ::std::string& value);
  inline void set_skill_name(const char* value);
  inline void set_skill_name(const void* value, size_t size);
  inline ::std::string* mutable_skill_name();
  inline ::std::string* release_skill_name();
  inline void set_allocated_skill_name(::std::string* skill_name);

  // required .universal_data skill_info = 5;
  inline bool has_skill_info() const;
  inline void clear_skill_info();
  static const int kSkillInfoFieldNumber = 5;
  inline const ::universal_data& skill_info() const;
  inline ::universal_data* mutable_skill_info();
  inline ::universal_data* release_skill_info();
  inline void set_allocated_skill_info(::universal_data* skill_info);

  // repeated .BattleCommandSkillInfo list_tar = 6;
  inline int list_tar_size() const;
  inline void clear_list_tar();
  static const int kListTarFieldNumber = 6;
  inline const ::BattleCommandSkillInfo& list_tar(int index) const;
  inline ::BattleCommandSkillInfo* mutable_list_tar(int index);
  inline ::BattleCommandSkillInfo* add_list_tar();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >&
      list_tar() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >*
      mutable_list_tar();

  // repeated .BattleCommandSkillInfo list_tar_splash = 7;
  inline int list_tar_splash_size() const;
  inline void clear_list_tar_splash();
  static const int kListTarSplashFieldNumber = 7;
  inline const ::BattleCommandSkillInfo& list_tar_splash(int index) const;
  inline ::BattleCommandSkillInfo* mutable_list_tar_splash(int index);
  inline ::BattleCommandSkillInfo* add_list_tar_splash();
  inline const ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >&
      list_tar_splash() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >*
      mutable_list_tar_splash();

  // @@protoc_insertion_point(class_scope:S2C_BattleCommandUseSkill)
 private:
  inline void set_has_src_role_index();
  inline void clear_has_src_role_index();
  inline void set_has_src_role_new_hp();
  inline void clear_has_src_role_new_hp();
  inline void set_has_src_role_new_mp();
  inline void clear_has_src_role_new_mp();
  inline void set_has_skill_name();
  inline void clear_has_skill_name();
  inline void set_has_skill_info();
  inline void clear_has_skill_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_role_index_;
  ::google::protobuf::int32 src_role_new_hp_;
  ::google::protobuf::int32 src_role_new_mp_;
  ::std::string* skill_name_;
  ::universal_data* skill_info_;
  ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo > list_tar_;
  ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo > list_tar_splash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleCommandUseSkill* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleCommandTriggerBuff : public ::google::protobuf::Message {
 public:
  S2C_BattleCommandTriggerBuff();
  virtual ~S2C_BattleCommandTriggerBuff();

  S2C_BattleCommandTriggerBuff(const S2C_BattleCommandTriggerBuff& from);

  inline S2C_BattleCommandTriggerBuff& operator=(const S2C_BattleCommandTriggerBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleCommandTriggerBuff& default_instance();

  void Swap(S2C_BattleCommandTriggerBuff* other);

  // implements Message ----------------------------------------------

  S2C_BattleCommandTriggerBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleCommandTriggerBuff& from);
  void MergeFrom(const S2C_BattleCommandTriggerBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 tar_role_index = 1;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required .BattleSkillBuffInfo buff = 2;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 2;
  inline const ::BattleSkillBuffInfo& buff() const;
  inline ::BattleSkillBuffInfo* mutable_buff();
  inline ::BattleSkillBuffInfo* release_buff();
  inline void set_allocated_buff(::BattleSkillBuffInfo* buff);

  // @@protoc_insertion_point(class_scope:S2C_BattleCommandTriggerBuff)
 private:
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_buff();
  inline void clear_has_buff();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tar_role_index_;
  ::BattleSkillBuffInfo* buff_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleCommandTriggerBuff* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BattleCommandRemoveBuff : public ::google::protobuf::Message {
 public:
  S2C_BattleCommandRemoveBuff();
  virtual ~S2C_BattleCommandRemoveBuff();

  S2C_BattleCommandRemoveBuff(const S2C_BattleCommandRemoveBuff& from);

  inline S2C_BattleCommandRemoveBuff& operator=(const S2C_BattleCommandRemoveBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BattleCommandRemoveBuff& default_instance();

  void Swap(S2C_BattleCommandRemoveBuff* other);

  // implements Message ----------------------------------------------

  S2C_BattleCommandRemoveBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BattleCommandRemoveBuff& from);
  void MergeFrom(const S2C_BattleCommandRemoveBuff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 tar_role_index = 1;
  inline bool has_tar_role_index() const;
  inline void clear_tar_role_index();
  static const int kTarRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 tar_role_index() const;
  inline void set_tar_role_index(::google::protobuf::int64 value);

  // required sint32 buff_id = 2;
  inline bool has_buff_id() const;
  inline void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  inline ::google::protobuf::int32 buff_id() const;
  inline void set_buff_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_BattleCommandRemoveBuff)
 private:
  inline void set_has_tar_role_index();
  inline void clear_has_tar_role_index();
  inline void set_has_buff_id();
  inline void clear_has_buff_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 tar_role_index_;
  ::google::protobuf::int32 buff_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static S2C_BattleCommandRemoveBuff* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BattleCommandCallSummon : public ::google::protobuf::Message {
 public:
  C2S_BattleCommandCallSummon();
  virtual ~C2S_BattleCommandCallSummon();

  C2S_BattleCommandCallSummon(const C2S_BattleCommandCallSummon& from);

  inline C2S_BattleCommandCallSummon& operator=(const C2S_BattleCommandCallSummon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BattleCommandCallSummon& default_instance();

  void Swap(C2S_BattleCommandCallSummon* other);

  // implements Message ----------------------------------------------

  C2S_BattleCommandCallSummon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BattleCommandCallSummon& from);
  void MergeFrom(const C2S_BattleCommandCallSummon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // required sint64 summon_role_index = 2;
  inline bool has_summon_role_index() const;
  inline void clear_summon_role_index();
  static const int kSummonRoleIndexFieldNumber = 2;
  inline ::google::protobuf::int64 summon_role_index() const;
  inline void set_summon_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_BattleCommandCallSummon)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();
  inline void set_has_summon_role_index();
  inline void clear_has_summon_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;
  ::google::protobuf::int64 summon_role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static C2S_BattleCommandCallSummon* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BattleCommandActionDone : public ::google::protobuf::Message {
 public:
  C2S_BattleCommandActionDone();
  virtual ~C2S_BattleCommandActionDone();

  C2S_BattleCommandActionDone(const C2S_BattleCommandActionDone& from);

  inline C2S_BattleCommandActionDone& operator=(const C2S_BattleCommandActionDone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BattleCommandActionDone& default_instance();

  void Swap(C2S_BattleCommandActionDone* other);

  // implements Message ----------------------------------------------

  C2S_BattleCommandActionDone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BattleCommandActionDone& from);
  void MergeFrom(const C2S_BattleCommandActionDone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint64 role_index = 1;
  inline bool has_role_index() const;
  inline void clear_role_index();
  static const int kRoleIndexFieldNumber = 1;
  inline ::google::protobuf::int64 role_index() const;
  inline void set_role_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:C2S_BattleCommandActionDone)
 private:
  inline void set_has_role_index();
  inline void clear_has_role_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 role_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Battle_2eproto();
  friend void protobuf_AssignDesc_Battle_2eproto();
  friend void protobuf_ShutdownFile_Battle_2eproto();

  void InitAsDefaultInstance();
  static C2S_BattleCommandActionDone* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleUnitBaseInfo

// required sint64 role_index = 1;
inline bool BattleUnitBaseInfo::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleUnitBaseInfo::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleUnitBaseInfo::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleUnitBaseInfo::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 BattleUnitBaseInfo::role_index() const {
  return role_index_;
}
inline void BattleUnitBaseInfo::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required bytes object_name = 2;
inline bool BattleUnitBaseInfo::has_object_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleUnitBaseInfo::set_has_object_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleUnitBaseInfo::clear_has_object_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleUnitBaseInfo::clear_object_name() {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    object_name_->clear();
  }
  clear_has_object_name();
}
inline const ::std::string& BattleUnitBaseInfo::object_name() const {
  return *object_name_;
}
inline void BattleUnitBaseInfo::set_object_name(const ::std::string& value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void BattleUnitBaseInfo::set_object_name(const char* value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void BattleUnitBaseInfo::set_object_name(const void* value, size_t size) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleUnitBaseInfo::mutable_object_name() {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  return object_name_;
}
inline ::std::string* BattleUnitBaseInfo::release_object_name() {
  clear_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = object_name_;
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleUnitBaseInfo::set_allocated_object_name(::std::string* object_name) {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    delete object_name_;
  }
  if (object_name) {
    set_has_object_name();
    object_name_ = object_name;
  } else {
    clear_has_object_name();
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes display_name = 3;
inline bool BattleUnitBaseInfo::has_display_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleUnitBaseInfo::set_has_display_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleUnitBaseInfo::clear_has_display_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleUnitBaseInfo::clear_display_name() {
  if (display_name_ != &::google::protobuf::internal::kEmptyString) {
    display_name_->clear();
  }
  clear_has_display_name();
}
inline const ::std::string& BattleUnitBaseInfo::display_name() const {
  return *display_name_;
}
inline void BattleUnitBaseInfo::set_display_name(const ::std::string& value) {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  display_name_->assign(value);
}
inline void BattleUnitBaseInfo::set_display_name(const char* value) {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  display_name_->assign(value);
}
inline void BattleUnitBaseInfo::set_display_name(const void* value, size_t size) {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  display_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleUnitBaseInfo::mutable_display_name() {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  return display_name_;
}
inline ::std::string* BattleUnitBaseInfo::release_display_name() {
  clear_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = display_name_;
    display_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleUnitBaseInfo::set_allocated_display_name(::std::string* display_name) {
  if (display_name_ != &::google::protobuf::internal::kEmptyString) {
    delete display_name_;
  }
  if (display_name) {
    set_has_display_name();
    display_name_ = display_name;
  } else {
    clear_has_display_name();
    display_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint64 team_index = 4;
inline bool BattleUnitBaseInfo::has_team_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleUnitBaseInfo::set_has_team_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleUnitBaseInfo::clear_has_team_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleUnitBaseInfo::clear_team_index() {
  team_index_ = GOOGLE_LONGLONG(0);
  clear_has_team_index();
}
inline ::google::protobuf::int64 BattleUnitBaseInfo::team_index() const {
  return team_index_;
}
inline void BattleUnitBaseInfo::set_team_index(::google::protobuf::int64 value) {
  set_has_team_index();
  team_index_ = value;
}

// required sint32 team_pos = 5;
inline bool BattleUnitBaseInfo::has_team_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleUnitBaseInfo::set_has_team_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleUnitBaseInfo::clear_has_team_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleUnitBaseInfo::clear_team_pos() {
  team_pos_ = 0;
  clear_has_team_pos();
}
inline ::google::protobuf::int32 BattleUnitBaseInfo::team_pos() const {
  return team_pos_;
}
inline void BattleUnitBaseInfo::set_team_pos(::google::protobuf::int32 value) {
  set_has_team_pos();
  team_pos_ = value;
}

// required bool is_master = 6;
inline bool BattleUnitBaseInfo::has_is_master() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleUnitBaseInfo::set_has_is_master() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleUnitBaseInfo::clear_has_is_master() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleUnitBaseInfo::clear_is_master() {
  is_master_ = false;
  clear_has_is_master();
}
inline bool BattleUnitBaseInfo::is_master() const {
  return is_master_;
}
inline void BattleUnitBaseInfo::set_is_master(bool value) {
  set_has_is_master();
  is_master_ = value;
}

// required sint32 reborn_sum = 7;
inline bool BattleUnitBaseInfo::has_reborn_sum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleUnitBaseInfo::set_has_reborn_sum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleUnitBaseInfo::clear_has_reborn_sum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleUnitBaseInfo::clear_reborn_sum() {
  reborn_sum_ = 0;
  clear_has_reborn_sum();
}
inline ::google::protobuf::int32 BattleUnitBaseInfo::reborn_sum() const {
  return reborn_sum_;
}
inline void BattleUnitBaseInfo::set_reborn_sum(::google::protobuf::int32 value) {
  set_has_reborn_sum();
  reborn_sum_ = value;
}

// required .E_OBJECT_TYPE object_type = 8 [default = EOT_INVALID];
inline bool BattleUnitBaseInfo::has_object_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BattleUnitBaseInfo::set_has_object_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BattleUnitBaseInfo::clear_has_object_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BattleUnitBaseInfo::clear_object_type() {
  object_type_ = 0;
  clear_has_object_type();
}
inline ::E_OBJECT_TYPE BattleUnitBaseInfo::object_type() const {
  return static_cast< ::E_OBJECT_TYPE >(object_type_);
}
inline void BattleUnitBaseInfo::set_object_type(::E_OBJECT_TYPE value) {
  assert(::E_OBJECT_TYPE_IsValid(value));
  set_has_object_type();
  object_type_ = value;
}

// -------------------------------------------------------------------

// BattleUnitInfo

// required .BattleUnitBaseInfo base_info = 1;
inline bool BattleUnitInfo::has_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleUnitInfo::set_has_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleUnitInfo::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleUnitInfo::clear_base_info() {
  if (base_info_ != nullptr) base_info_->::BattleUnitBaseInfo::Clear();
  clear_has_base_info();
}
inline const ::BattleUnitBaseInfo& BattleUnitInfo::base_info() const {
  return base_info_ != nullptr ? *base_info_ : *default_instance_->base_info_;
}
inline ::BattleUnitBaseInfo* BattleUnitInfo::mutable_base_info() {
  set_has_base_info();
  if (base_info_ == nullptr) base_info_ = new ::BattleUnitBaseInfo;
  return base_info_;
}
inline ::BattleUnitBaseInfo* BattleUnitInfo::release_base_info() {
  clear_has_base_info();
  ::BattleUnitBaseInfo* temp = base_info_;
  base_info_ = nullptr;
  return temp;
}
inline void BattleUnitInfo::set_allocated_base_info(::BattleUnitBaseInfo* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// required .universal_data attr = 2;
inline bool BattleUnitInfo::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleUnitInfo::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleUnitInfo::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleUnitInfo::clear_attr() {
  if (attr_ != nullptr) attr_->::universal_data::Clear();
  clear_has_attr();
}
inline const ::universal_data& BattleUnitInfo::attr() const {
  return attr_ != nullptr ? *attr_ : *default_instance_->attr_;
}
inline ::universal_data* BattleUnitInfo::mutable_attr() {
  set_has_attr();
  if (attr_ == nullptr) attr_ = new ::universal_data;
  return attr_;
}
inline ::universal_data* BattleUnitInfo::release_attr() {
  clear_has_attr();
  ::universal_data* temp = attr_;
  attr_ = nullptr;
  return temp;
}
inline void BattleUnitInfo::set_allocated_attr(::universal_data* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// -------------------------------------------------------------------

// ServerBattleUnitInfo

// required .BattleUnitBaseInfo base_info = 1;
inline bool ServerBattleUnitInfo::has_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerBattleUnitInfo::set_has_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerBattleUnitInfo::clear_has_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerBattleUnitInfo::clear_base_info() {
  if (base_info_ != nullptr) base_info_->::BattleUnitBaseInfo::Clear();
  clear_has_base_info();
}
inline const ::BattleUnitBaseInfo& ServerBattleUnitInfo::base_info() const {
  return base_info_ != nullptr ? *base_info_ : *default_instance_->base_info_;
}
inline ::BattleUnitBaseInfo* ServerBattleUnitInfo::mutable_base_info() {
  set_has_base_info();
  if (base_info_ == nullptr) base_info_ = new ::BattleUnitBaseInfo;
  return base_info_;
}
inline ::BattleUnitBaseInfo* ServerBattleUnitInfo::release_base_info() {
  clear_has_base_info();
  ::BattleUnitBaseInfo* temp = base_info_;
  base_info_ = nullptr;
  return temp;
}
inline void ServerBattleUnitInfo::set_allocated_base_info(::BattleUnitBaseInfo* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    set_has_base_info();
  } else {
    clear_has_base_info();
  }
}

// required .universal_data attr = 2;
inline bool ServerBattleUnitInfo::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerBattleUnitInfo::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerBattleUnitInfo::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerBattleUnitInfo::clear_attr() {
  if (attr_ != nullptr) attr_->::universal_data::Clear();
  clear_has_attr();
}
inline const ::universal_data& ServerBattleUnitInfo::attr() const {
  return attr_ != nullptr ? *attr_ : *default_instance_->attr_;
}
inline ::universal_data* ServerBattleUnitInfo::mutable_attr() {
  set_has_attr();
  if (attr_ == nullptr) attr_ = new ::universal_data;
  return attr_;
}
inline ::universal_data* ServerBattleUnitInfo::release_attr() {
  clear_has_attr();
  ::universal_data* temp = attr_;
  attr_ = nullptr;
  return temp;
}
inline void ServerBattleUnitInfo::set_allocated_attr(::universal_data* attr) {
  delete attr_;
  attr_ = attr;
  if (attr) {
    set_has_attr();
  } else {
    clear_has_attr();
  }
}

// required sint32 defaule_skill_type = 3;
inline bool ServerBattleUnitInfo::has_defaule_skill_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerBattleUnitInfo::set_has_defaule_skill_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerBattleUnitInfo::clear_has_defaule_skill_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerBattleUnitInfo::clear_defaule_skill_type() {
  defaule_skill_type_ = 0;
  clear_has_defaule_skill_type();
}
inline ::google::protobuf::int32 ServerBattleUnitInfo::defaule_skill_type() const {
  return defaule_skill_type_;
}
inline void ServerBattleUnitInfo::set_defaule_skill_type(::google::protobuf::int32 value) {
  set_has_defaule_skill_type();
  defaule_skill_type_ = value;
}

// required .universal_data skill_info = 4;
inline bool ServerBattleUnitInfo::has_skill_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerBattleUnitInfo::set_has_skill_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerBattleUnitInfo::clear_has_skill_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerBattleUnitInfo::clear_skill_info() {
  if (skill_info_ != nullptr) skill_info_->::universal_data::Clear();
  clear_has_skill_info();
}
inline const ::universal_data& ServerBattleUnitInfo::skill_info() const {
  return skill_info_ != nullptr ? *skill_info_ : *default_instance_->skill_info_;
}
inline ::universal_data* ServerBattleUnitInfo::mutable_skill_info() {
  set_has_skill_info();
  if (skill_info_ == nullptr) skill_info_ = new ::universal_data;
  return skill_info_;
}
inline ::universal_data* ServerBattleUnitInfo::release_skill_info() {
  clear_has_skill_info();
  ::universal_data* temp = skill_info_;
  skill_info_ = nullptr;
  return temp;
}
inline void ServerBattleUnitInfo::set_allocated_skill_info(::universal_data* skill_info) {
  delete skill_info_;
  skill_info_ = skill_info;
  if (skill_info) {
    set_has_skill_info();
  } else {
    clear_has_skill_info();
  }
}

// -------------------------------------------------------------------

// S2C_EnterBattleScene

// required sint64 self_team_index = 1;
inline bool S2C_EnterBattleScene::has_self_team_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_EnterBattleScene::set_has_self_team_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_EnterBattleScene::clear_has_self_team_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_EnterBattleScene::clear_self_team_index() {
  self_team_index_ = GOOGLE_LONGLONG(0);
  clear_has_self_team_index();
}
inline ::google::protobuf::int64 S2C_EnterBattleScene::self_team_index() const {
  return self_team_index_;
}
inline void S2C_EnterBattleScene::set_self_team_index(::google::protobuf::int64 value) {
  set_has_self_team_index();
  self_team_index_ = value;
}

// repeated .universal_data list_public_info = 2;
inline int S2C_EnterBattleScene::list_public_info_size() const {
  return list_public_info_.size();
}
inline void S2C_EnterBattleScene::clear_list_public_info() {
  list_public_info_.Clear();
}
inline const ::universal_data& S2C_EnterBattleScene::list_public_info(int index) const {
  return list_public_info_.Get(index);
}
inline ::universal_data* S2C_EnterBattleScene::mutable_list_public_info(int index) {
  return list_public_info_.Mutable(index);
}
inline ::universal_data* S2C_EnterBattleScene::add_list_public_info() {
  return list_public_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
S2C_EnterBattleScene::list_public_info() const {
  return list_public_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
S2C_EnterBattleScene::mutable_list_public_info() {
  return &list_public_info_;
}

// repeated .universal_data list_memory_info = 3;
inline int S2C_EnterBattleScene::list_memory_info_size() const {
  return list_memory_info_.size();
}
inline void S2C_EnterBattleScene::clear_list_memory_info() {
  list_memory_info_.Clear();
}
inline const ::universal_data& S2C_EnterBattleScene::list_memory_info(int index) const {
  return list_memory_info_.Get(index);
}
inline ::universal_data* S2C_EnterBattleScene::mutable_list_memory_info(int index) {
  return list_memory_info_.Mutable(index);
}
inline ::universal_data* S2C_EnterBattleScene::add_list_memory_info() {
  return list_memory_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::universal_data >&
S2C_EnterBattleScene::list_memory_info() const {
  return list_memory_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::universal_data >*
S2C_EnterBattleScene::mutable_list_memory_info() {
  return &list_memory_info_;
}

// repeated .BattleUnitInfo list_battle_unit_info = 4;
inline int S2C_EnterBattleScene::list_battle_unit_info_size() const {
  return list_battle_unit_info_.size();
}
inline void S2C_EnterBattleScene::clear_list_battle_unit_info() {
  list_battle_unit_info_.Clear();
}
inline const ::BattleUnitInfo& S2C_EnterBattleScene::list_battle_unit_info(int index) const {
  return list_battle_unit_info_.Get(index);
}
inline ::BattleUnitInfo* S2C_EnterBattleScene::mutable_list_battle_unit_info(int index) {
  return list_battle_unit_info_.Mutable(index);
}
inline ::BattleUnitInfo* S2C_EnterBattleScene::add_list_battle_unit_info() {
  return list_battle_unit_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleUnitInfo >&
S2C_EnterBattleScene::list_battle_unit_info() const {
  return list_battle_unit_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleUnitInfo >*
S2C_EnterBattleScene::mutable_list_battle_unit_info() {
  return &list_battle_unit_info_;
}

// -------------------------------------------------------------------

// S2C_BattleFrameTick

// required sint64 new_tick_num = 1;
inline bool S2C_BattleFrameTick::has_new_tick_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleFrameTick::set_has_new_tick_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleFrameTick::clear_has_new_tick_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleFrameTick::clear_new_tick_num() {
  new_tick_num_ = GOOGLE_LONGLONG(0);
  clear_has_new_tick_num();
}
inline ::google::protobuf::int64 S2C_BattleFrameTick::new_tick_num() const {
  return new_tick_num_;
}
inline void S2C_BattleFrameTick::set_new_tick_num(::google::protobuf::int64 value) {
  set_has_new_tick_num();
  new_tick_num_ = value;
}

// required sint64 sum_tick_num = 2;
inline bool S2C_BattleFrameTick::has_sum_tick_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleFrameTick::set_has_sum_tick_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleFrameTick::clear_has_sum_tick_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleFrameTick::clear_sum_tick_num() {
  sum_tick_num_ = GOOGLE_LONGLONG(0);
  clear_has_sum_tick_num();
}
inline ::google::protobuf::int64 S2C_BattleFrameTick::sum_tick_num() const {
  return sum_tick_num_;
}
inline void S2C_BattleFrameTick::set_sum_tick_num(::google::protobuf::int64 value) {
  set_has_sum_tick_num();
  sum_tick_num_ = value;
}

// -------------------------------------------------------------------

// S2C_BattleActionForce

// required sint64 src_role_index = 1;
inline bool S2C_BattleActionForce::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleActionForce::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleActionForce::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleActionForce::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_BattleActionForce::src_role_index() const {
  return src_role_index_;
}
inline void S2C_BattleActionForce::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required sint32 action_force = 2;
inline bool S2C_BattleActionForce::has_action_force() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleActionForce::set_has_action_force() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleActionForce::clear_has_action_force() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleActionForce::clear_action_force() {
  action_force_ = 0;
  clear_has_action_force();
}
inline ::google::protobuf::int32 S2C_BattleActionForce::action_force() const {
  return action_force_;
}
inline void S2C_BattleActionForce::set_action_force(::google::protobuf::int32 value) {
  set_has_action_force();
  action_force_ = value;
}

// -------------------------------------------------------------------

// S2C_BattleUpdateMP

// required sint64 src_role_index = 1;
inline bool S2C_BattleUpdateMP::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleUpdateMP::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleUpdateMP::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleUpdateMP::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_BattleUpdateMP::src_role_index() const {
  return src_role_index_;
}
inline void S2C_BattleUpdateMP::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required sint32 new_mp = 2;
inline bool S2C_BattleUpdateMP::has_new_mp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleUpdateMP::set_has_new_mp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleUpdateMP::clear_has_new_mp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleUpdateMP::clear_new_mp() {
  new_mp_ = 0;
  clear_has_new_mp();
}
inline ::google::protobuf::int32 S2C_BattleUpdateMP::new_mp() const {
  return new_mp_;
}
inline void S2C_BattleUpdateMP::set_new_mp(::google::protobuf::int32 value) {
  set_has_new_mp();
  new_mp_ = value;
}

// -------------------------------------------------------------------

// S2C_BattleWaitAction

// required sint64 src_role_index = 1;
inline bool S2C_BattleWaitAction::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleWaitAction::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleWaitAction::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleWaitAction::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_BattleWaitAction::src_role_index() const {
  return src_role_index_;
}
inline void S2C_BattleWaitAction::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required sint32 surplus_operation_second = 2;
inline bool S2C_BattleWaitAction::has_surplus_operation_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleWaitAction::set_has_surplus_operation_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleWaitAction::clear_has_surplus_operation_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleWaitAction::clear_surplus_operation_second() {
  surplus_operation_second_ = 0;
  clear_has_surplus_operation_second();
}
inline ::google::protobuf::int32 S2C_BattleWaitAction::surplus_operation_second() const {
  return surplus_operation_second_;
}
inline void S2C_BattleWaitAction::set_surplus_operation_second(::google::protobuf::int32 value) {
  set_has_surplus_operation_second();
  surplus_operation_second_ = value;
}

// required bool can_action = 3;
inline bool S2C_BattleWaitAction::has_can_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_BattleWaitAction::set_has_can_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_BattleWaitAction::clear_has_can_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_BattleWaitAction::clear_can_action() {
  can_action_ = false;
  clear_has_can_action();
}
inline bool S2C_BattleWaitAction::can_action() const {
  return can_action_;
}
inline void S2C_BattleWaitAction::set_can_action(bool value) {
  set_has_can_action();
  can_action_ = value;
}

// -------------------------------------------------------------------

// C2S_BattleCommandDefend

// required sint64 role_index = 1;
inline bool C2S_BattleCommandDefend::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BattleCommandDefend::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BattleCommandDefend::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BattleCommandDefend::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandDefend::role_index() const {
  return role_index_;
}
inline void C2S_BattleCommandDefend::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// -------------------------------------------------------------------

// S2C_BattleCommandDefend

// required sint64 role_index = 1;
inline bool S2C_BattleCommandDefend::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleCommandDefend::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleCommandDefend::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleCommandDefend::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_BattleCommandDefend::role_index() const {
  return role_index_;
}
inline void S2C_BattleCommandDefend::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 recovery_hp = 2;
inline bool S2C_BattleCommandDefend::has_recovery_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleCommandDefend::set_has_recovery_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleCommandDefend::clear_has_recovery_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleCommandDefend::clear_recovery_hp() {
  recovery_hp_ = 0;
  clear_has_recovery_hp();
}
inline ::google::protobuf::int32 S2C_BattleCommandDefend::recovery_hp() const {
  return recovery_hp_;
}
inline void S2C_BattleCommandDefend::set_recovery_hp(::google::protobuf::int32 value) {
  set_has_recovery_hp();
  recovery_hp_ = value;
}

// required sint32 recovery_mp = 3;
inline bool S2C_BattleCommandDefend::has_recovery_mp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_BattleCommandDefend::set_has_recovery_mp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_BattleCommandDefend::clear_has_recovery_mp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_BattleCommandDefend::clear_recovery_mp() {
  recovery_mp_ = 0;
  clear_has_recovery_mp();
}
inline ::google::protobuf::int32 S2C_BattleCommandDefend::recovery_mp() const {
  return recovery_mp_;
}
inline void S2C_BattleCommandDefend::set_recovery_mp(::google::protobuf::int32 value) {
  set_has_recovery_mp();
  recovery_mp_ = value;
}

// required sint32 recovery_action = 4;
inline bool S2C_BattleCommandDefend::has_recovery_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_BattleCommandDefend::set_has_recovery_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_BattleCommandDefend::clear_has_recovery_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_BattleCommandDefend::clear_recovery_action() {
  recovery_action_ = 0;
  clear_has_recovery_action();
}
inline ::google::protobuf::int32 S2C_BattleCommandDefend::recovery_action() const {
  return recovery_action_;
}
inline void S2C_BattleCommandDefend::set_recovery_action(::google::protobuf::int32 value) {
  set_has_recovery_action();
  recovery_action_ = value;
}

// -------------------------------------------------------------------

// S2C_BattleCommandDamage

// required sint64 role_index = 1;
inline bool S2C_BattleCommandDamage::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleCommandDamage::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleCommandDamage::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleCommandDamage::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 S2C_BattleCommandDamage::role_index() const {
  return role_index_;
}
inline void S2C_BattleCommandDamage::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint32 damage_hp = 2;
inline bool S2C_BattleCommandDamage::has_damage_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleCommandDamage::set_has_damage_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleCommandDamage::clear_has_damage_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleCommandDamage::clear_damage_hp() {
  damage_hp_ = 0;
  clear_has_damage_hp();
}
inline ::google::protobuf::int32 S2C_BattleCommandDamage::damage_hp() const {
  return damage_hp_;
}
inline void S2C_BattleCommandDamage::set_damage_hp(::google::protobuf::int32 value) {
  set_has_damage_hp();
  damage_hp_ = value;
}

// required sint32 damage_mp = 3;
inline bool S2C_BattleCommandDamage::has_damage_mp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_BattleCommandDamage::set_has_damage_mp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_BattleCommandDamage::clear_has_damage_mp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_BattleCommandDamage::clear_damage_mp() {
  damage_mp_ = 0;
  clear_has_damage_mp();
}
inline ::google::protobuf::int32 S2C_BattleCommandDamage::damage_mp() const {
  return damage_mp_;
}
inline void S2C_BattleCommandDamage::set_damage_mp(::google::protobuf::int32 value) {
  set_has_damage_mp();
  damage_mp_ = value;
}

// -------------------------------------------------------------------

// BattleSkillBuffInfo

// required sint32 buff_id = 1;
inline bool BattleSkillBuffInfo::has_buff_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleSkillBuffInfo::set_has_buff_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleSkillBuffInfo::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleSkillBuffInfo::clear_buff_id() {
  buff_id_ = 0;
  clear_has_buff_id();
}
inline ::google::protobuf::int32 BattleSkillBuffInfo::buff_id() const {
  return buff_id_;
}
inline void BattleSkillBuffInfo::set_buff_id(::google::protobuf::int32 value) {
  set_has_buff_id();
  buff_id_ = value;
}

// required sint32 surplus_frames = 2;
inline bool BattleSkillBuffInfo::has_surplus_frames() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleSkillBuffInfo::set_has_surplus_frames() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleSkillBuffInfo::clear_has_surplus_frames() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleSkillBuffInfo::clear_surplus_frames() {
  surplus_frames_ = 0;
  clear_has_surplus_frames();
}
inline ::google::protobuf::int32 BattleSkillBuffInfo::surplus_frames() const {
  return surplus_frames_;
}
inline void BattleSkillBuffInfo::set_surplus_frames(::google::protobuf::int32 value) {
  set_has_surplus_frames();
  surplus_frames_ = value;
}

// repeated sint32 list_param_int32 = 5;
inline int BattleSkillBuffInfo::list_param_int32_size() const {
  return list_param_int32_.size();
}
inline void BattleSkillBuffInfo::clear_list_param_int32() {
  list_param_int32_.Clear();
}
inline ::google::protobuf::int32 BattleSkillBuffInfo::list_param_int32(int index) const {
  return list_param_int32_.Get(index);
}
inline void BattleSkillBuffInfo::set_list_param_int32(int index, ::google::protobuf::int32 value) {
  list_param_int32_.Set(index, value);
}
inline void BattleSkillBuffInfo::add_list_param_int32(::google::protobuf::int32 value) {
  list_param_int32_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BattleSkillBuffInfo::list_param_int32() const {
  return list_param_int32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BattleSkillBuffInfo::mutable_list_param_int32() {
  return &list_param_int32_;
}

// repeated float list_param_float = 6;
inline int BattleSkillBuffInfo::list_param_float_size() const {
  return list_param_float_.size();
}
inline void BattleSkillBuffInfo::clear_list_param_float() {
  list_param_float_.Clear();
}
inline float BattleSkillBuffInfo::list_param_float(int index) const {
  return list_param_float_.Get(index);
}
inline void BattleSkillBuffInfo::set_list_param_float(int index, float value) {
  list_param_float_.Set(index, value);
}
inline void BattleSkillBuffInfo::add_list_param_float(float value) {
  list_param_float_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
BattleSkillBuffInfo::list_param_float() const {
  return list_param_float_;
}
inline ::google::protobuf::RepeatedField< float >*
BattleSkillBuffInfo::mutable_list_param_float() {
  return &list_param_float_;
}

// repeated bytes list_param_string = 7;
inline int BattleSkillBuffInfo::list_param_string_size() const {
  return list_param_string_.size();
}
inline void BattleSkillBuffInfo::clear_list_param_string() {
  list_param_string_.Clear();
}
inline const ::std::string& BattleSkillBuffInfo::list_param_string(int index) const {
  return list_param_string_.Get(index);
}
inline ::std::string* BattleSkillBuffInfo::mutable_list_param_string(int index) {
  return list_param_string_.Mutable(index);
}
inline void BattleSkillBuffInfo::set_list_param_string(int index, const ::std::string& value) {
  list_param_string_.Mutable(index)->assign(value);
}
inline void BattleSkillBuffInfo::set_list_param_string(int index, const char* value) {
  list_param_string_.Mutable(index)->assign(value);
}
inline void BattleSkillBuffInfo::set_list_param_string(int index, const void* value, size_t size) {
  list_param_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleSkillBuffInfo::add_list_param_string() {
  return list_param_string_.Add();
}
inline void BattleSkillBuffInfo::add_list_param_string(const ::std::string& value) {
  list_param_string_.Add()->assign(value);
}
inline void BattleSkillBuffInfo::add_list_param_string(const char* value) {
  list_param_string_.Add()->assign(value);
}
inline void BattleSkillBuffInfo::add_list_param_string(const void* value, size_t size) {
  list_param_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BattleSkillBuffInfo::list_param_string() const {
  return list_param_string_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BattleSkillBuffInfo::mutable_list_param_string() {
  return &list_param_string_;
}

// -------------------------------------------------------------------

// C2S_Ask_SetDefaultSkillType

// required sint64 role_index = 1;
inline bool C2S_Ask_SetDefaultSkillType::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Ask_SetDefaultSkillType::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Ask_SetDefaultSkillType::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Ask_SetDefaultSkillType::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_SetDefaultSkillType::role_index() const {
  return role_index_;
}
inline void C2S_Ask_SetDefaultSkillType::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint64 tar_role_index = 2;
inline bool C2S_Ask_SetDefaultSkillType::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Ask_SetDefaultSkillType::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Ask_SetDefaultSkillType::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Ask_SetDefaultSkillType::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 C2S_Ask_SetDefaultSkillType::tar_role_index() const {
  return tar_role_index_;
}
inline void C2S_Ask_SetDefaultSkillType::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required bytes default_skill_name = 3;
inline bool C2S_Ask_SetDefaultSkillType::has_default_skill_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_Ask_SetDefaultSkillType::set_has_default_skill_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_Ask_SetDefaultSkillType::clear_has_default_skill_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_Ask_SetDefaultSkillType::clear_default_skill_name() {
  if (default_skill_name_ != &::google::protobuf::internal::kEmptyString) {
    default_skill_name_->clear();
  }
  clear_has_default_skill_name();
}
inline const ::std::string& C2S_Ask_SetDefaultSkillType::default_skill_name() const {
  return *default_skill_name_;
}
inline void C2S_Ask_SetDefaultSkillType::set_default_skill_name(const ::std::string& value) {
  set_has_default_skill_name();
  if (default_skill_name_ == &::google::protobuf::internal::kEmptyString) {
    default_skill_name_ = new ::std::string;
  }
  default_skill_name_->assign(value);
}
inline void C2S_Ask_SetDefaultSkillType::set_default_skill_name(const char* value) {
  set_has_default_skill_name();
  if (default_skill_name_ == &::google::protobuf::internal::kEmptyString) {
    default_skill_name_ = new ::std::string;
  }
  default_skill_name_->assign(value);
}
inline void C2S_Ask_SetDefaultSkillType::set_default_skill_name(const void* value, size_t size) {
  set_has_default_skill_name();
  if (default_skill_name_ == &::google::protobuf::internal::kEmptyString) {
    default_skill_name_ = new ::std::string;
  }
  default_skill_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_Ask_SetDefaultSkillType::mutable_default_skill_name() {
  set_has_default_skill_name();
  if (default_skill_name_ == &::google::protobuf::internal::kEmptyString) {
    default_skill_name_ = new ::std::string;
  }
  return default_skill_name_;
}
inline ::std::string* C2S_Ask_SetDefaultSkillType::release_default_skill_name() {
  clear_has_default_skill_name();
  if (default_skill_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = default_skill_name_;
    default_skill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_Ask_SetDefaultSkillType::set_allocated_default_skill_name(::std::string* default_skill_name) {
  if (default_skill_name_ != &::google::protobuf::internal::kEmptyString) {
    delete default_skill_name_;
  }
  if (default_skill_name) {
    set_has_default_skill_name();
    default_skill_name_ = default_skill_name;
  } else {
    clear_has_default_skill_name();
    default_skill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_BattleCommandAttack

// required sint64 role_index = 1;
inline bool C2S_BattleCommandAttack::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BattleCommandAttack::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BattleCommandAttack::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BattleCommandAttack::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandAttack::role_index() const {
  return role_index_;
}
inline void C2S_BattleCommandAttack::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint64 tar_role_index = 2;
inline bool C2S_BattleCommandAttack::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_BattleCommandAttack::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_BattleCommandAttack::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_BattleCommandAttack::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandAttack::tar_role_index() const {
  return tar_role_index_;
}
inline void C2S_BattleCommandAttack::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// -------------------------------------------------------------------

// BattleCommandAttackInfo

// required sint64 tar_role_index = 1;
inline bool BattleCommandAttackInfo::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleCommandAttackInfo::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleCommandAttackInfo::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleCommandAttackInfo::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 BattleCommandAttackInfo::tar_role_index() const {
  return tar_role_index_;
}
inline void BattleCommandAttackInfo::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required sint32 damage = 2;
inline bool BattleCommandAttackInfo::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleCommandAttackInfo::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleCommandAttackInfo::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleCommandAttackInfo::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 BattleCommandAttackInfo::damage() const {
  return damage_;
}
inline void BattleCommandAttackInfo::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
}

// required bool crit = 3;
inline bool BattleCommandAttackInfo::has_crit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleCommandAttackInfo::set_has_crit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleCommandAttackInfo::clear_has_crit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleCommandAttackInfo::clear_crit() {
  crit_ = false;
  clear_has_crit();
}
inline bool BattleCommandAttackInfo::crit() const {
  return crit_;
}
inline void BattleCommandAttackInfo::set_crit(bool value) {
  set_has_crit();
  crit_ = value;
}

// required bool deadly = 4;
inline bool BattleCommandAttackInfo::has_deadly() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleCommandAttackInfo::set_has_deadly() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleCommandAttackInfo::clear_has_deadly() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleCommandAttackInfo::clear_deadly() {
  deadly_ = false;
  clear_has_deadly();
}
inline bool BattleCommandAttackInfo::deadly() const {
  return deadly_;
}
inline void BattleCommandAttackInfo::set_deadly(bool value) {
  set_has_deadly();
  deadly_ = value;
}

// required bool miss = 5;
inline bool BattleCommandAttackInfo::has_miss() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleCommandAttackInfo::set_has_miss() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleCommandAttackInfo::clear_has_miss() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleCommandAttackInfo::clear_miss() {
  miss_ = false;
  clear_has_miss();
}
inline bool BattleCommandAttackInfo::miss() const {
  return miss_;
}
inline void BattleCommandAttackInfo::set_miss(bool value) {
  set_has_miss();
  miss_ = value;
}

// repeated .BattleSkillBuffInfo list_buff = 6;
inline int BattleCommandAttackInfo::list_buff_size() const {
  return list_buff_.size();
}
inline void BattleCommandAttackInfo::clear_list_buff() {
  list_buff_.Clear();
}
inline const ::BattleSkillBuffInfo& BattleCommandAttackInfo::list_buff(int index) const {
  return list_buff_.Get(index);
}
inline ::BattleSkillBuffInfo* BattleCommandAttackInfo::mutable_list_buff(int index) {
  return list_buff_.Mutable(index);
}
inline ::BattleSkillBuffInfo* BattleCommandAttackInfo::add_list_buff() {
  return list_buff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >&
BattleCommandAttackInfo::list_buff() const {
  return list_buff_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >*
BattleCommandAttackInfo::mutable_list_buff() {
  return &list_buff_;
}

// -------------------------------------------------------------------

// S2C_BattleCommandAttack

// required sint64 src_role_index = 1;
inline bool S2C_BattleCommandAttack::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleCommandAttack::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleCommandAttack::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleCommandAttack::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_BattleCommandAttack::src_role_index() const {
  return src_role_index_;
}
inline void S2C_BattleCommandAttack::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// repeated .BattleCommandAttackInfo list_tar = 2;
inline int S2C_BattleCommandAttack::list_tar_size() const {
  return list_tar_.size();
}
inline void S2C_BattleCommandAttack::clear_list_tar() {
  list_tar_.Clear();
}
inline const ::BattleCommandAttackInfo& S2C_BattleCommandAttack::list_tar(int index) const {
  return list_tar_.Get(index);
}
inline ::BattleCommandAttackInfo* S2C_BattleCommandAttack::mutable_list_tar(int index) {
  return list_tar_.Mutable(index);
}
inline ::BattleCommandAttackInfo* S2C_BattleCommandAttack::add_list_tar() {
  return list_tar_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleCommandAttackInfo >&
S2C_BattleCommandAttack::list_tar() const {
  return list_tar_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleCommandAttackInfo >*
S2C_BattleCommandAttack::mutable_list_tar() {
  return &list_tar_;
}

// -------------------------------------------------------------------

// C2S_BattleCommandUseSkill

// required sint64 role_index = 1;
inline bool C2S_BattleCommandUseSkill::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BattleCommandUseSkill::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BattleCommandUseSkill::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BattleCommandUseSkill::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandUseSkill::role_index() const {
  return role_index_;
}
inline void C2S_BattleCommandUseSkill::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint64 tar_role_index = 2;
inline bool C2S_BattleCommandUseSkill::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_BattleCommandUseSkill::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_BattleCommandUseSkill::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_BattleCommandUseSkill::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandUseSkill::tar_role_index() const {
  return tar_role_index_;
}
inline void C2S_BattleCommandUseSkill::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required bytes skill_name = 3;
inline bool C2S_BattleCommandUseSkill::has_skill_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_BattleCommandUseSkill::set_has_skill_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_BattleCommandUseSkill::clear_has_skill_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_BattleCommandUseSkill::clear_skill_name() {
  if (skill_name_ != &::google::protobuf::internal::kEmptyString) {
    skill_name_->clear();
  }
  clear_has_skill_name();
}
inline const ::std::string& C2S_BattleCommandUseSkill::skill_name() const {
  return *skill_name_;
}
inline void C2S_BattleCommandUseSkill::set_skill_name(const ::std::string& value) {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  skill_name_->assign(value);
}
inline void C2S_BattleCommandUseSkill::set_skill_name(const char* value) {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  skill_name_->assign(value);
}
inline void C2S_BattleCommandUseSkill::set_skill_name(const void* value, size_t size) {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  skill_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* C2S_BattleCommandUseSkill::mutable_skill_name() {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  return skill_name_;
}
inline ::std::string* C2S_BattleCommandUseSkill::release_skill_name() {
  clear_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = skill_name_;
    skill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void C2S_BattleCommandUseSkill::set_allocated_skill_name(::std::string* skill_name) {
  if (skill_name_ != &::google::protobuf::internal::kEmptyString) {
    delete skill_name_;
  }
  if (skill_name) {
    set_has_skill_name();
    skill_name_ = skill_name;
  } else {
    clear_has_skill_name();
    skill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BattleCommandSkillInfo

// required sint64 tar_role_index = 1;
inline bool BattleCommandSkillInfo::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleCommandSkillInfo::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleCommandSkillInfo::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleCommandSkillInfo::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 BattleCommandSkillInfo::tar_role_index() const {
  return tar_role_index_;
}
inline void BattleCommandSkillInfo::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required bool crit = 2;
inline bool BattleCommandSkillInfo::has_crit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleCommandSkillInfo::set_has_crit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleCommandSkillInfo::clear_has_crit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleCommandSkillInfo::clear_crit() {
  crit_ = false;
  clear_has_crit();
}
inline bool BattleCommandSkillInfo::crit() const {
  return crit_;
}
inline void BattleCommandSkillInfo::set_crit(bool value) {
  set_has_crit();
  crit_ = value;
}

// repeated sint32 list_power = 3;
inline int BattleCommandSkillInfo::list_power_size() const {
  return list_power_.size();
}
inline void BattleCommandSkillInfo::clear_list_power() {
  list_power_.Clear();
}
inline ::google::protobuf::int32 BattleCommandSkillInfo::list_power(int index) const {
  return list_power_.Get(index);
}
inline void BattleCommandSkillInfo::set_list_power(int index, ::google::protobuf::int32 value) {
  list_power_.Set(index, value);
}
inline void BattleCommandSkillInfo::add_list_power(::google::protobuf::int32 value) {
  list_power_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BattleCommandSkillInfo::list_power() const {
  return list_power_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BattleCommandSkillInfo::mutable_list_power() {
  return &list_power_;
}

// repeated .BattleSkillBuffInfo list_buff = 4;
inline int BattleCommandSkillInfo::list_buff_size() const {
  return list_buff_.size();
}
inline void BattleCommandSkillInfo::clear_list_buff() {
  list_buff_.Clear();
}
inline const ::BattleSkillBuffInfo& BattleCommandSkillInfo::list_buff(int index) const {
  return list_buff_.Get(index);
}
inline ::BattleSkillBuffInfo* BattleCommandSkillInfo::mutable_list_buff(int index) {
  return list_buff_.Mutable(index);
}
inline ::BattleSkillBuffInfo* BattleCommandSkillInfo::add_list_buff() {
  return list_buff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >&
BattleCommandSkillInfo::list_buff() const {
  return list_buff_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleSkillBuffInfo >*
BattleCommandSkillInfo::mutable_list_buff() {
  return &list_buff_;
}

// -------------------------------------------------------------------

// S2C_BattleCommandUseSkill

// required sint64 src_role_index = 1;
inline bool S2C_BattleCommandUseSkill::has_src_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleCommandUseSkill::set_has_src_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleCommandUseSkill::clear_has_src_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleCommandUseSkill::clear_src_role_index() {
  src_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_src_role_index();
}
inline ::google::protobuf::int64 S2C_BattleCommandUseSkill::src_role_index() const {
  return src_role_index_;
}
inline void S2C_BattleCommandUseSkill::set_src_role_index(::google::protobuf::int64 value) {
  set_has_src_role_index();
  src_role_index_ = value;
}

// required sint32 src_role_new_hp = 2;
inline bool S2C_BattleCommandUseSkill::has_src_role_new_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleCommandUseSkill::set_has_src_role_new_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleCommandUseSkill::clear_has_src_role_new_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleCommandUseSkill::clear_src_role_new_hp() {
  src_role_new_hp_ = 0;
  clear_has_src_role_new_hp();
}
inline ::google::protobuf::int32 S2C_BattleCommandUseSkill::src_role_new_hp() const {
  return src_role_new_hp_;
}
inline void S2C_BattleCommandUseSkill::set_src_role_new_hp(::google::protobuf::int32 value) {
  set_has_src_role_new_hp();
  src_role_new_hp_ = value;
}

// required sint32 src_role_new_mp = 3;
inline bool S2C_BattleCommandUseSkill::has_src_role_new_mp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_BattleCommandUseSkill::set_has_src_role_new_mp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_BattleCommandUseSkill::clear_has_src_role_new_mp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_BattleCommandUseSkill::clear_src_role_new_mp() {
  src_role_new_mp_ = 0;
  clear_has_src_role_new_mp();
}
inline ::google::protobuf::int32 S2C_BattleCommandUseSkill::src_role_new_mp() const {
  return src_role_new_mp_;
}
inline void S2C_BattleCommandUseSkill::set_src_role_new_mp(::google::protobuf::int32 value) {
  set_has_src_role_new_mp();
  src_role_new_mp_ = value;
}

// required bytes skill_name = 4;
inline bool S2C_BattleCommandUseSkill::has_skill_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_BattleCommandUseSkill::set_has_skill_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_BattleCommandUseSkill::clear_has_skill_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_BattleCommandUseSkill::clear_skill_name() {
  if (skill_name_ != &::google::protobuf::internal::kEmptyString) {
    skill_name_->clear();
  }
  clear_has_skill_name();
}
inline const ::std::string& S2C_BattleCommandUseSkill::skill_name() const {
  return *skill_name_;
}
inline void S2C_BattleCommandUseSkill::set_skill_name(const ::std::string& value) {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  skill_name_->assign(value);
}
inline void S2C_BattleCommandUseSkill::set_skill_name(const char* value) {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  skill_name_->assign(value);
}
inline void S2C_BattleCommandUseSkill::set_skill_name(const void* value, size_t size) {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  skill_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_BattleCommandUseSkill::mutable_skill_name() {
  set_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    skill_name_ = new ::std::string;
  }
  return skill_name_;
}
inline ::std::string* S2C_BattleCommandUseSkill::release_skill_name() {
  clear_has_skill_name();
  if (skill_name_ == &::google::protobuf::internal::kEmptyString) {
    return nullptr;
  } else {
    ::std::string* temp = skill_name_;
    skill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_BattleCommandUseSkill::set_allocated_skill_name(::std::string* skill_name) {
  if (skill_name_ != &::google::protobuf::internal::kEmptyString) {
    delete skill_name_;
  }
  if (skill_name) {
    set_has_skill_name();
    skill_name_ = skill_name;
  } else {
    clear_has_skill_name();
    skill_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .universal_data skill_info = 5;
inline bool S2C_BattleCommandUseSkill::has_skill_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_BattleCommandUseSkill::set_has_skill_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_BattleCommandUseSkill::clear_has_skill_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_BattleCommandUseSkill::clear_skill_info() {
  if (skill_info_ != nullptr) skill_info_->::universal_data::Clear();
  clear_has_skill_info();
}
inline const ::universal_data& S2C_BattleCommandUseSkill::skill_info() const {
  return skill_info_ != nullptr ? *skill_info_ : *default_instance_->skill_info_;
}
inline ::universal_data* S2C_BattleCommandUseSkill::mutable_skill_info() {
  set_has_skill_info();
  if (skill_info_ == nullptr) skill_info_ = new ::universal_data;
  return skill_info_;
}
inline ::universal_data* S2C_BattleCommandUseSkill::release_skill_info() {
  clear_has_skill_info();
  ::universal_data* temp = skill_info_;
  skill_info_ = nullptr;
  return temp;
}
inline void S2C_BattleCommandUseSkill::set_allocated_skill_info(::universal_data* skill_info) {
  delete skill_info_;
  skill_info_ = skill_info;
  if (skill_info) {
    set_has_skill_info();
  } else {
    clear_has_skill_info();
  }
}

// repeated .BattleCommandSkillInfo list_tar = 6;
inline int S2C_BattleCommandUseSkill::list_tar_size() const {
  return list_tar_.size();
}
inline void S2C_BattleCommandUseSkill::clear_list_tar() {
  list_tar_.Clear();
}
inline const ::BattleCommandSkillInfo& S2C_BattleCommandUseSkill::list_tar(int index) const {
  return list_tar_.Get(index);
}
inline ::BattleCommandSkillInfo* S2C_BattleCommandUseSkill::mutable_list_tar(int index) {
  return list_tar_.Mutable(index);
}
inline ::BattleCommandSkillInfo* S2C_BattleCommandUseSkill::add_list_tar() {
  return list_tar_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >&
S2C_BattleCommandUseSkill::list_tar() const {
  return list_tar_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >*
S2C_BattleCommandUseSkill::mutable_list_tar() {
  return &list_tar_;
}

// repeated .BattleCommandSkillInfo list_tar_splash = 7;
inline int S2C_BattleCommandUseSkill::list_tar_splash_size() const {
  return list_tar_splash_.size();
}
inline void S2C_BattleCommandUseSkill::clear_list_tar_splash() {
  list_tar_splash_.Clear();
}
inline const ::BattleCommandSkillInfo& S2C_BattleCommandUseSkill::list_tar_splash(int index) const {
  return list_tar_splash_.Get(index);
}
inline ::BattleCommandSkillInfo* S2C_BattleCommandUseSkill::mutable_list_tar_splash(int index) {
  return list_tar_splash_.Mutable(index);
}
inline ::BattleCommandSkillInfo* S2C_BattleCommandUseSkill::add_list_tar_splash() {
  return list_tar_splash_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >&
S2C_BattleCommandUseSkill::list_tar_splash() const {
  return list_tar_splash_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleCommandSkillInfo >*
S2C_BattleCommandUseSkill::mutable_list_tar_splash() {
  return &list_tar_splash_;
}

// -------------------------------------------------------------------

// S2C_BattleCommandTriggerBuff

// required sint64 tar_role_index = 1;
inline bool S2C_BattleCommandTriggerBuff::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleCommandTriggerBuff::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleCommandTriggerBuff::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleCommandTriggerBuff::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2C_BattleCommandTriggerBuff::tar_role_index() const {
  return tar_role_index_;
}
inline void S2C_BattleCommandTriggerBuff::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required .BattleSkillBuffInfo buff = 2;
inline bool S2C_BattleCommandTriggerBuff::has_buff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleCommandTriggerBuff::set_has_buff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleCommandTriggerBuff::clear_has_buff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleCommandTriggerBuff::clear_buff() {
  if (buff_ != nullptr) buff_->::BattleSkillBuffInfo::Clear();
  clear_has_buff();
}
inline const ::BattleSkillBuffInfo& S2C_BattleCommandTriggerBuff::buff() const {
  return buff_ != nullptr ? *buff_ : *default_instance_->buff_;
}
inline ::BattleSkillBuffInfo* S2C_BattleCommandTriggerBuff::mutable_buff() {
  set_has_buff();
  if (buff_ == nullptr) buff_ = new ::BattleSkillBuffInfo;
  return buff_;
}
inline ::BattleSkillBuffInfo* S2C_BattleCommandTriggerBuff::release_buff() {
  clear_has_buff();
  ::BattleSkillBuffInfo* temp = buff_;
  buff_ = nullptr;
  return temp;
}
inline void S2C_BattleCommandTriggerBuff::set_allocated_buff(::BattleSkillBuffInfo* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
}

// -------------------------------------------------------------------

// S2C_BattleCommandRemoveBuff

// required sint64 tar_role_index = 1;
inline bool S2C_BattleCommandRemoveBuff::has_tar_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BattleCommandRemoveBuff::set_has_tar_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BattleCommandRemoveBuff::clear_has_tar_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BattleCommandRemoveBuff::clear_tar_role_index() {
  tar_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_tar_role_index();
}
inline ::google::protobuf::int64 S2C_BattleCommandRemoveBuff::tar_role_index() const {
  return tar_role_index_;
}
inline void S2C_BattleCommandRemoveBuff::set_tar_role_index(::google::protobuf::int64 value) {
  set_has_tar_role_index();
  tar_role_index_ = value;
}

// required sint32 buff_id = 2;
inline bool S2C_BattleCommandRemoveBuff::has_buff_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_BattleCommandRemoveBuff::set_has_buff_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_BattleCommandRemoveBuff::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_BattleCommandRemoveBuff::clear_buff_id() {
  buff_id_ = 0;
  clear_has_buff_id();
}
inline ::google::protobuf::int32 S2C_BattleCommandRemoveBuff::buff_id() const {
  return buff_id_;
}
inline void S2C_BattleCommandRemoveBuff::set_buff_id(::google::protobuf::int32 value) {
  set_has_buff_id();
  buff_id_ = value;
}

// -------------------------------------------------------------------

// C2S_BattleCommandCallSummon

// required sint64 role_index = 1;
inline bool C2S_BattleCommandCallSummon::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BattleCommandCallSummon::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BattleCommandCallSummon::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BattleCommandCallSummon::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandCallSummon::role_index() const {
  return role_index_;
}
inline void C2S_BattleCommandCallSummon::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}

// required sint64 summon_role_index = 2;
inline bool C2S_BattleCommandCallSummon::has_summon_role_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_BattleCommandCallSummon::set_has_summon_role_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_BattleCommandCallSummon::clear_has_summon_role_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_BattleCommandCallSummon::clear_summon_role_index() {
  summon_role_index_ = GOOGLE_LONGLONG(0);
  clear_has_summon_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandCallSummon::summon_role_index() const {
  return summon_role_index_;
}
inline void C2S_BattleCommandCallSummon::set_summon_role_index(::google::protobuf::int64 value) {
  set_has_summon_role_index();
  summon_role_index_ = value;
}

// -------------------------------------------------------------------

// C2S_BattleCommandActionDone

// required sint64 role_index = 1;
inline bool C2S_BattleCommandActionDone::has_role_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BattleCommandActionDone::set_has_role_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BattleCommandActionDone::clear_has_role_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BattleCommandActionDone::clear_role_index() {
  role_index_ = GOOGLE_LONGLONG(0);
  clear_has_role_index();
}
inline ::google::protobuf::int64 C2S_BattleCommandActionDone::role_index() const {
  return role_index_;
}
inline void C2S_BattleCommandActionDone::set_role_index(::google::protobuf::int64 value) {
  set_has_role_index();
  role_index_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Battle_2eproto__INCLUDED
